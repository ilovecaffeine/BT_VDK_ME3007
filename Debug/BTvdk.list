
BTvdk.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000063dc  08000110  08000110  00001110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000450  080064f0  080064f0  000074f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006940  08006940  000081d4  2**0
                  CONTENTS
  4 .ARM          00000008  08006940  08006940  00007940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006948  08006948  000081d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006948  08006948  00007948  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800694c  0800694c  0000794c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  08006950  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  200001d4  08006b24  000081d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000344  08006b24  00008344  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000081d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000032ad  00000000  00000000  000081fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000010da  00000000  00000000  0000b4aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000004a8  00000000  00000000  0000c588  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000350  00000000  00000000  0000ca30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00016e21  00000000  00000000  0000cd80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00005ec2  00000000  00000000  00023ba1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0007f0c0  00000000  00000000  00029a63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000a8b23  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000256c  00000000  00000000  000a8b68  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005c  00000000  00000000  000ab0d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	@ (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	@ (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d4 	.word	0x200001d4
 800012c:	00000000 	.word	0x00000000
 8000130:	080064d4 	.word	0x080064d4

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	@ (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	@ (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	@ (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001d8 	.word	0x200001d8
 800014c:	080064d4 	.word	0x080064d4

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	@ 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_d2f>:
 8000ac8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000acc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000ad0:	bf24      	itt	cs
 8000ad2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000ad6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000ada:	d90d      	bls.n	8000af8 <__aeabi_d2f+0x30>
 8000adc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000ae0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ae8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000aec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af0:	bf08      	it	eq
 8000af2:	f020 0001 	biceq.w	r0, r0, #1
 8000af6:	4770      	bx	lr
 8000af8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000afc:	d121      	bne.n	8000b42 <__aeabi_d2f+0x7a>
 8000afe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b02:	bfbc      	itt	lt
 8000b04:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b08:	4770      	bxlt	lr
 8000b0a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000b0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b12:	f1c2 0218 	rsb	r2, r2, #24
 8000b16:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b22:	bf18      	it	ne
 8000b24:	f040 0001 	orrne.w	r0, r0, #1
 8000b28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b34:	ea40 000c 	orr.w	r0, r0, ip
 8000b38:	fa23 f302 	lsr.w	r3, r3, r2
 8000b3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b40:	e7cc      	b.n	8000adc <__aeabi_d2f+0x14>
 8000b42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b46:	d107      	bne.n	8000b58 <__aeabi_d2f+0x90>
 8000b48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b4c:	bf1e      	ittt	ne
 8000b4e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000b52:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000b56:	4770      	bxne	lr
 8000b58:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000b5c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b60:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <__aeabi_d2lz>:
 8000b68:	b538      	push	{r3, r4, r5, lr}
 8000b6a:	2200      	movs	r2, #0
 8000b6c:	2300      	movs	r3, #0
 8000b6e:	4604      	mov	r4, r0
 8000b70:	460d      	mov	r5, r1
 8000b72:	f7ff ff23 	bl	80009bc <__aeabi_dcmplt>
 8000b76:	b928      	cbnz	r0, 8000b84 <__aeabi_d2lz+0x1c>
 8000b78:	4620      	mov	r0, r4
 8000b7a:	4629      	mov	r1, r5
 8000b7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b80:	f000 b80a 	b.w	8000b98 <__aeabi_d2ulz>
 8000b84:	4620      	mov	r0, r4
 8000b86:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000b8a:	f000 f805 	bl	8000b98 <__aeabi_d2ulz>
 8000b8e:	4240      	negs	r0, r0
 8000b90:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000b94:	bd38      	pop	{r3, r4, r5, pc}
 8000b96:	bf00      	nop

08000b98 <__aeabi_d2ulz>:
 8000b98:	b5d0      	push	{r4, r6, r7, lr}
 8000b9a:	2200      	movs	r2, #0
 8000b9c:	4b0b      	ldr	r3, [pc, #44]	@ (8000bcc <__aeabi_d2ulz+0x34>)
 8000b9e:	4606      	mov	r6, r0
 8000ba0:	460f      	mov	r7, r1
 8000ba2:	f7ff fc99 	bl	80004d8 <__aeabi_dmul>
 8000ba6:	f7ff ff6f 	bl	8000a88 <__aeabi_d2uiz>
 8000baa:	4604      	mov	r4, r0
 8000bac:	f7ff fc1a 	bl	80003e4 <__aeabi_ui2d>
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	4b07      	ldr	r3, [pc, #28]	@ (8000bd0 <__aeabi_d2ulz+0x38>)
 8000bb4:	f7ff fc90 	bl	80004d8 <__aeabi_dmul>
 8000bb8:	4602      	mov	r2, r0
 8000bba:	460b      	mov	r3, r1
 8000bbc:	4630      	mov	r0, r6
 8000bbe:	4639      	mov	r1, r7
 8000bc0:	f7ff fad2 	bl	8000168 <__aeabi_dsub>
 8000bc4:	f7ff ff60 	bl	8000a88 <__aeabi_d2uiz>
 8000bc8:	4621      	mov	r1, r4
 8000bca:	bdd0      	pop	{r4, r6, r7, pc}
 8000bcc:	3df00000 	.word	0x3df00000
 8000bd0:	41f00000 	.word	0x41f00000

08000bd4 <HAL_GPIO_EXTI_Callback>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 8000bd4:	b580      	push	{r7, lr}
 8000bd6:	b082      	sub	sp, #8
 8000bd8:	af00      	add	r7, sp, #0
 8000bda:	4603      	mov	r3, r0
 8000bdc:	80fb      	strh	r3, [r7, #6]
    // Kiểm tra nếu ngắt xảy ra trên chân PB7 (Button_1)
    if (GPIO_Pin == GPIO_PIN_0) {
 8000bde:	88fb      	ldrh	r3, [r7, #6]
 8000be0:	2b01      	cmp	r3, #1
 8000be2:	d103      	bne.n	8000bec <HAL_GPIO_EXTI_Callback+0x18>
        // Toggle đèn LED
//         if (HAL_GPIO_ReadPin(GPIOA, Button_1_Pin) == GPIO_PIN_SET) {
        HAL_GPIO_TogglePin(Led_1_GPIO_Port, Led_1_Pin);
 8000be4:	2101      	movs	r1, #1
 8000be6:	4803      	ldr	r0, [pc, #12]	@ (8000bf4 <HAL_GPIO_EXTI_Callback+0x20>)
 8000be8:	f000 fd0a 	bl	8001600 <HAL_GPIO_TogglePin>
         //}
    }
}
 8000bec:	bf00      	nop
 8000bee:	3708      	adds	r7, #8
 8000bf0:	46bd      	mov	sp, r7
 8000bf2:	bd80      	pop	{r7, pc}
 8000bf4:	40010c00 	.word	0x40010c00

08000bf8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000bf8:	b580      	push	{r7, lr}
 8000bfa:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000bfc:	f000 f9fc 	bl	8000ff8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000c00:	f000 f804 	bl	8000c0c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000c04:	f000 f83e 	bl	8000c84 <MX_GPIO_Init>
//
//HAL_UART_Transmit(&huart1, pData, Size, Timeout);
//HAL_UART_Receive(&huart1, pData, Size, Timeout);


    while (1)
 8000c08:	bf00      	nop
 8000c0a:	e7fd      	b.n	8000c08 <main+0x10>

08000c0c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000c0c:	b580      	push	{r7, lr}
 8000c0e:	b090      	sub	sp, #64	@ 0x40
 8000c10:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000c12:	f107 0318 	add.w	r3, r7, #24
 8000c16:	2228      	movs	r2, #40	@ 0x28
 8000c18:	2100      	movs	r1, #0
 8000c1a:	4618      	mov	r0, r3
 8000c1c:	f002 f891 	bl	8002d42 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000c20:	1d3b      	adds	r3, r7, #4
 8000c22:	2200      	movs	r2, #0
 8000c24:	601a      	str	r2, [r3, #0]
 8000c26:	605a      	str	r2, [r3, #4]
 8000c28:	609a      	str	r2, [r3, #8]
 8000c2a:	60da      	str	r2, [r3, #12]
 8000c2c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000c2e:	2302      	movs	r3, #2
 8000c30:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000c32:	2301      	movs	r3, #1
 8000c34:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000c36:	2310      	movs	r3, #16
 8000c38:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8000c3a:	2300      	movs	r3, #0
 8000c3c:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000c3e:	f107 0318 	add.w	r3, r7, #24
 8000c42:	4618      	mov	r0, r3
 8000c44:	f000 fd0e 	bl	8001664 <HAL_RCC_OscConfig>
 8000c48:	4603      	mov	r3, r0
 8000c4a:	2b00      	cmp	r3, #0
 8000c4c:	d001      	beq.n	8000c52 <SystemClock_Config+0x46>
  {
    Error_Handler();
 8000c4e:	f000 f87b 	bl	8000d48 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000c52:	230f      	movs	r3, #15
 8000c54:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000c56:	2300      	movs	r3, #0
 8000c58:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000c5e:	2300      	movs	r3, #0
 8000c60:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000c62:	2300      	movs	r3, #0
 8000c64:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000c66:	1d3b      	adds	r3, r7, #4
 8000c68:	2100      	movs	r1, #0
 8000c6a:	4618      	mov	r0, r3
 8000c6c:	f000 ff7c 	bl	8001b68 <HAL_RCC_ClockConfig>
 8000c70:	4603      	mov	r3, r0
 8000c72:	2b00      	cmp	r3, #0
 8000c74:	d001      	beq.n	8000c7a <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8000c76:	f000 f867 	bl	8000d48 <Error_Handler>
  }
}
 8000c7a:	bf00      	nop
 8000c7c:	3740      	adds	r7, #64	@ 0x40
 8000c7e:	46bd      	mov	sp, r7
 8000c80:	bd80      	pop	{r7, pc}
	...

08000c84 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c84:	b580      	push	{r7, lr}
 8000c86:	b088      	sub	sp, #32
 8000c88:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c8a:	f107 0310 	add.w	r3, r7, #16
 8000c8e:	2200      	movs	r2, #0
 8000c90:	601a      	str	r2, [r3, #0]
 8000c92:	605a      	str	r2, [r3, #4]
 8000c94:	609a      	str	r2, [r3, #8]
 8000c96:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c98:	4b27      	ldr	r3, [pc, #156]	@ (8000d38 <MX_GPIO_Init+0xb4>)
 8000c9a:	699b      	ldr	r3, [r3, #24]
 8000c9c:	4a26      	ldr	r2, [pc, #152]	@ (8000d38 <MX_GPIO_Init+0xb4>)
 8000c9e:	f043 0320 	orr.w	r3, r3, #32
 8000ca2:	6193      	str	r3, [r2, #24]
 8000ca4:	4b24      	ldr	r3, [pc, #144]	@ (8000d38 <MX_GPIO_Init+0xb4>)
 8000ca6:	699b      	ldr	r3, [r3, #24]
 8000ca8:	f003 0320 	and.w	r3, r3, #32
 8000cac:	60fb      	str	r3, [r7, #12]
 8000cae:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cb0:	4b21      	ldr	r3, [pc, #132]	@ (8000d38 <MX_GPIO_Init+0xb4>)
 8000cb2:	699b      	ldr	r3, [r3, #24]
 8000cb4:	4a20      	ldr	r2, [pc, #128]	@ (8000d38 <MX_GPIO_Init+0xb4>)
 8000cb6:	f043 0304 	orr.w	r3, r3, #4
 8000cba:	6193      	str	r3, [r2, #24]
 8000cbc:	4b1e      	ldr	r3, [pc, #120]	@ (8000d38 <MX_GPIO_Init+0xb4>)
 8000cbe:	699b      	ldr	r3, [r3, #24]
 8000cc0:	f003 0304 	and.w	r3, r3, #4
 8000cc4:	60bb      	str	r3, [r7, #8]
 8000cc6:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000cc8:	4b1b      	ldr	r3, [pc, #108]	@ (8000d38 <MX_GPIO_Init+0xb4>)
 8000cca:	699b      	ldr	r3, [r3, #24]
 8000ccc:	4a1a      	ldr	r2, [pc, #104]	@ (8000d38 <MX_GPIO_Init+0xb4>)
 8000cce:	f043 0308 	orr.w	r3, r3, #8
 8000cd2:	6193      	str	r3, [r2, #24]
 8000cd4:	4b18      	ldr	r3, [pc, #96]	@ (8000d38 <MX_GPIO_Init+0xb4>)
 8000cd6:	699b      	ldr	r3, [r3, #24]
 8000cd8:	f003 0308 	and.w	r3, r3, #8
 8000cdc:	607b      	str	r3, [r7, #4]
 8000cde:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Led_1_GPIO_Port, Led_1_Pin, GPIO_PIN_RESET);
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	2101      	movs	r1, #1
 8000ce4:	4815      	ldr	r0, [pc, #84]	@ (8000d3c <MX_GPIO_Init+0xb8>)
 8000ce6:	f000 fc73 	bl	80015d0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : Button_1_Pin */
  GPIO_InitStruct.Pin = Button_1_Pin;
 8000cea:	2301      	movs	r3, #1
 8000cec:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000cee:	4b14      	ldr	r3, [pc, #80]	@ (8000d40 <MX_GPIO_Init+0xbc>)
 8000cf0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000cf2:	2301      	movs	r3, #1
 8000cf4:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(Button_1_GPIO_Port, &GPIO_InitStruct);
 8000cf6:	f107 0310 	add.w	r3, r7, #16
 8000cfa:	4619      	mov	r1, r3
 8000cfc:	4811      	ldr	r0, [pc, #68]	@ (8000d44 <MX_GPIO_Init+0xc0>)
 8000cfe:	f000 faeb 	bl	80012d8 <HAL_GPIO_Init>

  /*Configure GPIO pin : Led_1_Pin */
  GPIO_InitStruct.Pin = Led_1_Pin;
 8000d02:	2301      	movs	r3, #1
 8000d04:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d06:	2301      	movs	r3, #1
 8000d08:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d0a:	2300      	movs	r3, #0
 8000d0c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d0e:	2302      	movs	r3, #2
 8000d10:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(Led_1_GPIO_Port, &GPIO_InitStruct);
 8000d12:	f107 0310 	add.w	r3, r7, #16
 8000d16:	4619      	mov	r1, r3
 8000d18:	4808      	ldr	r0, [pc, #32]	@ (8000d3c <MX_GPIO_Init+0xb8>)
 8000d1a:	f000 fadd 	bl	80012d8 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 8000d1e:	2200      	movs	r2, #0
 8000d20:	2100      	movs	r1, #0
 8000d22:	2006      	movs	r0, #6
 8000d24:	f000 faa1 	bl	800126a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8000d28:	2006      	movs	r0, #6
 8000d2a:	f000 faba 	bl	80012a2 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000d2e:	bf00      	nop
 8000d30:	3720      	adds	r7, #32
 8000d32:	46bd      	mov	sp, r7
 8000d34:	bd80      	pop	{r7, pc}
 8000d36:	bf00      	nop
 8000d38:	40021000 	.word	0x40021000
 8000d3c:	40010c00 	.word	0x40010c00
 8000d40:	10110000 	.word	0x10110000
 8000d44:	40010800 	.word	0x40010800

08000d48 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d48:	b480      	push	{r7}
 8000d4a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d4c:	b672      	cpsid	i
}
 8000d4e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d50:	bf00      	nop
 8000d52:	e7fd      	b.n	8000d50 <Error_Handler+0x8>

08000d54 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000d54:	b480      	push	{r7}
 8000d56:	b085      	sub	sp, #20
 8000d58:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000d5a:	4b15      	ldr	r3, [pc, #84]	@ (8000db0 <HAL_MspInit+0x5c>)
 8000d5c:	699b      	ldr	r3, [r3, #24]
 8000d5e:	4a14      	ldr	r2, [pc, #80]	@ (8000db0 <HAL_MspInit+0x5c>)
 8000d60:	f043 0301 	orr.w	r3, r3, #1
 8000d64:	6193      	str	r3, [r2, #24]
 8000d66:	4b12      	ldr	r3, [pc, #72]	@ (8000db0 <HAL_MspInit+0x5c>)
 8000d68:	699b      	ldr	r3, [r3, #24]
 8000d6a:	f003 0301 	and.w	r3, r3, #1
 8000d6e:	60bb      	str	r3, [r7, #8]
 8000d70:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000d72:	4b0f      	ldr	r3, [pc, #60]	@ (8000db0 <HAL_MspInit+0x5c>)
 8000d74:	69db      	ldr	r3, [r3, #28]
 8000d76:	4a0e      	ldr	r2, [pc, #56]	@ (8000db0 <HAL_MspInit+0x5c>)
 8000d78:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000d7c:	61d3      	str	r3, [r2, #28]
 8000d7e:	4b0c      	ldr	r3, [pc, #48]	@ (8000db0 <HAL_MspInit+0x5c>)
 8000d80:	69db      	ldr	r3, [r3, #28]
 8000d82:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000d86:	607b      	str	r3, [r7, #4]
 8000d88:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000d8a:	4b0a      	ldr	r3, [pc, #40]	@ (8000db4 <HAL_MspInit+0x60>)
 8000d8c:	685b      	ldr	r3, [r3, #4]
 8000d8e:	60fb      	str	r3, [r7, #12]
 8000d90:	68fb      	ldr	r3, [r7, #12]
 8000d92:	f023 63e0 	bic.w	r3, r3, #117440512	@ 0x7000000
 8000d96:	60fb      	str	r3, [r7, #12]
 8000d98:	68fb      	ldr	r3, [r7, #12]
 8000d9a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000d9e:	60fb      	str	r3, [r7, #12]
 8000da0:	4a04      	ldr	r2, [pc, #16]	@ (8000db4 <HAL_MspInit+0x60>)
 8000da2:	68fb      	ldr	r3, [r7, #12]
 8000da4:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000da6:	bf00      	nop
 8000da8:	3714      	adds	r7, #20
 8000daa:	46bd      	mov	sp, r7
 8000dac:	bc80      	pop	{r7}
 8000dae:	4770      	bx	lr
 8000db0:	40021000 	.word	0x40021000
 8000db4:	40010000 	.word	0x40010000

08000db8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000db8:	b480      	push	{r7}
 8000dba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000dbc:	bf00      	nop
 8000dbe:	e7fd      	b.n	8000dbc <NMI_Handler+0x4>

08000dc0 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000dc0:	b480      	push	{r7}
 8000dc2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000dc4:	bf00      	nop
 8000dc6:	e7fd      	b.n	8000dc4 <HardFault_Handler+0x4>

08000dc8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000dc8:	b480      	push	{r7}
 8000dca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000dcc:	bf00      	nop
 8000dce:	e7fd      	b.n	8000dcc <MemManage_Handler+0x4>

08000dd0 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000dd0:	b480      	push	{r7}
 8000dd2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000dd4:	bf00      	nop
 8000dd6:	e7fd      	b.n	8000dd4 <BusFault_Handler+0x4>

08000dd8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000dd8:	b480      	push	{r7}
 8000dda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000ddc:	bf00      	nop
 8000dde:	e7fd      	b.n	8000ddc <UsageFault_Handler+0x4>

08000de0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000de0:	b480      	push	{r7}
 8000de2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000de4:	bf00      	nop
 8000de6:	46bd      	mov	sp, r7
 8000de8:	bc80      	pop	{r7}
 8000dea:	4770      	bx	lr

08000dec <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000dec:	b480      	push	{r7}
 8000dee:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000df0:	bf00      	nop
 8000df2:	46bd      	mov	sp, r7
 8000df4:	bc80      	pop	{r7}
 8000df6:	4770      	bx	lr

08000df8 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000df8:	b480      	push	{r7}
 8000dfa:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000dfc:	bf00      	nop
 8000dfe:	46bd      	mov	sp, r7
 8000e00:	bc80      	pop	{r7}
 8000e02:	4770      	bx	lr

08000e04 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000e04:	b580      	push	{r7, lr}
 8000e06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000e08:	f000 f93c 	bl	8001084 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000e0c:	bf00      	nop
 8000e0e:	bd80      	pop	{r7, pc}

08000e10 <EXTI0_IRQHandler>:

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
 8000e10:	b580      	push	{r7, lr}
 8000e12:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_IRQn 0 */

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(Button_1_Pin);
 8000e14:	2001      	movs	r0, #1
 8000e16:	f000 fc0d 	bl	8001634 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}
 8000e1a:	bf00      	nop
 8000e1c:	bd80      	pop	{r7, pc}

08000e1e <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000e1e:	b480      	push	{r7}
 8000e20:	af00      	add	r7, sp, #0
  return 1;
 8000e22:	2301      	movs	r3, #1
}
 8000e24:	4618      	mov	r0, r3
 8000e26:	46bd      	mov	sp, r7
 8000e28:	bc80      	pop	{r7}
 8000e2a:	4770      	bx	lr

08000e2c <_kill>:

int _kill(int pid, int sig)
{
 8000e2c:	b580      	push	{r7, lr}
 8000e2e:	b082      	sub	sp, #8
 8000e30:	af00      	add	r7, sp, #0
 8000e32:	6078      	str	r0, [r7, #4]
 8000e34:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000e36:	f001 ffd7 	bl	8002de8 <__errno>
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	2216      	movs	r2, #22
 8000e3e:	601a      	str	r2, [r3, #0]
  return -1;
 8000e40:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000e44:	4618      	mov	r0, r3
 8000e46:	3708      	adds	r7, #8
 8000e48:	46bd      	mov	sp, r7
 8000e4a:	bd80      	pop	{r7, pc}

08000e4c <_exit>:

void _exit (int status)
{
 8000e4c:	b580      	push	{r7, lr}
 8000e4e:	b082      	sub	sp, #8
 8000e50:	af00      	add	r7, sp, #0
 8000e52:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8000e54:	f04f 31ff 	mov.w	r1, #4294967295
 8000e58:	6878      	ldr	r0, [r7, #4]
 8000e5a:	f7ff ffe7 	bl	8000e2c <_kill>
  while (1) {}    /* Make sure we hang here */
 8000e5e:	bf00      	nop
 8000e60:	e7fd      	b.n	8000e5e <_exit+0x12>

08000e62 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000e62:	b580      	push	{r7, lr}
 8000e64:	b086      	sub	sp, #24
 8000e66:	af00      	add	r7, sp, #0
 8000e68:	60f8      	str	r0, [r7, #12]
 8000e6a:	60b9      	str	r1, [r7, #8]
 8000e6c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000e6e:	2300      	movs	r3, #0
 8000e70:	617b      	str	r3, [r7, #20]
 8000e72:	e00a      	b.n	8000e8a <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000e74:	f3af 8000 	nop.w
 8000e78:	4601      	mov	r1, r0
 8000e7a:	68bb      	ldr	r3, [r7, #8]
 8000e7c:	1c5a      	adds	r2, r3, #1
 8000e7e:	60ba      	str	r2, [r7, #8]
 8000e80:	b2ca      	uxtb	r2, r1
 8000e82:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000e84:	697b      	ldr	r3, [r7, #20]
 8000e86:	3301      	adds	r3, #1
 8000e88:	617b      	str	r3, [r7, #20]
 8000e8a:	697a      	ldr	r2, [r7, #20]
 8000e8c:	687b      	ldr	r3, [r7, #4]
 8000e8e:	429a      	cmp	r2, r3
 8000e90:	dbf0      	blt.n	8000e74 <_read+0x12>
  }

  return len;
 8000e92:	687b      	ldr	r3, [r7, #4]
}
 8000e94:	4618      	mov	r0, r3
 8000e96:	3718      	adds	r7, #24
 8000e98:	46bd      	mov	sp, r7
 8000e9a:	bd80      	pop	{r7, pc}

08000e9c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000e9c:	b580      	push	{r7, lr}
 8000e9e:	b086      	sub	sp, #24
 8000ea0:	af00      	add	r7, sp, #0
 8000ea2:	60f8      	str	r0, [r7, #12]
 8000ea4:	60b9      	str	r1, [r7, #8]
 8000ea6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	617b      	str	r3, [r7, #20]
 8000eac:	e009      	b.n	8000ec2 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000eae:	68bb      	ldr	r3, [r7, #8]
 8000eb0:	1c5a      	adds	r2, r3, #1
 8000eb2:	60ba      	str	r2, [r7, #8]
 8000eb4:	781b      	ldrb	r3, [r3, #0]
 8000eb6:	4618      	mov	r0, r3
 8000eb8:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ebc:	697b      	ldr	r3, [r7, #20]
 8000ebe:	3301      	adds	r3, #1
 8000ec0:	617b      	str	r3, [r7, #20]
 8000ec2:	697a      	ldr	r2, [r7, #20]
 8000ec4:	687b      	ldr	r3, [r7, #4]
 8000ec6:	429a      	cmp	r2, r3
 8000ec8:	dbf1      	blt.n	8000eae <_write+0x12>
  }
  return len;
 8000eca:	687b      	ldr	r3, [r7, #4]
}
 8000ecc:	4618      	mov	r0, r3
 8000ece:	3718      	adds	r7, #24
 8000ed0:	46bd      	mov	sp, r7
 8000ed2:	bd80      	pop	{r7, pc}

08000ed4 <_close>:

int _close(int file)
{
 8000ed4:	b480      	push	{r7}
 8000ed6:	b083      	sub	sp, #12
 8000ed8:	af00      	add	r7, sp, #0
 8000eda:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000edc:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000ee0:	4618      	mov	r0, r3
 8000ee2:	370c      	adds	r7, #12
 8000ee4:	46bd      	mov	sp, r7
 8000ee6:	bc80      	pop	{r7}
 8000ee8:	4770      	bx	lr

08000eea <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000eea:	b480      	push	{r7}
 8000eec:	b083      	sub	sp, #12
 8000eee:	af00      	add	r7, sp, #0
 8000ef0:	6078      	str	r0, [r7, #4]
 8000ef2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000ef4:	683b      	ldr	r3, [r7, #0]
 8000ef6:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000efa:	605a      	str	r2, [r3, #4]
  return 0;
 8000efc:	2300      	movs	r3, #0
}
 8000efe:	4618      	mov	r0, r3
 8000f00:	370c      	adds	r7, #12
 8000f02:	46bd      	mov	sp, r7
 8000f04:	bc80      	pop	{r7}
 8000f06:	4770      	bx	lr

08000f08 <_isatty>:

int _isatty(int file)
{
 8000f08:	b480      	push	{r7}
 8000f0a:	b083      	sub	sp, #12
 8000f0c:	af00      	add	r7, sp, #0
 8000f0e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000f10:	2301      	movs	r3, #1
}
 8000f12:	4618      	mov	r0, r3
 8000f14:	370c      	adds	r7, #12
 8000f16:	46bd      	mov	sp, r7
 8000f18:	bc80      	pop	{r7}
 8000f1a:	4770      	bx	lr

08000f1c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000f1c:	b480      	push	{r7}
 8000f1e:	b085      	sub	sp, #20
 8000f20:	af00      	add	r7, sp, #0
 8000f22:	60f8      	str	r0, [r7, #12]
 8000f24:	60b9      	str	r1, [r7, #8]
 8000f26:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000f28:	2300      	movs	r3, #0
}
 8000f2a:	4618      	mov	r0, r3
 8000f2c:	3714      	adds	r7, #20
 8000f2e:	46bd      	mov	sp, r7
 8000f30:	bc80      	pop	{r7}
 8000f32:	4770      	bx	lr

08000f34 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000f34:	b580      	push	{r7, lr}
 8000f36:	b086      	sub	sp, #24
 8000f38:	af00      	add	r7, sp, #0
 8000f3a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000f3c:	4a14      	ldr	r2, [pc, #80]	@ (8000f90 <_sbrk+0x5c>)
 8000f3e:	4b15      	ldr	r3, [pc, #84]	@ (8000f94 <_sbrk+0x60>)
 8000f40:	1ad3      	subs	r3, r2, r3
 8000f42:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000f44:	697b      	ldr	r3, [r7, #20]
 8000f46:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f48:	4b13      	ldr	r3, [pc, #76]	@ (8000f98 <_sbrk+0x64>)
 8000f4a:	681b      	ldr	r3, [r3, #0]
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d102      	bne.n	8000f56 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000f50:	4b11      	ldr	r3, [pc, #68]	@ (8000f98 <_sbrk+0x64>)
 8000f52:	4a12      	ldr	r2, [pc, #72]	@ (8000f9c <_sbrk+0x68>)
 8000f54:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f56:	4b10      	ldr	r3, [pc, #64]	@ (8000f98 <_sbrk+0x64>)
 8000f58:	681a      	ldr	r2, [r3, #0]
 8000f5a:	687b      	ldr	r3, [r7, #4]
 8000f5c:	4413      	add	r3, r2
 8000f5e:	693a      	ldr	r2, [r7, #16]
 8000f60:	429a      	cmp	r2, r3
 8000f62:	d207      	bcs.n	8000f74 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000f64:	f001 ff40 	bl	8002de8 <__errno>
 8000f68:	4603      	mov	r3, r0
 8000f6a:	220c      	movs	r2, #12
 8000f6c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000f6e:	f04f 33ff 	mov.w	r3, #4294967295
 8000f72:	e009      	b.n	8000f88 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000f74:	4b08      	ldr	r3, [pc, #32]	@ (8000f98 <_sbrk+0x64>)
 8000f76:	681b      	ldr	r3, [r3, #0]
 8000f78:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000f7a:	4b07      	ldr	r3, [pc, #28]	@ (8000f98 <_sbrk+0x64>)
 8000f7c:	681a      	ldr	r2, [r3, #0]
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	4413      	add	r3, r2
 8000f82:	4a05      	ldr	r2, [pc, #20]	@ (8000f98 <_sbrk+0x64>)
 8000f84:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000f86:	68fb      	ldr	r3, [r7, #12]
}
 8000f88:	4618      	mov	r0, r3
 8000f8a:	3718      	adds	r7, #24
 8000f8c:	46bd      	mov	sp, r7
 8000f8e:	bd80      	pop	{r7, pc}
 8000f90:	20002800 	.word	0x20002800
 8000f94:	00000400 	.word	0x00000400
 8000f98:	200001f0 	.word	0x200001f0
 8000f9c:	20000348 	.word	0x20000348

08000fa0 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000fa0:	b480      	push	{r7}
 8000fa2:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000fa4:	bf00      	nop
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	bc80      	pop	{r7}
 8000faa:	4770      	bx	lr

08000fac <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8000fac:	f7ff fff8 	bl	8000fa0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000fb0:	480b      	ldr	r0, [pc, #44]	@ (8000fe0 <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8000fb2:	490c      	ldr	r1, [pc, #48]	@ (8000fe4 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8000fb4:	4a0c      	ldr	r2, [pc, #48]	@ (8000fe8 <LoopFillZerobss+0x16>)
  movs r3, #0
 8000fb6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000fb8:	e002      	b.n	8000fc0 <LoopCopyDataInit>

08000fba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000fba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000fbc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000fbe:	3304      	adds	r3, #4

08000fc0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000fc0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000fc2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000fc4:	d3f9      	bcc.n	8000fba <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000fc6:	4a09      	ldr	r2, [pc, #36]	@ (8000fec <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 8000fc8:	4c09      	ldr	r4, [pc, #36]	@ (8000ff0 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000fca:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000fcc:	e001      	b.n	8000fd2 <LoopFillZerobss>

08000fce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000fce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000fd0:	3204      	adds	r2, #4

08000fd2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000fd2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000fd4:	d3fb      	bcc.n	8000fce <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000fd6:	f001 ff0d 	bl	8002df4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000fda:	f7ff fe0d 	bl	8000bf8 <main>
  bx lr
 8000fde:	4770      	bx	lr
  ldr r0, =_sdata
 8000fe0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000fe4:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 8000fe8:	08006950 	.word	0x08006950
  ldr r2, =_sbss
 8000fec:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 8000ff0:	20000344 	.word	0x20000344

08000ff4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000ff4:	e7fe      	b.n	8000ff4 <ADC1_2_IRQHandler>
	...

08000ff8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8000ff8:	b580      	push	{r7, lr}
 8000ffa:	af00      	add	r7, sp, #0
    defined(STM32F102x6) || defined(STM32F102xB) || \
    defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) || \
    defined(STM32F105xC) || defined(STM32F107xC)

  /* Prefetch buffer is not available on value line devices */
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8000ffc:	4b08      	ldr	r3, [pc, #32]	@ (8001020 <HAL_Init+0x28>)
 8000ffe:	681b      	ldr	r3, [r3, #0]
 8001000:	4a07      	ldr	r2, [pc, #28]	@ (8001020 <HAL_Init+0x28>)
 8001002:	f043 0310 	orr.w	r3, r3, #16
 8001006:	6013      	str	r3, [r2, #0]
#endif
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001008:	2003      	movs	r0, #3
 800100a:	f000 f923 	bl	8001254 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800100e:	200f      	movs	r0, #15
 8001010:	f000 f808 	bl	8001024 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8001014:	f7ff fe9e 	bl	8000d54 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001018:	2300      	movs	r3, #0
}
 800101a:	4618      	mov	r0, r3
 800101c:	bd80      	pop	{r7, pc}
 800101e:	bf00      	nop
 8001020:	40022000 	.word	0x40022000

08001024 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001024:	b580      	push	{r7, lr}
 8001026:	b082      	sub	sp, #8
 8001028:	af00      	add	r7, sp, #0
 800102a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800102c:	4b12      	ldr	r3, [pc, #72]	@ (8001078 <HAL_InitTick+0x54>)
 800102e:	681a      	ldr	r2, [r3, #0]
 8001030:	4b12      	ldr	r3, [pc, #72]	@ (800107c <HAL_InitTick+0x58>)
 8001032:	781b      	ldrb	r3, [r3, #0]
 8001034:	4619      	mov	r1, r3
 8001036:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800103a:	fbb3 f3f1 	udiv	r3, r3, r1
 800103e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001042:	4618      	mov	r0, r3
 8001044:	f000 f93b 	bl	80012be <HAL_SYSTICK_Config>
 8001048:	4603      	mov	r3, r0
 800104a:	2b00      	cmp	r3, #0
 800104c:	d001      	beq.n	8001052 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800104e:	2301      	movs	r3, #1
 8001050:	e00e      	b.n	8001070 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001052:	687b      	ldr	r3, [r7, #4]
 8001054:	2b0f      	cmp	r3, #15
 8001056:	d80a      	bhi.n	800106e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001058:	2200      	movs	r2, #0
 800105a:	6879      	ldr	r1, [r7, #4]
 800105c:	f04f 30ff 	mov.w	r0, #4294967295
 8001060:	f000 f903 	bl	800126a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001064:	4a06      	ldr	r2, [pc, #24]	@ (8001080 <HAL_InitTick+0x5c>)
 8001066:	687b      	ldr	r3, [r7, #4]
 8001068:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800106a:	2300      	movs	r3, #0
 800106c:	e000      	b.n	8001070 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800106e:	2301      	movs	r3, #1
}
 8001070:	4618      	mov	r0, r3
 8001072:	3708      	adds	r7, #8
 8001074:	46bd      	mov	sp, r7
 8001076:	bd80      	pop	{r7, pc}
 8001078:	20000000 	.word	0x20000000
 800107c:	20000008 	.word	0x20000008
 8001080:	20000004 	.word	0x20000004

08001084 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001084:	b480      	push	{r7}
 8001086:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001088:	4b05      	ldr	r3, [pc, #20]	@ (80010a0 <HAL_IncTick+0x1c>)
 800108a:	781b      	ldrb	r3, [r3, #0]
 800108c:	461a      	mov	r2, r3
 800108e:	4b05      	ldr	r3, [pc, #20]	@ (80010a4 <HAL_IncTick+0x20>)
 8001090:	681b      	ldr	r3, [r3, #0]
 8001092:	4413      	add	r3, r2
 8001094:	4a03      	ldr	r2, [pc, #12]	@ (80010a4 <HAL_IncTick+0x20>)
 8001096:	6013      	str	r3, [r2, #0]
}
 8001098:	bf00      	nop
 800109a:	46bd      	mov	sp, r7
 800109c:	bc80      	pop	{r7}
 800109e:	4770      	bx	lr
 80010a0:	20000008 	.word	0x20000008
 80010a4:	200001f4 	.word	0x200001f4

080010a8 <HAL_GetTick>:
  * @note  This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80010a8:	b480      	push	{r7}
 80010aa:	af00      	add	r7, sp, #0
  return uwTick;
 80010ac:	4b02      	ldr	r3, [pc, #8]	@ (80010b8 <HAL_GetTick+0x10>)
 80010ae:	681b      	ldr	r3, [r3, #0]
}
 80010b0:	4618      	mov	r0, r3
 80010b2:	46bd      	mov	sp, r7
 80010b4:	bc80      	pop	{r7}
 80010b6:	4770      	bx	lr
 80010b8:	200001f4 	.word	0x200001f4

080010bc <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80010bc:	b480      	push	{r7}
 80010be:	b085      	sub	sp, #20
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80010c4:	687b      	ldr	r3, [r7, #4]
 80010c6:	f003 0307 	and.w	r3, r3, #7
 80010ca:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80010cc:	4b0c      	ldr	r3, [pc, #48]	@ (8001100 <__NVIC_SetPriorityGrouping+0x44>)
 80010ce:	68db      	ldr	r3, [r3, #12]
 80010d0:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80010d2:	68ba      	ldr	r2, [r7, #8]
 80010d4:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80010d8:	4013      	ands	r3, r2
 80010da:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 80010dc:	68fb      	ldr	r3, [r7, #12]
 80010de:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80010e0:	68bb      	ldr	r3, [r7, #8]
 80010e2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80010e4:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80010e8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80010ec:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80010ee:	4a04      	ldr	r2, [pc, #16]	@ (8001100 <__NVIC_SetPriorityGrouping+0x44>)
 80010f0:	68bb      	ldr	r3, [r7, #8]
 80010f2:	60d3      	str	r3, [r2, #12]
}
 80010f4:	bf00      	nop
 80010f6:	3714      	adds	r7, #20
 80010f8:	46bd      	mov	sp, r7
 80010fa:	bc80      	pop	{r7}
 80010fc:	4770      	bx	lr
 80010fe:	bf00      	nop
 8001100:	e000ed00 	.word	0xe000ed00

08001104 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001104:	b480      	push	{r7}
 8001106:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001108:	4b04      	ldr	r3, [pc, #16]	@ (800111c <__NVIC_GetPriorityGrouping+0x18>)
 800110a:	68db      	ldr	r3, [r3, #12]
 800110c:	0a1b      	lsrs	r3, r3, #8
 800110e:	f003 0307 	and.w	r3, r3, #7
}
 8001112:	4618      	mov	r0, r3
 8001114:	46bd      	mov	sp, r7
 8001116:	bc80      	pop	{r7}
 8001118:	4770      	bx	lr
 800111a:	bf00      	nop
 800111c:	e000ed00 	.word	0xe000ed00

08001120 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001120:	b480      	push	{r7}
 8001122:	b083      	sub	sp, #12
 8001124:	af00      	add	r7, sp, #0
 8001126:	4603      	mov	r3, r0
 8001128:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800112a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800112e:	2b00      	cmp	r3, #0
 8001130:	db0b      	blt.n	800114a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001132:	79fb      	ldrb	r3, [r7, #7]
 8001134:	f003 021f 	and.w	r2, r3, #31
 8001138:	4906      	ldr	r1, [pc, #24]	@ (8001154 <__NVIC_EnableIRQ+0x34>)
 800113a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800113e:	095b      	lsrs	r3, r3, #5
 8001140:	2001      	movs	r0, #1
 8001142:	fa00 f202 	lsl.w	r2, r0, r2
 8001146:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800114a:	bf00      	nop
 800114c:	370c      	adds	r7, #12
 800114e:	46bd      	mov	sp, r7
 8001150:	bc80      	pop	{r7}
 8001152:	4770      	bx	lr
 8001154:	e000e100 	.word	0xe000e100

08001158 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001158:	b480      	push	{r7}
 800115a:	b083      	sub	sp, #12
 800115c:	af00      	add	r7, sp, #0
 800115e:	4603      	mov	r3, r0
 8001160:	6039      	str	r1, [r7, #0]
 8001162:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001164:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001168:	2b00      	cmp	r3, #0
 800116a:	db0a      	blt.n	8001182 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800116c:	683b      	ldr	r3, [r7, #0]
 800116e:	b2da      	uxtb	r2, r3
 8001170:	490c      	ldr	r1, [pc, #48]	@ (80011a4 <__NVIC_SetPriority+0x4c>)
 8001172:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001176:	0112      	lsls	r2, r2, #4
 8001178:	b2d2      	uxtb	r2, r2
 800117a:	440b      	add	r3, r1
 800117c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001180:	e00a      	b.n	8001198 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001182:	683b      	ldr	r3, [r7, #0]
 8001184:	b2da      	uxtb	r2, r3
 8001186:	4908      	ldr	r1, [pc, #32]	@ (80011a8 <__NVIC_SetPriority+0x50>)
 8001188:	79fb      	ldrb	r3, [r7, #7]
 800118a:	f003 030f 	and.w	r3, r3, #15
 800118e:	3b04      	subs	r3, #4
 8001190:	0112      	lsls	r2, r2, #4
 8001192:	b2d2      	uxtb	r2, r2
 8001194:	440b      	add	r3, r1
 8001196:	761a      	strb	r2, [r3, #24]
}
 8001198:	bf00      	nop
 800119a:	370c      	adds	r7, #12
 800119c:	46bd      	mov	sp, r7
 800119e:	bc80      	pop	{r7}
 80011a0:	4770      	bx	lr
 80011a2:	bf00      	nop
 80011a4:	e000e100 	.word	0xe000e100
 80011a8:	e000ed00 	.word	0xe000ed00

080011ac <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80011ac:	b480      	push	{r7}
 80011ae:	b089      	sub	sp, #36	@ 0x24
 80011b0:	af00      	add	r7, sp, #0
 80011b2:	60f8      	str	r0, [r7, #12]
 80011b4:	60b9      	str	r1, [r7, #8]
 80011b6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80011b8:	68fb      	ldr	r3, [r7, #12]
 80011ba:	f003 0307 	and.w	r3, r3, #7
 80011be:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80011c0:	69fb      	ldr	r3, [r7, #28]
 80011c2:	f1c3 0307 	rsb	r3, r3, #7
 80011c6:	2b04      	cmp	r3, #4
 80011c8:	bf28      	it	cs
 80011ca:	2304      	movcs	r3, #4
 80011cc:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80011ce:	69fb      	ldr	r3, [r7, #28]
 80011d0:	3304      	adds	r3, #4
 80011d2:	2b06      	cmp	r3, #6
 80011d4:	d902      	bls.n	80011dc <NVIC_EncodePriority+0x30>
 80011d6:	69fb      	ldr	r3, [r7, #28]
 80011d8:	3b03      	subs	r3, #3
 80011da:	e000      	b.n	80011de <NVIC_EncodePriority+0x32>
 80011dc:	2300      	movs	r3, #0
 80011de:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011e0:	f04f 32ff 	mov.w	r2, #4294967295
 80011e4:	69bb      	ldr	r3, [r7, #24]
 80011e6:	fa02 f303 	lsl.w	r3, r2, r3
 80011ea:	43da      	mvns	r2, r3
 80011ec:	68bb      	ldr	r3, [r7, #8]
 80011ee:	401a      	ands	r2, r3
 80011f0:	697b      	ldr	r3, [r7, #20]
 80011f2:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80011f4:	f04f 31ff 	mov.w	r1, #4294967295
 80011f8:	697b      	ldr	r3, [r7, #20]
 80011fa:	fa01 f303 	lsl.w	r3, r1, r3
 80011fe:	43d9      	mvns	r1, r3
 8001200:	687b      	ldr	r3, [r7, #4]
 8001202:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001204:	4313      	orrs	r3, r2
         );
}
 8001206:	4618      	mov	r0, r3
 8001208:	3724      	adds	r7, #36	@ 0x24
 800120a:	46bd      	mov	sp, r7
 800120c:	bc80      	pop	{r7}
 800120e:	4770      	bx	lr

08001210 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001210:	b580      	push	{r7, lr}
 8001212:	b082      	sub	sp, #8
 8001214:	af00      	add	r7, sp, #0
 8001216:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001218:	687b      	ldr	r3, [r7, #4]
 800121a:	3b01      	subs	r3, #1
 800121c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8001220:	d301      	bcc.n	8001226 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001222:	2301      	movs	r3, #1
 8001224:	e00f      	b.n	8001246 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001226:	4a0a      	ldr	r2, [pc, #40]	@ (8001250 <SysTick_Config+0x40>)
 8001228:	687b      	ldr	r3, [r7, #4]
 800122a:	3b01      	subs	r3, #1
 800122c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800122e:	210f      	movs	r1, #15
 8001230:	f04f 30ff 	mov.w	r0, #4294967295
 8001234:	f7ff ff90 	bl	8001158 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001238:	4b05      	ldr	r3, [pc, #20]	@ (8001250 <SysTick_Config+0x40>)
 800123a:	2200      	movs	r2, #0
 800123c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800123e:	4b04      	ldr	r3, [pc, #16]	@ (8001250 <SysTick_Config+0x40>)
 8001240:	2207      	movs	r2, #7
 8001242:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001244:	2300      	movs	r3, #0
}
 8001246:	4618      	mov	r0, r3
 8001248:	3708      	adds	r7, #8
 800124a:	46bd      	mov	sp, r7
 800124c:	bd80      	pop	{r7, pc}
 800124e:	bf00      	nop
 8001250:	e000e010 	.word	0xe000e010

08001254 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001254:	b580      	push	{r7, lr}
 8001256:	b082      	sub	sp, #8
 8001258:	af00      	add	r7, sp, #0
 800125a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800125c:	6878      	ldr	r0, [r7, #4]
 800125e:	f7ff ff2d 	bl	80010bc <__NVIC_SetPriorityGrouping>
}
 8001262:	bf00      	nop
 8001264:	3708      	adds	r7, #8
 8001266:	46bd      	mov	sp, r7
 8001268:	bd80      	pop	{r7, pc}

0800126a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800126a:	b580      	push	{r7, lr}
 800126c:	b086      	sub	sp, #24
 800126e:	af00      	add	r7, sp, #0
 8001270:	4603      	mov	r3, r0
 8001272:	60b9      	str	r1, [r7, #8]
 8001274:	607a      	str	r2, [r7, #4]
 8001276:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001278:	2300      	movs	r3, #0
 800127a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800127c:	f7ff ff42 	bl	8001104 <__NVIC_GetPriorityGrouping>
 8001280:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001282:	687a      	ldr	r2, [r7, #4]
 8001284:	68b9      	ldr	r1, [r7, #8]
 8001286:	6978      	ldr	r0, [r7, #20]
 8001288:	f7ff ff90 	bl	80011ac <NVIC_EncodePriority>
 800128c:	4602      	mov	r2, r0
 800128e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001292:	4611      	mov	r1, r2
 8001294:	4618      	mov	r0, r3
 8001296:	f7ff ff5f 	bl	8001158 <__NVIC_SetPriority>
}
 800129a:	bf00      	nop
 800129c:	3718      	adds	r7, #24
 800129e:	46bd      	mov	sp, r7
 80012a0:	bd80      	pop	{r7, pc}

080012a2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f10xxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80012a2:	b580      	push	{r7, lr}
 80012a4:	b082      	sub	sp, #8
 80012a6:	af00      	add	r7, sp, #0
 80012a8:	4603      	mov	r3, r0
 80012aa:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80012ac:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80012b0:	4618      	mov	r0, r3
 80012b2:	f7ff ff35 	bl	8001120 <__NVIC_EnableIRQ>
}
 80012b6:	bf00      	nop
 80012b8:	3708      	adds	r7, #8
 80012ba:	46bd      	mov	sp, r7
 80012bc:	bd80      	pop	{r7, pc}

080012be <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80012be:	b580      	push	{r7, lr}
 80012c0:	b082      	sub	sp, #8
 80012c2:	af00      	add	r7, sp, #0
 80012c4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80012c6:	6878      	ldr	r0, [r7, #4]
 80012c8:	f7ff ffa2 	bl	8001210 <SysTick_Config>
 80012cc:	4603      	mov	r3, r0
}
 80012ce:	4618      	mov	r0, r3
 80012d0:	3708      	adds	r7, #8
 80012d2:	46bd      	mov	sp, r7
 80012d4:	bd80      	pop	{r7, pc}
	...

080012d8 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80012d8:	b480      	push	{r7}
 80012da:	b08b      	sub	sp, #44	@ 0x2c
 80012dc:	af00      	add	r7, sp, #0
 80012de:	6078      	str	r0, [r7, #4]
 80012e0:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 80012e2:	2300      	movs	r3, #0
 80012e4:	627b      	str	r3, [r7, #36]	@ 0x24
  uint32_t ioposition;
  uint32_t iocurrent;
  uint32_t temp;
  uint32_t config = 0x00u;
 80012e6:	2300      	movs	r3, #0
 80012e8:	623b      	str	r3, [r7, #32]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80012ea:	e161      	b.n	80015b0 <HAL_GPIO_Init+0x2d8>
  {
    /* Get the IO position */
    ioposition = (0x01uL << position);
 80012ec:	2201      	movs	r2, #1
 80012ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80012f0:	fa02 f303 	lsl.w	r3, r2, r3
 80012f4:	61fb      	str	r3, [r7, #28]

    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80012f6:	683b      	ldr	r3, [r7, #0]
 80012f8:	681b      	ldr	r3, [r3, #0]
 80012fa:	69fa      	ldr	r2, [r7, #28]
 80012fc:	4013      	ands	r3, r2
 80012fe:	61bb      	str	r3, [r7, #24]

    if (iocurrent == ioposition)
 8001300:	69ba      	ldr	r2, [r7, #24]
 8001302:	69fb      	ldr	r3, [r7, #28]
 8001304:	429a      	cmp	r2, r3
 8001306:	f040 8150 	bne.w	80015aa <HAL_GPIO_Init+0x2d2>
    {
      /* Check the Alternate function parameters */
      assert_param(IS_GPIO_AF_INSTANCE(GPIOx));

      /* Based on the required mode, filling config variable with MODEy[1:0] and CNFy[3:2] corresponding bits */
      switch (GPIO_Init->Mode)
 800130a:	683b      	ldr	r3, [r7, #0]
 800130c:	685b      	ldr	r3, [r3, #4]
 800130e:	4a97      	ldr	r2, [pc, #604]	@ (800156c <HAL_GPIO_Init+0x294>)
 8001310:	4293      	cmp	r3, r2
 8001312:	d05e      	beq.n	80013d2 <HAL_GPIO_Init+0xfa>
 8001314:	4a95      	ldr	r2, [pc, #596]	@ (800156c <HAL_GPIO_Init+0x294>)
 8001316:	4293      	cmp	r3, r2
 8001318:	d875      	bhi.n	8001406 <HAL_GPIO_Init+0x12e>
 800131a:	4a95      	ldr	r2, [pc, #596]	@ (8001570 <HAL_GPIO_Init+0x298>)
 800131c:	4293      	cmp	r3, r2
 800131e:	d058      	beq.n	80013d2 <HAL_GPIO_Init+0xfa>
 8001320:	4a93      	ldr	r2, [pc, #588]	@ (8001570 <HAL_GPIO_Init+0x298>)
 8001322:	4293      	cmp	r3, r2
 8001324:	d86f      	bhi.n	8001406 <HAL_GPIO_Init+0x12e>
 8001326:	4a93      	ldr	r2, [pc, #588]	@ (8001574 <HAL_GPIO_Init+0x29c>)
 8001328:	4293      	cmp	r3, r2
 800132a:	d052      	beq.n	80013d2 <HAL_GPIO_Init+0xfa>
 800132c:	4a91      	ldr	r2, [pc, #580]	@ (8001574 <HAL_GPIO_Init+0x29c>)
 800132e:	4293      	cmp	r3, r2
 8001330:	d869      	bhi.n	8001406 <HAL_GPIO_Init+0x12e>
 8001332:	4a91      	ldr	r2, [pc, #580]	@ (8001578 <HAL_GPIO_Init+0x2a0>)
 8001334:	4293      	cmp	r3, r2
 8001336:	d04c      	beq.n	80013d2 <HAL_GPIO_Init+0xfa>
 8001338:	4a8f      	ldr	r2, [pc, #572]	@ (8001578 <HAL_GPIO_Init+0x2a0>)
 800133a:	4293      	cmp	r3, r2
 800133c:	d863      	bhi.n	8001406 <HAL_GPIO_Init+0x12e>
 800133e:	4a8f      	ldr	r2, [pc, #572]	@ (800157c <HAL_GPIO_Init+0x2a4>)
 8001340:	4293      	cmp	r3, r2
 8001342:	d046      	beq.n	80013d2 <HAL_GPIO_Init+0xfa>
 8001344:	4a8d      	ldr	r2, [pc, #564]	@ (800157c <HAL_GPIO_Init+0x2a4>)
 8001346:	4293      	cmp	r3, r2
 8001348:	d85d      	bhi.n	8001406 <HAL_GPIO_Init+0x12e>
 800134a:	2b12      	cmp	r3, #18
 800134c:	d82a      	bhi.n	80013a4 <HAL_GPIO_Init+0xcc>
 800134e:	2b12      	cmp	r3, #18
 8001350:	d859      	bhi.n	8001406 <HAL_GPIO_Init+0x12e>
 8001352:	a201      	add	r2, pc, #4	@ (adr r2, 8001358 <HAL_GPIO_Init+0x80>)
 8001354:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001358:	080013d3 	.word	0x080013d3
 800135c:	080013ad 	.word	0x080013ad
 8001360:	080013bf 	.word	0x080013bf
 8001364:	08001401 	.word	0x08001401
 8001368:	08001407 	.word	0x08001407
 800136c:	08001407 	.word	0x08001407
 8001370:	08001407 	.word	0x08001407
 8001374:	08001407 	.word	0x08001407
 8001378:	08001407 	.word	0x08001407
 800137c:	08001407 	.word	0x08001407
 8001380:	08001407 	.word	0x08001407
 8001384:	08001407 	.word	0x08001407
 8001388:	08001407 	.word	0x08001407
 800138c:	08001407 	.word	0x08001407
 8001390:	08001407 	.word	0x08001407
 8001394:	08001407 	.word	0x08001407
 8001398:	08001407 	.word	0x08001407
 800139c:	080013b5 	.word	0x080013b5
 80013a0:	080013c9 	.word	0x080013c9
 80013a4:	4a76      	ldr	r2, [pc, #472]	@ (8001580 <HAL_GPIO_Init+0x2a8>)
 80013a6:	4293      	cmp	r3, r2
 80013a8:	d013      	beq.n	80013d2 <HAL_GPIO_Init+0xfa>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
          break;

        /* Parameters are checked with assert_param */
        default:
          break;
 80013aa:	e02c      	b.n	8001406 <HAL_GPIO_Init+0x12e>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_PP;
 80013ac:	683b      	ldr	r3, [r7, #0]
 80013ae:	68db      	ldr	r3, [r3, #12]
 80013b0:	623b      	str	r3, [r7, #32]
          break;
 80013b2:	e029      	b.n	8001408 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_OD;
 80013b4:	683b      	ldr	r3, [r7, #0]
 80013b6:	68db      	ldr	r3, [r3, #12]
 80013b8:	3304      	adds	r3, #4
 80013ba:	623b      	str	r3, [r7, #32]
          break;
 80013bc:	e024      	b.n	8001408 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_PP;
 80013be:	683b      	ldr	r3, [r7, #0]
 80013c0:	68db      	ldr	r3, [r3, #12]
 80013c2:	3308      	adds	r3, #8
 80013c4:	623b      	str	r3, [r7, #32]
          break;
 80013c6:	e01f      	b.n	8001408 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_OD;
 80013c8:	683b      	ldr	r3, [r7, #0]
 80013ca:	68db      	ldr	r3, [r3, #12]
 80013cc:	330c      	adds	r3, #12
 80013ce:	623b      	str	r3, [r7, #32]
          break;
 80013d0:	e01a      	b.n	8001408 <HAL_GPIO_Init+0x130>
          if (GPIO_Init->Pull == GPIO_NOPULL)
 80013d2:	683b      	ldr	r3, [r7, #0]
 80013d4:	689b      	ldr	r3, [r3, #8]
 80013d6:	2b00      	cmp	r3, #0
 80013d8:	d102      	bne.n	80013e0 <HAL_GPIO_Init+0x108>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_FLOATING;
 80013da:	2304      	movs	r3, #4
 80013dc:	623b      	str	r3, [r7, #32]
          break;
 80013de:	e013      	b.n	8001408 <HAL_GPIO_Init+0x130>
          else if (GPIO_Init->Pull == GPIO_PULLUP)
 80013e0:	683b      	ldr	r3, [r7, #0]
 80013e2:	689b      	ldr	r3, [r3, #8]
 80013e4:	2b01      	cmp	r3, #1
 80013e6:	d105      	bne.n	80013f4 <HAL_GPIO_Init+0x11c>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 80013e8:	2308      	movs	r3, #8
 80013ea:	623b      	str	r3, [r7, #32]
            GPIOx->BSRR = ioposition;
 80013ec:	687b      	ldr	r3, [r7, #4]
 80013ee:	69fa      	ldr	r2, [r7, #28]
 80013f0:	611a      	str	r2, [r3, #16]
          break;
 80013f2:	e009      	b.n	8001408 <HAL_GPIO_Init+0x130>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 80013f4:	2308      	movs	r3, #8
 80013f6:	623b      	str	r3, [r7, #32]
            GPIOx->BRR = ioposition;
 80013f8:	687b      	ldr	r3, [r7, #4]
 80013fa:	69fa      	ldr	r2, [r7, #28]
 80013fc:	615a      	str	r2, [r3, #20]
          break;
 80013fe:	e003      	b.n	8001408 <HAL_GPIO_Init+0x130>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
 8001400:	2300      	movs	r3, #0
 8001402:	623b      	str	r3, [r7, #32]
          break;
 8001404:	e000      	b.n	8001408 <HAL_GPIO_Init+0x130>
          break;
 8001406:	bf00      	nop
      }

      /* Check if the current bit belongs to first half or last half of the pin count number
       in order to address CRH or CRL register*/
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 8001408:	69bb      	ldr	r3, [r7, #24]
 800140a:	2bff      	cmp	r3, #255	@ 0xff
 800140c:	d801      	bhi.n	8001412 <HAL_GPIO_Init+0x13a>
 800140e:	687b      	ldr	r3, [r7, #4]
 8001410:	e001      	b.n	8001416 <HAL_GPIO_Init+0x13e>
 8001412:	687b      	ldr	r3, [r7, #4]
 8001414:	3304      	adds	r3, #4
 8001416:	617b      	str	r3, [r7, #20]
      registeroffset = (iocurrent < GPIO_PIN_8) ? (position << 2u) : ((position - 8u) << 2u);
 8001418:	69bb      	ldr	r3, [r7, #24]
 800141a:	2bff      	cmp	r3, #255	@ 0xff
 800141c:	d802      	bhi.n	8001424 <HAL_GPIO_Init+0x14c>
 800141e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001420:	009b      	lsls	r3, r3, #2
 8001422:	e002      	b.n	800142a <HAL_GPIO_Init+0x152>
 8001424:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001426:	3b08      	subs	r3, #8
 8001428:	009b      	lsls	r3, r3, #2
 800142a:	613b      	str	r3, [r7, #16]

      /* Apply the new configuration of the pin to the register */
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 800142c:	697b      	ldr	r3, [r7, #20]
 800142e:	681a      	ldr	r2, [r3, #0]
 8001430:	210f      	movs	r1, #15
 8001432:	693b      	ldr	r3, [r7, #16]
 8001434:	fa01 f303 	lsl.w	r3, r1, r3
 8001438:	43db      	mvns	r3, r3
 800143a:	401a      	ands	r2, r3
 800143c:	6a39      	ldr	r1, [r7, #32]
 800143e:	693b      	ldr	r3, [r7, #16]
 8001440:	fa01 f303 	lsl.w	r3, r1, r3
 8001444:	431a      	orrs	r2, r3
 8001446:	697b      	ldr	r3, [r7, #20]
 8001448:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800144a:	683b      	ldr	r3, [r7, #0]
 800144c:	685b      	ldr	r3, [r3, #4]
 800144e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001452:	2b00      	cmp	r3, #0
 8001454:	f000 80a9 	beq.w	80015aa <HAL_GPIO_Init+0x2d2>
      {
        /* Enable AFIO Clock */
        __HAL_RCC_AFIO_CLK_ENABLE();
 8001458:	4b4a      	ldr	r3, [pc, #296]	@ (8001584 <HAL_GPIO_Init+0x2ac>)
 800145a:	699b      	ldr	r3, [r3, #24]
 800145c:	4a49      	ldr	r2, [pc, #292]	@ (8001584 <HAL_GPIO_Init+0x2ac>)
 800145e:	f043 0301 	orr.w	r3, r3, #1
 8001462:	6193      	str	r3, [r2, #24]
 8001464:	4b47      	ldr	r3, [pc, #284]	@ (8001584 <HAL_GPIO_Init+0x2ac>)
 8001466:	699b      	ldr	r3, [r3, #24]
 8001468:	f003 0301 	and.w	r3, r3, #1
 800146c:	60bb      	str	r3, [r7, #8]
 800146e:	68bb      	ldr	r3, [r7, #8]
        temp = AFIO->EXTICR[position >> 2u];
 8001470:	4a45      	ldr	r2, [pc, #276]	@ (8001588 <HAL_GPIO_Init+0x2b0>)
 8001472:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001474:	089b      	lsrs	r3, r3, #2
 8001476:	3302      	adds	r3, #2
 8001478:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800147c:	60fb      	str	r3, [r7, #12]
        CLEAR_BIT(temp, (0x0Fu) << (4u * (position & 0x03u)));
 800147e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001480:	f003 0303 	and.w	r3, r3, #3
 8001484:	009b      	lsls	r3, r3, #2
 8001486:	220f      	movs	r2, #15
 8001488:	fa02 f303 	lsl.w	r3, r2, r3
 800148c:	43db      	mvns	r3, r3
 800148e:	68fa      	ldr	r2, [r7, #12]
 8001490:	4013      	ands	r3, r2
 8001492:	60fb      	str	r3, [r7, #12]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4u * (position & 0x03u)));
 8001494:	687b      	ldr	r3, [r7, #4]
 8001496:	4a3d      	ldr	r2, [pc, #244]	@ (800158c <HAL_GPIO_Init+0x2b4>)
 8001498:	4293      	cmp	r3, r2
 800149a:	d00d      	beq.n	80014b8 <HAL_GPIO_Init+0x1e0>
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	4a3c      	ldr	r2, [pc, #240]	@ (8001590 <HAL_GPIO_Init+0x2b8>)
 80014a0:	4293      	cmp	r3, r2
 80014a2:	d007      	beq.n	80014b4 <HAL_GPIO_Init+0x1dc>
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	4a3b      	ldr	r2, [pc, #236]	@ (8001594 <HAL_GPIO_Init+0x2bc>)
 80014a8:	4293      	cmp	r3, r2
 80014aa:	d101      	bne.n	80014b0 <HAL_GPIO_Init+0x1d8>
 80014ac:	2302      	movs	r3, #2
 80014ae:	e004      	b.n	80014ba <HAL_GPIO_Init+0x1e2>
 80014b0:	2303      	movs	r3, #3
 80014b2:	e002      	b.n	80014ba <HAL_GPIO_Init+0x1e2>
 80014b4:	2301      	movs	r3, #1
 80014b6:	e000      	b.n	80014ba <HAL_GPIO_Init+0x1e2>
 80014b8:	2300      	movs	r3, #0
 80014ba:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80014bc:	f002 0203 	and.w	r2, r2, #3
 80014c0:	0092      	lsls	r2, r2, #2
 80014c2:	4093      	lsls	r3, r2
 80014c4:	68fa      	ldr	r2, [r7, #12]
 80014c6:	4313      	orrs	r3, r2
 80014c8:	60fb      	str	r3, [r7, #12]
        AFIO->EXTICR[position >> 2u] = temp;
 80014ca:	492f      	ldr	r1, [pc, #188]	@ (8001588 <HAL_GPIO_Init+0x2b0>)
 80014cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80014ce:	089b      	lsrs	r3, r3, #2
 80014d0:	3302      	adds	r3, #2
 80014d2:	68fa      	ldr	r2, [r7, #12]
 80014d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


        /* Enable or disable the rising trigger */
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80014d8:	683b      	ldr	r3, [r7, #0]
 80014da:	685b      	ldr	r3, [r3, #4]
 80014dc:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80014e0:	2b00      	cmp	r3, #0
 80014e2:	d006      	beq.n	80014f2 <HAL_GPIO_Init+0x21a>
        {
          SET_BIT(EXTI->RTSR, iocurrent);
 80014e4:	4b2c      	ldr	r3, [pc, #176]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 80014e6:	689a      	ldr	r2, [r3, #8]
 80014e8:	492b      	ldr	r1, [pc, #172]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 80014ea:	69bb      	ldr	r3, [r7, #24]
 80014ec:	4313      	orrs	r3, r2
 80014ee:	608b      	str	r3, [r1, #8]
 80014f0:	e006      	b.n	8001500 <HAL_GPIO_Init+0x228>
        }
        else
        {
          CLEAR_BIT(EXTI->RTSR, iocurrent);
 80014f2:	4b29      	ldr	r3, [pc, #164]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 80014f4:	689a      	ldr	r2, [r3, #8]
 80014f6:	69bb      	ldr	r3, [r7, #24]
 80014f8:	43db      	mvns	r3, r3
 80014fa:	4927      	ldr	r1, [pc, #156]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 80014fc:	4013      	ands	r3, r2
 80014fe:	608b      	str	r3, [r1, #8]
        }

        /* Enable or disable the falling trigger */
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001500:	683b      	ldr	r3, [r7, #0]
 8001502:	685b      	ldr	r3, [r3, #4]
 8001504:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001508:	2b00      	cmp	r3, #0
 800150a:	d006      	beq.n	800151a <HAL_GPIO_Init+0x242>
        {
          SET_BIT(EXTI->FTSR, iocurrent);
 800150c:	4b22      	ldr	r3, [pc, #136]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 800150e:	68da      	ldr	r2, [r3, #12]
 8001510:	4921      	ldr	r1, [pc, #132]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 8001512:	69bb      	ldr	r3, [r7, #24]
 8001514:	4313      	orrs	r3, r2
 8001516:	60cb      	str	r3, [r1, #12]
 8001518:	e006      	b.n	8001528 <HAL_GPIO_Init+0x250>
        }
        else
        {
          CLEAR_BIT(EXTI->FTSR, iocurrent);
 800151a:	4b1f      	ldr	r3, [pc, #124]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 800151c:	68da      	ldr	r2, [r3, #12]
 800151e:	69bb      	ldr	r3, [r7, #24]
 8001520:	43db      	mvns	r3, r3
 8001522:	491d      	ldr	r1, [pc, #116]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 8001524:	4013      	ands	r3, r2
 8001526:	60cb      	str	r3, [r1, #12]
        }

        /* Configure the event mask */
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8001528:	683b      	ldr	r3, [r7, #0]
 800152a:	685b      	ldr	r3, [r3, #4]
 800152c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001530:	2b00      	cmp	r3, #0
 8001532:	d006      	beq.n	8001542 <HAL_GPIO_Init+0x26a>
        {
          SET_BIT(EXTI->EMR, iocurrent);
 8001534:	4b18      	ldr	r3, [pc, #96]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 8001536:	685a      	ldr	r2, [r3, #4]
 8001538:	4917      	ldr	r1, [pc, #92]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 800153a:	69bb      	ldr	r3, [r7, #24]
 800153c:	4313      	orrs	r3, r2
 800153e:	604b      	str	r3, [r1, #4]
 8001540:	e006      	b.n	8001550 <HAL_GPIO_Init+0x278>
        }
        else
        {
          CLEAR_BIT(EXTI->EMR, iocurrent);
 8001542:	4b15      	ldr	r3, [pc, #84]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 8001544:	685a      	ldr	r2, [r3, #4]
 8001546:	69bb      	ldr	r3, [r7, #24]
 8001548:	43db      	mvns	r3, r3
 800154a:	4913      	ldr	r1, [pc, #76]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 800154c:	4013      	ands	r3, r2
 800154e:	604b      	str	r3, [r1, #4]
        }

        /* Configure the interrupt mask */
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8001550:	683b      	ldr	r3, [r7, #0]
 8001552:	685b      	ldr	r3, [r3, #4]
 8001554:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001558:	2b00      	cmp	r3, #0
 800155a:	d01f      	beq.n	800159c <HAL_GPIO_Init+0x2c4>
        {
          SET_BIT(EXTI->IMR, iocurrent);
 800155c:	4b0e      	ldr	r3, [pc, #56]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 800155e:	681a      	ldr	r2, [r3, #0]
 8001560:	490d      	ldr	r1, [pc, #52]	@ (8001598 <HAL_GPIO_Init+0x2c0>)
 8001562:	69bb      	ldr	r3, [r7, #24]
 8001564:	4313      	orrs	r3, r2
 8001566:	600b      	str	r3, [r1, #0]
 8001568:	e01f      	b.n	80015aa <HAL_GPIO_Init+0x2d2>
 800156a:	bf00      	nop
 800156c:	10320000 	.word	0x10320000
 8001570:	10310000 	.word	0x10310000
 8001574:	10220000 	.word	0x10220000
 8001578:	10210000 	.word	0x10210000
 800157c:	10120000 	.word	0x10120000
 8001580:	10110000 	.word	0x10110000
 8001584:	40021000 	.word	0x40021000
 8001588:	40010000 	.word	0x40010000
 800158c:	40010800 	.word	0x40010800
 8001590:	40010c00 	.word	0x40010c00
 8001594:	40011000 	.word	0x40011000
 8001598:	40010400 	.word	0x40010400
        }
        else
        {
          CLEAR_BIT(EXTI->IMR, iocurrent);
 800159c:	4b0b      	ldr	r3, [pc, #44]	@ (80015cc <HAL_GPIO_Init+0x2f4>)
 800159e:	681a      	ldr	r2, [r3, #0]
 80015a0:	69bb      	ldr	r3, [r7, #24]
 80015a2:	43db      	mvns	r3, r3
 80015a4:	4909      	ldr	r1, [pc, #36]	@ (80015cc <HAL_GPIO_Init+0x2f4>)
 80015a6:	4013      	ands	r3, r2
 80015a8:	600b      	str	r3, [r1, #0]
        }
      }
    }

	position++;
 80015aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80015ac:	3301      	adds	r3, #1
 80015ae:	627b      	str	r3, [r7, #36]	@ 0x24
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80015b0:	683b      	ldr	r3, [r7, #0]
 80015b2:	681a      	ldr	r2, [r3, #0]
 80015b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80015b6:	fa22 f303 	lsr.w	r3, r2, r3
 80015ba:	2b00      	cmp	r3, #0
 80015bc:	f47f ae96 	bne.w	80012ec <HAL_GPIO_Init+0x14>
  }
}
 80015c0:	bf00      	nop
 80015c2:	bf00      	nop
 80015c4:	372c      	adds	r7, #44	@ 0x2c
 80015c6:	46bd      	mov	sp, r7
 80015c8:	bc80      	pop	{r7}
 80015ca:	4770      	bx	lr
 80015cc:	40010400 	.word	0x40010400

080015d0 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80015d0:	b480      	push	{r7}
 80015d2:	b083      	sub	sp, #12
 80015d4:	af00      	add	r7, sp, #0
 80015d6:	6078      	str	r0, [r7, #4]
 80015d8:	460b      	mov	r3, r1
 80015da:	807b      	strh	r3, [r7, #2]
 80015dc:	4613      	mov	r3, r2
 80015de:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80015e0:	787b      	ldrb	r3, [r7, #1]
 80015e2:	2b00      	cmp	r3, #0
 80015e4:	d003      	beq.n	80015ee <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80015e6:	887a      	ldrh	r2, [r7, #2]
 80015e8:	687b      	ldr	r3, [r7, #4]
 80015ea:	611a      	str	r2, [r3, #16]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
  }
}
 80015ec:	e003      	b.n	80015f6 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
 80015ee:	887b      	ldrh	r3, [r7, #2]
 80015f0:	041a      	lsls	r2, r3, #16
 80015f2:	687b      	ldr	r3, [r7, #4]
 80015f4:	611a      	str	r2, [r3, #16]
}
 80015f6:	bf00      	nop
 80015f8:	370c      	adds	r7, #12
 80015fa:	46bd      	mov	sp, r7
 80015fc:	bc80      	pop	{r7}
 80015fe:	4770      	bx	lr

08001600 <HAL_GPIO_TogglePin>:
  * @param  GPIOx: where x can be (A..G depending on device used) to select the GPIO peripheral
  * @param  GPIO_Pin: Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8001600:	b480      	push	{r7}
 8001602:	b085      	sub	sp, #20
 8001604:	af00      	add	r7, sp, #0
 8001606:	6078      	str	r0, [r7, #4]
 8001608:	460b      	mov	r3, r1
 800160a:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800160c:	687b      	ldr	r3, [r7, #4]
 800160e:	68db      	ldr	r3, [r3, #12]
 8001610:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8001612:	887a      	ldrh	r2, [r7, #2]
 8001614:	68fb      	ldr	r3, [r7, #12]
 8001616:	4013      	ands	r3, r2
 8001618:	041a      	lsls	r2, r3, #16
 800161a:	68fb      	ldr	r3, [r7, #12]
 800161c:	43d9      	mvns	r1, r3
 800161e:	887b      	ldrh	r3, [r7, #2]
 8001620:	400b      	ands	r3, r1
 8001622:	431a      	orrs	r2, r3
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	611a      	str	r2, [r3, #16]
}
 8001628:	bf00      	nop
 800162a:	3714      	adds	r7, #20
 800162c:	46bd      	mov	sp, r7
 800162e:	bc80      	pop	{r7}
 8001630:	4770      	bx	lr
	...

08001634 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin: Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8001634:	b580      	push	{r7, lr}
 8001636:	b082      	sub	sp, #8
 8001638:	af00      	add	r7, sp, #0
 800163a:	4603      	mov	r3, r0
 800163c:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 800163e:	4b08      	ldr	r3, [pc, #32]	@ (8001660 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8001640:	695a      	ldr	r2, [r3, #20]
 8001642:	88fb      	ldrh	r3, [r7, #6]
 8001644:	4013      	ands	r3, r2
 8001646:	2b00      	cmp	r3, #0
 8001648:	d006      	beq.n	8001658 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800164a:	4a05      	ldr	r2, [pc, #20]	@ (8001660 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800164c:	88fb      	ldrh	r3, [r7, #6]
 800164e:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8001650:	88fb      	ldrh	r3, [r7, #6]
 8001652:	4618      	mov	r0, r3
 8001654:	f7ff fabe 	bl	8000bd4 <HAL_GPIO_EXTI_Callback>
  }
}
 8001658:	bf00      	nop
 800165a:	3708      	adds	r7, #8
 800165c:	46bd      	mov	sp, r7
 800165e:	bd80      	pop	{r7, pc}
 8001660:	40010400 	.word	0x40010400

08001664 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8001664:	b580      	push	{r7, lr}
 8001666:	b086      	sub	sp, #24
 8001668:	af00      	add	r7, sp, #0
 800166a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800166c:	687b      	ldr	r3, [r7, #4]
 800166e:	2b00      	cmp	r3, #0
 8001670:	d101      	bne.n	8001676 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8001672:	2301      	movs	r3, #1
 8001674:	e272      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001676:	687b      	ldr	r3, [r7, #4]
 8001678:	681b      	ldr	r3, [r3, #0]
 800167a:	f003 0301 	and.w	r3, r3, #1
 800167e:	2b00      	cmp	r3, #0
 8001680:	f000 8087 	beq.w	8001792 <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8001684:	4b92      	ldr	r3, [pc, #584]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001686:	685b      	ldr	r3, [r3, #4]
 8001688:	f003 030c 	and.w	r3, r3, #12
 800168c:	2b04      	cmp	r3, #4
 800168e:	d00c      	beq.n	80016aa <HAL_RCC_OscConfig+0x46>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8001690:	4b8f      	ldr	r3, [pc, #572]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001692:	685b      	ldr	r3, [r3, #4]
 8001694:	f003 030c 	and.w	r3, r3, #12
 8001698:	2b08      	cmp	r3, #8
 800169a:	d112      	bne.n	80016c2 <HAL_RCC_OscConfig+0x5e>
 800169c:	4b8c      	ldr	r3, [pc, #560]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 800169e:	685b      	ldr	r3, [r3, #4]
 80016a0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80016a4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80016a8:	d10b      	bne.n	80016c2 <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80016aa:	4b89      	ldr	r3, [pc, #548]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80016ac:	681b      	ldr	r3, [r3, #0]
 80016ae:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80016b2:	2b00      	cmp	r3, #0
 80016b4:	d06c      	beq.n	8001790 <HAL_RCC_OscConfig+0x12c>
 80016b6:	687b      	ldr	r3, [r7, #4]
 80016b8:	685b      	ldr	r3, [r3, #4]
 80016ba:	2b00      	cmp	r3, #0
 80016bc:	d168      	bne.n	8001790 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 80016be:	2301      	movs	r3, #1
 80016c0:	e24c      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	685b      	ldr	r3, [r3, #4]
 80016c6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80016ca:	d106      	bne.n	80016da <HAL_RCC_OscConfig+0x76>
 80016cc:	4b80      	ldr	r3, [pc, #512]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80016ce:	681b      	ldr	r3, [r3, #0]
 80016d0:	4a7f      	ldr	r2, [pc, #508]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80016d2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80016d6:	6013      	str	r3, [r2, #0]
 80016d8:	e02e      	b.n	8001738 <HAL_RCC_OscConfig+0xd4>
 80016da:	687b      	ldr	r3, [r7, #4]
 80016dc:	685b      	ldr	r3, [r3, #4]
 80016de:	2b00      	cmp	r3, #0
 80016e0:	d10c      	bne.n	80016fc <HAL_RCC_OscConfig+0x98>
 80016e2:	4b7b      	ldr	r3, [pc, #492]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80016e4:	681b      	ldr	r3, [r3, #0]
 80016e6:	4a7a      	ldr	r2, [pc, #488]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80016e8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80016ec:	6013      	str	r3, [r2, #0]
 80016ee:	4b78      	ldr	r3, [pc, #480]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80016f0:	681b      	ldr	r3, [r3, #0]
 80016f2:	4a77      	ldr	r2, [pc, #476]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80016f4:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80016f8:	6013      	str	r3, [r2, #0]
 80016fa:	e01d      	b.n	8001738 <HAL_RCC_OscConfig+0xd4>
 80016fc:	687b      	ldr	r3, [r7, #4]
 80016fe:	685b      	ldr	r3, [r3, #4]
 8001700:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8001704:	d10c      	bne.n	8001720 <HAL_RCC_OscConfig+0xbc>
 8001706:	4b72      	ldr	r3, [pc, #456]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001708:	681b      	ldr	r3, [r3, #0]
 800170a:	4a71      	ldr	r2, [pc, #452]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 800170c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001710:	6013      	str	r3, [r2, #0]
 8001712:	4b6f      	ldr	r3, [pc, #444]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001714:	681b      	ldr	r3, [r3, #0]
 8001716:	4a6e      	ldr	r2, [pc, #440]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001718:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800171c:	6013      	str	r3, [r2, #0]
 800171e:	e00b      	b.n	8001738 <HAL_RCC_OscConfig+0xd4>
 8001720:	4b6b      	ldr	r3, [pc, #428]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	4a6a      	ldr	r2, [pc, #424]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001726:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800172a:	6013      	str	r3, [r2, #0]
 800172c:	4b68      	ldr	r3, [pc, #416]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 800172e:	681b      	ldr	r3, [r3, #0]
 8001730:	4a67      	ldr	r2, [pc, #412]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001732:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001736:	6013      	str	r3, [r2, #0]


      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8001738:	687b      	ldr	r3, [r7, #4]
 800173a:	685b      	ldr	r3, [r3, #4]
 800173c:	2b00      	cmp	r3, #0
 800173e:	d013      	beq.n	8001768 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001740:	f7ff fcb2 	bl	80010a8 <HAL_GetTick>
 8001744:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001746:	e008      	b.n	800175a <HAL_RCC_OscConfig+0xf6>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001748:	f7ff fcae 	bl	80010a8 <HAL_GetTick>
 800174c:	4602      	mov	r2, r0
 800174e:	693b      	ldr	r3, [r7, #16]
 8001750:	1ad3      	subs	r3, r2, r3
 8001752:	2b64      	cmp	r3, #100	@ 0x64
 8001754:	d901      	bls.n	800175a <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 8001756:	2303      	movs	r3, #3
 8001758:	e200      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800175a:	4b5d      	ldr	r3, [pc, #372]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 800175c:	681b      	ldr	r3, [r3, #0]
 800175e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001762:	2b00      	cmp	r3, #0
 8001764:	d0f0      	beq.n	8001748 <HAL_RCC_OscConfig+0xe4>
 8001766:	e014      	b.n	8001792 <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001768:	f7ff fc9e 	bl	80010a8 <HAL_GetTick>
 800176c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800176e:	e008      	b.n	8001782 <HAL_RCC_OscConfig+0x11e>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001770:	f7ff fc9a 	bl	80010a8 <HAL_GetTick>
 8001774:	4602      	mov	r2, r0
 8001776:	693b      	ldr	r3, [r7, #16]
 8001778:	1ad3      	subs	r3, r2, r3
 800177a:	2b64      	cmp	r3, #100	@ 0x64
 800177c:	d901      	bls.n	8001782 <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 800177e:	2303      	movs	r3, #3
 8001780:	e1ec      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001782:	4b53      	ldr	r3, [pc, #332]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001784:	681b      	ldr	r3, [r3, #0]
 8001786:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800178a:	2b00      	cmp	r3, #0
 800178c:	d1f0      	bne.n	8001770 <HAL_RCC_OscConfig+0x10c>
 800178e:	e000      	b.n	8001792 <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001790:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	681b      	ldr	r3, [r3, #0]
 8001796:	f003 0302 	and.w	r3, r3, #2
 800179a:	2b00      	cmp	r3, #0
 800179c:	d063      	beq.n	8001866 <HAL_RCC_OscConfig+0x202>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 800179e:	4b4c      	ldr	r3, [pc, #304]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80017a0:	685b      	ldr	r3, [r3, #4]
 80017a2:	f003 030c 	and.w	r3, r3, #12
 80017a6:	2b00      	cmp	r3, #0
 80017a8:	d00b      	beq.n	80017c2 <HAL_RCC_OscConfig+0x15e>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 80017aa:	4b49      	ldr	r3, [pc, #292]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80017ac:	685b      	ldr	r3, [r3, #4]
 80017ae:	f003 030c 	and.w	r3, r3, #12
 80017b2:	2b08      	cmp	r3, #8
 80017b4:	d11c      	bne.n	80017f0 <HAL_RCC_OscConfig+0x18c>
 80017b6:	4b46      	ldr	r3, [pc, #280]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80017b8:	685b      	ldr	r3, [r3, #4]
 80017ba:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80017be:	2b00      	cmp	r3, #0
 80017c0:	d116      	bne.n	80017f0 <HAL_RCC_OscConfig+0x18c>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80017c2:	4b43      	ldr	r3, [pc, #268]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	f003 0302 	and.w	r3, r3, #2
 80017ca:	2b00      	cmp	r3, #0
 80017cc:	d005      	beq.n	80017da <HAL_RCC_OscConfig+0x176>
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	691b      	ldr	r3, [r3, #16]
 80017d2:	2b01      	cmp	r3, #1
 80017d4:	d001      	beq.n	80017da <HAL_RCC_OscConfig+0x176>
      {
        return HAL_ERROR;
 80017d6:	2301      	movs	r3, #1
 80017d8:	e1c0      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80017da:	4b3d      	ldr	r3, [pc, #244]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	695b      	ldr	r3, [r3, #20]
 80017e6:	00db      	lsls	r3, r3, #3
 80017e8:	4939      	ldr	r1, [pc, #228]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 80017ea:	4313      	orrs	r3, r2
 80017ec:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80017ee:	e03a      	b.n	8001866 <HAL_RCC_OscConfig+0x202>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 80017f0:	687b      	ldr	r3, [r7, #4]
 80017f2:	691b      	ldr	r3, [r3, #16]
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	d020      	beq.n	800183a <HAL_RCC_OscConfig+0x1d6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80017f8:	4b36      	ldr	r3, [pc, #216]	@ (80018d4 <HAL_RCC_OscConfig+0x270>)
 80017fa:	2201      	movs	r2, #1
 80017fc:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80017fe:	f7ff fc53 	bl	80010a8 <HAL_GetTick>
 8001802:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001804:	e008      	b.n	8001818 <HAL_RCC_OscConfig+0x1b4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001806:	f7ff fc4f 	bl	80010a8 <HAL_GetTick>
 800180a:	4602      	mov	r2, r0
 800180c:	693b      	ldr	r3, [r7, #16]
 800180e:	1ad3      	subs	r3, r2, r3
 8001810:	2b02      	cmp	r3, #2
 8001812:	d901      	bls.n	8001818 <HAL_RCC_OscConfig+0x1b4>
          {
            return HAL_TIMEOUT;
 8001814:	2303      	movs	r3, #3
 8001816:	e1a1      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001818:	4b2d      	ldr	r3, [pc, #180]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 800181a:	681b      	ldr	r3, [r3, #0]
 800181c:	f003 0302 	and.w	r3, r3, #2
 8001820:	2b00      	cmp	r3, #0
 8001822:	d0f0      	beq.n	8001806 <HAL_RCC_OscConfig+0x1a2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001824:	4b2a      	ldr	r3, [pc, #168]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001826:	681b      	ldr	r3, [r3, #0]
 8001828:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800182c:	687b      	ldr	r3, [r7, #4]
 800182e:	695b      	ldr	r3, [r3, #20]
 8001830:	00db      	lsls	r3, r3, #3
 8001832:	4927      	ldr	r1, [pc, #156]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 8001834:	4313      	orrs	r3, r2
 8001836:	600b      	str	r3, [r1, #0]
 8001838:	e015      	b.n	8001866 <HAL_RCC_OscConfig+0x202>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800183a:	4b26      	ldr	r3, [pc, #152]	@ (80018d4 <HAL_RCC_OscConfig+0x270>)
 800183c:	2200      	movs	r2, #0
 800183e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001840:	f7ff fc32 	bl	80010a8 <HAL_GetTick>
 8001844:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001846:	e008      	b.n	800185a <HAL_RCC_OscConfig+0x1f6>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001848:	f7ff fc2e 	bl	80010a8 <HAL_GetTick>
 800184c:	4602      	mov	r2, r0
 800184e:	693b      	ldr	r3, [r7, #16]
 8001850:	1ad3      	subs	r3, r2, r3
 8001852:	2b02      	cmp	r3, #2
 8001854:	d901      	bls.n	800185a <HAL_RCC_OscConfig+0x1f6>
          {
            return HAL_TIMEOUT;
 8001856:	2303      	movs	r3, #3
 8001858:	e180      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800185a:	4b1d      	ldr	r3, [pc, #116]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 800185c:	681b      	ldr	r3, [r3, #0]
 800185e:	f003 0302 	and.w	r3, r3, #2
 8001862:	2b00      	cmp	r3, #0
 8001864:	d1f0      	bne.n	8001848 <HAL_RCC_OscConfig+0x1e4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	681b      	ldr	r3, [r3, #0]
 800186a:	f003 0308 	and.w	r3, r3, #8
 800186e:	2b00      	cmp	r3, #0
 8001870:	d03a      	beq.n	80018e8 <HAL_RCC_OscConfig+0x284>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	699b      	ldr	r3, [r3, #24]
 8001876:	2b00      	cmp	r3, #0
 8001878:	d019      	beq.n	80018ae <HAL_RCC_OscConfig+0x24a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800187a:	4b17      	ldr	r3, [pc, #92]	@ (80018d8 <HAL_RCC_OscConfig+0x274>)
 800187c:	2201      	movs	r2, #1
 800187e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001880:	f7ff fc12 	bl	80010a8 <HAL_GetTick>
 8001884:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001886:	e008      	b.n	800189a <HAL_RCC_OscConfig+0x236>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001888:	f7ff fc0e 	bl	80010a8 <HAL_GetTick>
 800188c:	4602      	mov	r2, r0
 800188e:	693b      	ldr	r3, [r7, #16]
 8001890:	1ad3      	subs	r3, r2, r3
 8001892:	2b02      	cmp	r3, #2
 8001894:	d901      	bls.n	800189a <HAL_RCC_OscConfig+0x236>
        {
          return HAL_TIMEOUT;
 8001896:	2303      	movs	r3, #3
 8001898:	e160      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800189a:	4b0d      	ldr	r3, [pc, #52]	@ (80018d0 <HAL_RCC_OscConfig+0x26c>)
 800189c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800189e:	f003 0302 	and.w	r3, r3, #2
 80018a2:	2b00      	cmp	r3, #0
 80018a4:	d0f0      	beq.n	8001888 <HAL_RCC_OscConfig+0x224>
        }
      }
      /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
          should be added.*/
      RCC_Delay(1);
 80018a6:	2001      	movs	r0, #1
 80018a8:	f000 fa9c 	bl	8001de4 <RCC_Delay>
 80018ac:	e01c      	b.n	80018e8 <HAL_RCC_OscConfig+0x284>
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80018ae:	4b0a      	ldr	r3, [pc, #40]	@ (80018d8 <HAL_RCC_OscConfig+0x274>)
 80018b0:	2200      	movs	r2, #0
 80018b2:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80018b4:	f7ff fbf8 	bl	80010a8 <HAL_GetTick>
 80018b8:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80018ba:	e00f      	b.n	80018dc <HAL_RCC_OscConfig+0x278>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80018bc:	f7ff fbf4 	bl	80010a8 <HAL_GetTick>
 80018c0:	4602      	mov	r2, r0
 80018c2:	693b      	ldr	r3, [r7, #16]
 80018c4:	1ad3      	subs	r3, r2, r3
 80018c6:	2b02      	cmp	r3, #2
 80018c8:	d908      	bls.n	80018dc <HAL_RCC_OscConfig+0x278>
        {
          return HAL_TIMEOUT;
 80018ca:	2303      	movs	r3, #3
 80018cc:	e146      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
 80018ce:	bf00      	nop
 80018d0:	40021000 	.word	0x40021000
 80018d4:	42420000 	.word	0x42420000
 80018d8:	42420480 	.word	0x42420480
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80018dc:	4b92      	ldr	r3, [pc, #584]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80018de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80018e0:	f003 0302 	and.w	r3, r3, #2
 80018e4:	2b00      	cmp	r3, #0
 80018e6:	d1e9      	bne.n	80018bc <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	681b      	ldr	r3, [r3, #0]
 80018ec:	f003 0304 	and.w	r3, r3, #4
 80018f0:	2b00      	cmp	r3, #0
 80018f2:	f000 80a6 	beq.w	8001a42 <HAL_RCC_OscConfig+0x3de>
  {
    FlagStatus       pwrclkchanged = RESET;
 80018f6:	2300      	movs	r3, #0
 80018f8:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 80018fa:	4b8b      	ldr	r3, [pc, #556]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80018fc:	69db      	ldr	r3, [r3, #28]
 80018fe:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001902:	2b00      	cmp	r3, #0
 8001904:	d10d      	bne.n	8001922 <HAL_RCC_OscConfig+0x2be>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8001906:	4b88      	ldr	r3, [pc, #544]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001908:	69db      	ldr	r3, [r3, #28]
 800190a:	4a87      	ldr	r2, [pc, #540]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 800190c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001910:	61d3      	str	r3, [r2, #28]
 8001912:	4b85      	ldr	r3, [pc, #532]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001914:	69db      	ldr	r3, [r3, #28]
 8001916:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800191a:	60bb      	str	r3, [r7, #8]
 800191c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800191e:	2301      	movs	r3, #1
 8001920:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001922:	4b82      	ldr	r3, [pc, #520]	@ (8001b2c <HAL_RCC_OscConfig+0x4c8>)
 8001924:	681b      	ldr	r3, [r3, #0]
 8001926:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800192a:	2b00      	cmp	r3, #0
 800192c:	d118      	bne.n	8001960 <HAL_RCC_OscConfig+0x2fc>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800192e:	4b7f      	ldr	r3, [pc, #508]	@ (8001b2c <HAL_RCC_OscConfig+0x4c8>)
 8001930:	681b      	ldr	r3, [r3, #0]
 8001932:	4a7e      	ldr	r2, [pc, #504]	@ (8001b2c <HAL_RCC_OscConfig+0x4c8>)
 8001934:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001938:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 800193a:	f7ff fbb5 	bl	80010a8 <HAL_GetTick>
 800193e:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001940:	e008      	b.n	8001954 <HAL_RCC_OscConfig+0x2f0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001942:	f7ff fbb1 	bl	80010a8 <HAL_GetTick>
 8001946:	4602      	mov	r2, r0
 8001948:	693b      	ldr	r3, [r7, #16]
 800194a:	1ad3      	subs	r3, r2, r3
 800194c:	2b64      	cmp	r3, #100	@ 0x64
 800194e:	d901      	bls.n	8001954 <HAL_RCC_OscConfig+0x2f0>
        {
          return HAL_TIMEOUT;
 8001950:	2303      	movs	r3, #3
 8001952:	e103      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001954:	4b75      	ldr	r3, [pc, #468]	@ (8001b2c <HAL_RCC_OscConfig+0x4c8>)
 8001956:	681b      	ldr	r3, [r3, #0]
 8001958:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800195c:	2b00      	cmp	r3, #0
 800195e:	d0f0      	beq.n	8001942 <HAL_RCC_OscConfig+0x2de>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001960:	687b      	ldr	r3, [r7, #4]
 8001962:	68db      	ldr	r3, [r3, #12]
 8001964:	2b01      	cmp	r3, #1
 8001966:	d106      	bne.n	8001976 <HAL_RCC_OscConfig+0x312>
 8001968:	4b6f      	ldr	r3, [pc, #444]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 800196a:	6a1b      	ldr	r3, [r3, #32]
 800196c:	4a6e      	ldr	r2, [pc, #440]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 800196e:	f043 0301 	orr.w	r3, r3, #1
 8001972:	6213      	str	r3, [r2, #32]
 8001974:	e02d      	b.n	80019d2 <HAL_RCC_OscConfig+0x36e>
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	68db      	ldr	r3, [r3, #12]
 800197a:	2b00      	cmp	r3, #0
 800197c:	d10c      	bne.n	8001998 <HAL_RCC_OscConfig+0x334>
 800197e:	4b6a      	ldr	r3, [pc, #424]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001980:	6a1b      	ldr	r3, [r3, #32]
 8001982:	4a69      	ldr	r2, [pc, #420]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001984:	f023 0301 	bic.w	r3, r3, #1
 8001988:	6213      	str	r3, [r2, #32]
 800198a:	4b67      	ldr	r3, [pc, #412]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 800198c:	6a1b      	ldr	r3, [r3, #32]
 800198e:	4a66      	ldr	r2, [pc, #408]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001990:	f023 0304 	bic.w	r3, r3, #4
 8001994:	6213      	str	r3, [r2, #32]
 8001996:	e01c      	b.n	80019d2 <HAL_RCC_OscConfig+0x36e>
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	68db      	ldr	r3, [r3, #12]
 800199c:	2b05      	cmp	r3, #5
 800199e:	d10c      	bne.n	80019ba <HAL_RCC_OscConfig+0x356>
 80019a0:	4b61      	ldr	r3, [pc, #388]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80019a2:	6a1b      	ldr	r3, [r3, #32]
 80019a4:	4a60      	ldr	r2, [pc, #384]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80019a6:	f043 0304 	orr.w	r3, r3, #4
 80019aa:	6213      	str	r3, [r2, #32]
 80019ac:	4b5e      	ldr	r3, [pc, #376]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80019ae:	6a1b      	ldr	r3, [r3, #32]
 80019b0:	4a5d      	ldr	r2, [pc, #372]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80019b2:	f043 0301 	orr.w	r3, r3, #1
 80019b6:	6213      	str	r3, [r2, #32]
 80019b8:	e00b      	b.n	80019d2 <HAL_RCC_OscConfig+0x36e>
 80019ba:	4b5b      	ldr	r3, [pc, #364]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80019bc:	6a1b      	ldr	r3, [r3, #32]
 80019be:	4a5a      	ldr	r2, [pc, #360]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80019c0:	f023 0301 	bic.w	r3, r3, #1
 80019c4:	6213      	str	r3, [r2, #32]
 80019c6:	4b58      	ldr	r3, [pc, #352]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80019c8:	6a1b      	ldr	r3, [r3, #32]
 80019ca:	4a57      	ldr	r2, [pc, #348]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80019cc:	f023 0304 	bic.w	r3, r3, #4
 80019d0:	6213      	str	r3, [r2, #32]
    /* Check the LSE State */
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	68db      	ldr	r3, [r3, #12]
 80019d6:	2b00      	cmp	r3, #0
 80019d8:	d015      	beq.n	8001a06 <HAL_RCC_OscConfig+0x3a2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80019da:	f7ff fb65 	bl	80010a8 <HAL_GetTick>
 80019de:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80019e0:	e00a      	b.n	80019f8 <HAL_RCC_OscConfig+0x394>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80019e2:	f7ff fb61 	bl	80010a8 <HAL_GetTick>
 80019e6:	4602      	mov	r2, r0
 80019e8:	693b      	ldr	r3, [r7, #16]
 80019ea:	1ad3      	subs	r3, r2, r3
 80019ec:	f241 3288 	movw	r2, #5000	@ 0x1388
 80019f0:	4293      	cmp	r3, r2
 80019f2:	d901      	bls.n	80019f8 <HAL_RCC_OscConfig+0x394>
        {
          return HAL_TIMEOUT;
 80019f4:	2303      	movs	r3, #3
 80019f6:	e0b1      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80019f8:	4b4b      	ldr	r3, [pc, #300]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 80019fa:	6a1b      	ldr	r3, [r3, #32]
 80019fc:	f003 0302 	and.w	r3, r3, #2
 8001a00:	2b00      	cmp	r3, #0
 8001a02:	d0ee      	beq.n	80019e2 <HAL_RCC_OscConfig+0x37e>
 8001a04:	e014      	b.n	8001a30 <HAL_RCC_OscConfig+0x3cc>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001a06:	f7ff fb4f 	bl	80010a8 <HAL_GetTick>
 8001a0a:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001a0c:	e00a      	b.n	8001a24 <HAL_RCC_OscConfig+0x3c0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001a0e:	f7ff fb4b 	bl	80010a8 <HAL_GetTick>
 8001a12:	4602      	mov	r2, r0
 8001a14:	693b      	ldr	r3, [r7, #16]
 8001a16:	1ad3      	subs	r3, r2, r3
 8001a18:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001a1c:	4293      	cmp	r3, r2
 8001a1e:	d901      	bls.n	8001a24 <HAL_RCC_OscConfig+0x3c0>
        {
          return HAL_TIMEOUT;
 8001a20:	2303      	movs	r3, #3
 8001a22:	e09b      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001a24:	4b40      	ldr	r3, [pc, #256]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001a26:	6a1b      	ldr	r3, [r3, #32]
 8001a28:	f003 0302 	and.w	r3, r3, #2
 8001a2c:	2b00      	cmp	r3, #0
 8001a2e:	d1ee      	bne.n	8001a0e <HAL_RCC_OscConfig+0x3aa>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if (pwrclkchanged == SET)
 8001a30:	7dfb      	ldrb	r3, [r7, #23]
 8001a32:	2b01      	cmp	r3, #1
 8001a34:	d105      	bne.n	8001a42 <HAL_RCC_OscConfig+0x3de>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8001a36:	4b3c      	ldr	r3, [pc, #240]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001a38:	69db      	ldr	r3, [r3, #28]
 8001a3a:	4a3b      	ldr	r2, [pc, #236]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001a3c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8001a40:	61d3      	str	r3, [r2, #28]

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001a42:	687b      	ldr	r3, [r7, #4]
 8001a44:	69db      	ldr	r3, [r3, #28]
 8001a46:	2b00      	cmp	r3, #0
 8001a48:	f000 8087 	beq.w	8001b5a <HAL_RCC_OscConfig+0x4f6>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8001a4c:	4b36      	ldr	r3, [pc, #216]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001a4e:	685b      	ldr	r3, [r3, #4]
 8001a50:	f003 030c 	and.w	r3, r3, #12
 8001a54:	2b08      	cmp	r3, #8
 8001a56:	d061      	beq.n	8001b1c <HAL_RCC_OscConfig+0x4b8>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	69db      	ldr	r3, [r3, #28]
 8001a5c:	2b02      	cmp	r3, #2
 8001a5e:	d146      	bne.n	8001aee <HAL_RCC_OscConfig+0x48a>
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001a60:	4b33      	ldr	r3, [pc, #204]	@ (8001b30 <HAL_RCC_OscConfig+0x4cc>)
 8001a62:	2200      	movs	r2, #0
 8001a64:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001a66:	f7ff fb1f 	bl	80010a8 <HAL_GetTick>
 8001a6a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001a6c:	e008      	b.n	8001a80 <HAL_RCC_OscConfig+0x41c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001a6e:	f7ff fb1b 	bl	80010a8 <HAL_GetTick>
 8001a72:	4602      	mov	r2, r0
 8001a74:	693b      	ldr	r3, [r7, #16]
 8001a76:	1ad3      	subs	r3, r2, r3
 8001a78:	2b02      	cmp	r3, #2
 8001a7a:	d901      	bls.n	8001a80 <HAL_RCC_OscConfig+0x41c>
          {
            return HAL_TIMEOUT;
 8001a7c:	2303      	movs	r3, #3
 8001a7e:	e06d      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001a80:	4b29      	ldr	r3, [pc, #164]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001a88:	2b00      	cmp	r3, #0
 8001a8a:	d1f0      	bne.n	8001a6e <HAL_RCC_OscConfig+0x40a>
          }
        }

        /* Configure the HSE prediv factor --------------------------------*/
        /* It can be written only when the PLL is disabled. Not used in PLL source is different than HSE */
        if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 8001a8c:	687b      	ldr	r3, [r7, #4]
 8001a8e:	6a1b      	ldr	r3, [r3, #32]
 8001a90:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8001a94:	d108      	bne.n	8001aa8 <HAL_RCC_OscConfig+0x444>
          /* Set PREDIV1 source */
          SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
#endif /* RCC_CFGR2_PREDIV1SRC */

          /* Set PREDIV1 Value */
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 8001a96:	4b24      	ldr	r3, [pc, #144]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001a98:	685b      	ldr	r3, [r3, #4]
 8001a9a:	f423 3200 	bic.w	r2, r3, #131072	@ 0x20000
 8001a9e:	687b      	ldr	r3, [r7, #4]
 8001aa0:	689b      	ldr	r3, [r3, #8]
 8001aa2:	4921      	ldr	r1, [pc, #132]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001aa4:	4313      	orrs	r3, r2
 8001aa6:	604b      	str	r3, [r1, #4]
        }

        /* Configure the main PLL clock source and multiplication factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001aa8:	4b1f      	ldr	r3, [pc, #124]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001aaa:	685b      	ldr	r3, [r3, #4]
 8001aac:	f423 1274 	bic.w	r2, r3, #3997696	@ 0x3d0000
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	6a19      	ldr	r1, [r3, #32]
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001ab8:	430b      	orrs	r3, r1
 8001aba:	491b      	ldr	r1, [pc, #108]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001abc:	4313      	orrs	r3, r2
 8001abe:	604b      	str	r3, [r1, #4]
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8001ac0:	4b1b      	ldr	r3, [pc, #108]	@ (8001b30 <HAL_RCC_OscConfig+0x4cc>)
 8001ac2:	2201      	movs	r2, #1
 8001ac4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001ac6:	f7ff faef 	bl	80010a8 <HAL_GetTick>
 8001aca:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001acc:	e008      	b.n	8001ae0 <HAL_RCC_OscConfig+0x47c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001ace:	f7ff faeb 	bl	80010a8 <HAL_GetTick>
 8001ad2:	4602      	mov	r2, r0
 8001ad4:	693b      	ldr	r3, [r7, #16]
 8001ad6:	1ad3      	subs	r3, r2, r3
 8001ad8:	2b02      	cmp	r3, #2
 8001ada:	d901      	bls.n	8001ae0 <HAL_RCC_OscConfig+0x47c>
          {
            return HAL_TIMEOUT;
 8001adc:	2303      	movs	r3, #3
 8001ade:	e03d      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001ae0:	4b11      	ldr	r3, [pc, #68]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001ae2:	681b      	ldr	r3, [r3, #0]
 8001ae4:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001ae8:	2b00      	cmp	r3, #0
 8001aea:	d0f0      	beq.n	8001ace <HAL_RCC_OscConfig+0x46a>
 8001aec:	e035      	b.n	8001b5a <HAL_RCC_OscConfig+0x4f6>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001aee:	4b10      	ldr	r3, [pc, #64]	@ (8001b30 <HAL_RCC_OscConfig+0x4cc>)
 8001af0:	2200      	movs	r2, #0
 8001af2:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001af4:	f7ff fad8 	bl	80010a8 <HAL_GetTick>
 8001af8:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001afa:	e008      	b.n	8001b0e <HAL_RCC_OscConfig+0x4aa>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001afc:	f7ff fad4 	bl	80010a8 <HAL_GetTick>
 8001b00:	4602      	mov	r2, r0
 8001b02:	693b      	ldr	r3, [r7, #16]
 8001b04:	1ad3      	subs	r3, r2, r3
 8001b06:	2b02      	cmp	r3, #2
 8001b08:	d901      	bls.n	8001b0e <HAL_RCC_OscConfig+0x4aa>
          {
            return HAL_TIMEOUT;
 8001b0a:	2303      	movs	r3, #3
 8001b0c:	e026      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001b0e:	4b06      	ldr	r3, [pc, #24]	@ (8001b28 <HAL_RCC_OscConfig+0x4c4>)
 8001b10:	681b      	ldr	r3, [r3, #0]
 8001b12:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001b16:	2b00      	cmp	r3, #0
 8001b18:	d1f0      	bne.n	8001afc <HAL_RCC_OscConfig+0x498>
 8001b1a:	e01e      	b.n	8001b5a <HAL_RCC_OscConfig+0x4f6>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8001b1c:	687b      	ldr	r3, [r7, #4]
 8001b1e:	69db      	ldr	r3, [r3, #28]
 8001b20:	2b01      	cmp	r3, #1
 8001b22:	d107      	bne.n	8001b34 <HAL_RCC_OscConfig+0x4d0>
      {
        return HAL_ERROR;
 8001b24:	2301      	movs	r3, #1
 8001b26:	e019      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
 8001b28:	40021000 	.word	0x40021000
 8001b2c:	40007000 	.word	0x40007000
 8001b30:	42420060 	.word	0x42420060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8001b34:	4b0b      	ldr	r3, [pc, #44]	@ (8001b64 <HAL_RCC_OscConfig+0x500>)
 8001b36:	685b      	ldr	r3, [r3, #4]
 8001b38:	60fb      	str	r3, [r7, #12]
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001b3a:	68fb      	ldr	r3, [r7, #12]
 8001b3c:	f403 3280 	and.w	r2, r3, #65536	@ 0x10000
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	6a1b      	ldr	r3, [r3, #32]
 8001b44:	429a      	cmp	r2, r3
 8001b46:	d106      	bne.n	8001b56 <HAL_RCC_OscConfig+0x4f2>
            (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 8001b48:	68fb      	ldr	r3, [r7, #12]
 8001b4a:	f403 1270 	and.w	r2, r3, #3932160	@ 0x3c0000
 8001b4e:	687b      	ldr	r3, [r7, #4]
 8001b50:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001b52:	429a      	cmp	r2, r3
 8001b54:	d001      	beq.n	8001b5a <HAL_RCC_OscConfig+0x4f6>
        {
          return HAL_ERROR;
 8001b56:	2301      	movs	r3, #1
 8001b58:	e000      	b.n	8001b5c <HAL_RCC_OscConfig+0x4f8>
        }
      }
    }
  }

  return HAL_OK;
 8001b5a:	2300      	movs	r3, #0
}
 8001b5c:	4618      	mov	r0, r3
 8001b5e:	3718      	adds	r7, #24
 8001b60:	46bd      	mov	sp, r7
 8001b62:	bd80      	pop	{r7, pc}
 8001b64:	40021000 	.word	0x40021000

08001b68 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8001b68:	b580      	push	{r7, lr}
 8001b6a:	b084      	sub	sp, #16
 8001b6c:	af00      	add	r7, sp, #0
 8001b6e:	6078      	str	r0, [r7, #4]
 8001b70:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	2b00      	cmp	r3, #0
 8001b76:	d101      	bne.n	8001b7c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8001b78:	2301      	movs	r3, #1
 8001b7a:	e0d0      	b.n	8001d1e <HAL_RCC_ClockConfig+0x1b6>
  must be correctly programmed according to the frequency of the CPU clock
    (HCLK) of the device. */

#if defined(FLASH_ACR_LATENCY)
  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8001b7c:	4b6a      	ldr	r3, [pc, #424]	@ (8001d28 <HAL_RCC_ClockConfig+0x1c0>)
 8001b7e:	681b      	ldr	r3, [r3, #0]
 8001b80:	f003 0307 	and.w	r3, r3, #7
 8001b84:	683a      	ldr	r2, [r7, #0]
 8001b86:	429a      	cmp	r2, r3
 8001b88:	d910      	bls.n	8001bac <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001b8a:	4b67      	ldr	r3, [pc, #412]	@ (8001d28 <HAL_RCC_ClockConfig+0x1c0>)
 8001b8c:	681b      	ldr	r3, [r3, #0]
 8001b8e:	f023 0207 	bic.w	r2, r3, #7
 8001b92:	4965      	ldr	r1, [pc, #404]	@ (8001d28 <HAL_RCC_ClockConfig+0x1c0>)
 8001b94:	683b      	ldr	r3, [r7, #0]
 8001b96:	4313      	orrs	r3, r2
 8001b98:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001b9a:	4b63      	ldr	r3, [pc, #396]	@ (8001d28 <HAL_RCC_ClockConfig+0x1c0>)
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	f003 0307 	and.w	r3, r3, #7
 8001ba2:	683a      	ldr	r2, [r7, #0]
 8001ba4:	429a      	cmp	r2, r3
 8001ba6:	d001      	beq.n	8001bac <HAL_RCC_ClockConfig+0x44>
  {
    return HAL_ERROR;
 8001ba8:	2301      	movs	r3, #1
 8001baa:	e0b8      	b.n	8001d1e <HAL_RCC_ClockConfig+0x1b6>
  }
}

#endif /* FLASH_ACR_LATENCY */
/*-------------------------- HCLK Configuration --------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001bac:	687b      	ldr	r3, [r7, #4]
 8001bae:	681b      	ldr	r3, [r3, #0]
 8001bb0:	f003 0302 	and.w	r3, r3, #2
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d020      	beq.n	8001bfa <HAL_RCC_ClockConfig+0x92>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
    a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	681b      	ldr	r3, [r3, #0]
 8001bbc:	f003 0304 	and.w	r3, r3, #4
 8001bc0:	2b00      	cmp	r3, #0
 8001bc2:	d005      	beq.n	8001bd0 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001bc4:	4b59      	ldr	r3, [pc, #356]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001bc6:	685b      	ldr	r3, [r3, #4]
 8001bc8:	4a58      	ldr	r2, [pc, #352]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001bca:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 8001bce:	6053      	str	r3, [r2, #4]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001bd0:	687b      	ldr	r3, [r7, #4]
 8001bd2:	681b      	ldr	r3, [r3, #0]
 8001bd4:	f003 0308 	and.w	r3, r3, #8
 8001bd8:	2b00      	cmp	r3, #0
 8001bda:	d005      	beq.n	8001be8 <HAL_RCC_ClockConfig+0x80>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001bdc:	4b53      	ldr	r3, [pc, #332]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001bde:	685b      	ldr	r3, [r3, #4]
 8001be0:	4a52      	ldr	r2, [pc, #328]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001be2:	f443 5360 	orr.w	r3, r3, #14336	@ 0x3800
 8001be6:	6053      	str	r3, [r2, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001be8:	4b50      	ldr	r3, [pc, #320]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001bea:	685b      	ldr	r3, [r3, #4]
 8001bec:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	689b      	ldr	r3, [r3, #8]
 8001bf4:	494d      	ldr	r1, [pc, #308]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001bf6:	4313      	orrs	r3, r2
 8001bf8:	604b      	str	r3, [r1, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	681b      	ldr	r3, [r3, #0]
 8001bfe:	f003 0301 	and.w	r3, r3, #1
 8001c02:	2b00      	cmp	r3, #0
 8001c04:	d040      	beq.n	8001c88 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	685b      	ldr	r3, [r3, #4]
 8001c0a:	2b01      	cmp	r3, #1
 8001c0c:	d107      	bne.n	8001c1e <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001c0e:	4b47      	ldr	r3, [pc, #284]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001c10:	681b      	ldr	r3, [r3, #0]
 8001c12:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001c16:	2b00      	cmp	r3, #0
 8001c18:	d115      	bne.n	8001c46 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001c1a:	2301      	movs	r3, #1
 8001c1c:	e07f      	b.n	8001d1e <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001c1e:	687b      	ldr	r3, [r7, #4]
 8001c20:	685b      	ldr	r3, [r3, #4]
 8001c22:	2b02      	cmp	r3, #2
 8001c24:	d107      	bne.n	8001c36 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001c26:	4b41      	ldr	r3, [pc, #260]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001c28:	681b      	ldr	r3, [r3, #0]
 8001c2a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	d109      	bne.n	8001c46 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001c32:	2301      	movs	r3, #1
 8001c34:	e073      	b.n	8001d1e <HAL_RCC_ClockConfig+0x1b6>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001c36:	4b3d      	ldr	r3, [pc, #244]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001c38:	681b      	ldr	r3, [r3, #0]
 8001c3a:	f003 0302 	and.w	r3, r3, #2
 8001c3e:	2b00      	cmp	r3, #0
 8001c40:	d101      	bne.n	8001c46 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001c42:	2301      	movs	r3, #1
 8001c44:	e06b      	b.n	8001d1e <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001c46:	4b39      	ldr	r3, [pc, #228]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001c48:	685b      	ldr	r3, [r3, #4]
 8001c4a:	f023 0203 	bic.w	r2, r3, #3
 8001c4e:	687b      	ldr	r3, [r7, #4]
 8001c50:	685b      	ldr	r3, [r3, #4]
 8001c52:	4936      	ldr	r1, [pc, #216]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001c54:	4313      	orrs	r3, r2
 8001c56:	604b      	str	r3, [r1, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8001c58:	f7ff fa26 	bl	80010a8 <HAL_GetTick>
 8001c5c:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001c5e:	e00a      	b.n	8001c76 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001c60:	f7ff fa22 	bl	80010a8 <HAL_GetTick>
 8001c64:	4602      	mov	r2, r0
 8001c66:	68fb      	ldr	r3, [r7, #12]
 8001c68:	1ad3      	subs	r3, r2, r3
 8001c6a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8001c6e:	4293      	cmp	r3, r2
 8001c70:	d901      	bls.n	8001c76 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8001c72:	2303      	movs	r3, #3
 8001c74:	e053      	b.n	8001d1e <HAL_RCC_ClockConfig+0x1b6>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001c76:	4b2d      	ldr	r3, [pc, #180]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001c78:	685b      	ldr	r3, [r3, #4]
 8001c7a:	f003 020c 	and.w	r2, r3, #12
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	685b      	ldr	r3, [r3, #4]
 8001c82:	009b      	lsls	r3, r3, #2
 8001c84:	429a      	cmp	r2, r3
 8001c86:	d1eb      	bne.n	8001c60 <HAL_RCC_ClockConfig+0xf8>
    }
  }

#if defined(FLASH_ACR_LATENCY)
  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8001c88:	4b27      	ldr	r3, [pc, #156]	@ (8001d28 <HAL_RCC_ClockConfig+0x1c0>)
 8001c8a:	681b      	ldr	r3, [r3, #0]
 8001c8c:	f003 0307 	and.w	r3, r3, #7
 8001c90:	683a      	ldr	r2, [r7, #0]
 8001c92:	429a      	cmp	r2, r3
 8001c94:	d210      	bcs.n	8001cb8 <HAL_RCC_ClockConfig+0x150>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001c96:	4b24      	ldr	r3, [pc, #144]	@ (8001d28 <HAL_RCC_ClockConfig+0x1c0>)
 8001c98:	681b      	ldr	r3, [r3, #0]
 8001c9a:	f023 0207 	bic.w	r2, r3, #7
 8001c9e:	4922      	ldr	r1, [pc, #136]	@ (8001d28 <HAL_RCC_ClockConfig+0x1c0>)
 8001ca0:	683b      	ldr	r3, [r7, #0]
 8001ca2:	4313      	orrs	r3, r2
 8001ca4:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001ca6:	4b20      	ldr	r3, [pc, #128]	@ (8001d28 <HAL_RCC_ClockConfig+0x1c0>)
 8001ca8:	681b      	ldr	r3, [r3, #0]
 8001caa:	f003 0307 	and.w	r3, r3, #7
 8001cae:	683a      	ldr	r2, [r7, #0]
 8001cb0:	429a      	cmp	r2, r3
 8001cb2:	d001      	beq.n	8001cb8 <HAL_RCC_ClockConfig+0x150>
  {
    return HAL_ERROR;
 8001cb4:	2301      	movs	r3, #1
 8001cb6:	e032      	b.n	8001d1e <HAL_RCC_ClockConfig+0x1b6>
  }
}
#endif /* FLASH_ACR_LATENCY */

/*-------------------------- PCLK1 Configuration ---------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001cb8:	687b      	ldr	r3, [r7, #4]
 8001cba:	681b      	ldr	r3, [r3, #0]
 8001cbc:	f003 0304 	and.w	r3, r3, #4
 8001cc0:	2b00      	cmp	r3, #0
 8001cc2:	d008      	beq.n	8001cd6 <HAL_RCC_ClockConfig+0x16e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001cc4:	4b19      	ldr	r3, [pc, #100]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001cc6:	685b      	ldr	r3, [r3, #4]
 8001cc8:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	68db      	ldr	r3, [r3, #12]
 8001cd0:	4916      	ldr	r1, [pc, #88]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001cd2:	4313      	orrs	r3, r2
 8001cd4:	604b      	str	r3, [r1, #4]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	681b      	ldr	r3, [r3, #0]
 8001cda:	f003 0308 	and.w	r3, r3, #8
 8001cde:	2b00      	cmp	r3, #0
 8001ce0:	d009      	beq.n	8001cf6 <HAL_RCC_ClockConfig+0x18e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8001ce2:	4b12      	ldr	r3, [pc, #72]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001ce4:	685b      	ldr	r3, [r3, #4]
 8001ce6:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	691b      	ldr	r3, [r3, #16]
 8001cee:	00db      	lsls	r3, r3, #3
 8001cf0:	490e      	ldr	r1, [pc, #56]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001cf2:	4313      	orrs	r3, r2
 8001cf4:	604b      	str	r3, [r1, #4]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001cf6:	f000 f821 	bl	8001d3c <HAL_RCC_GetSysClockFreq>
 8001cfa:	4602      	mov	r2, r0
 8001cfc:	4b0b      	ldr	r3, [pc, #44]	@ (8001d2c <HAL_RCC_ClockConfig+0x1c4>)
 8001cfe:	685b      	ldr	r3, [r3, #4]
 8001d00:	091b      	lsrs	r3, r3, #4
 8001d02:	f003 030f 	and.w	r3, r3, #15
 8001d06:	490a      	ldr	r1, [pc, #40]	@ (8001d30 <HAL_RCC_ClockConfig+0x1c8>)
 8001d08:	5ccb      	ldrb	r3, [r1, r3]
 8001d0a:	fa22 f303 	lsr.w	r3, r2, r3
 8001d0e:	4a09      	ldr	r2, [pc, #36]	@ (8001d34 <HAL_RCC_ClockConfig+0x1cc>)
 8001d10:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 8001d12:	4b09      	ldr	r3, [pc, #36]	@ (8001d38 <HAL_RCC_ClockConfig+0x1d0>)
 8001d14:	681b      	ldr	r3, [r3, #0]
 8001d16:	4618      	mov	r0, r3
 8001d18:	f7ff f984 	bl	8001024 <HAL_InitTick>

  return HAL_OK;
 8001d1c:	2300      	movs	r3, #0
}
 8001d1e:	4618      	mov	r0, r3
 8001d20:	3710      	adds	r7, #16
 8001d22:	46bd      	mov	sp, r7
 8001d24:	bd80      	pop	{r7, pc}
 8001d26:	bf00      	nop
 8001d28:	40022000 	.word	0x40022000
 8001d2c:	40021000 	.word	0x40021000
 8001d30:	080064f0 	.word	0x080064f0
 8001d34:	20000000 	.word	0x20000000
 8001d38:	20000004 	.word	0x20000004

08001d3c <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8001d3c:	b480      	push	{r7}
 8001d3e:	b087      	sub	sp, #28
 8001d40:	af00      	add	r7, sp, #0
#else
  static const uint8_t aPredivFactorTable[2U] = {1, 2};
#endif /*RCC_CFGR2_PREDIV1*/

#endif
  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8001d42:	2300      	movs	r3, #0
 8001d44:	60fb      	str	r3, [r7, #12]
 8001d46:	2300      	movs	r3, #0
 8001d48:	60bb      	str	r3, [r7, #8]
 8001d4a:	2300      	movs	r3, #0
 8001d4c:	617b      	str	r3, [r7, #20]
 8001d4e:	2300      	movs	r3, #0
 8001d50:	607b      	str	r3, [r7, #4]
  uint32_t sysclockfreq = 0U;
 8001d52:	2300      	movs	r3, #0
 8001d54:	613b      	str	r3, [r7, #16]
#if defined(RCC_CFGR2_PREDIV1SRC)
  uint32_t prediv2 = 0U, pll2mul = 0U;
#endif /*RCC_CFGR2_PREDIV1SRC*/

  tmpreg = RCC->CFGR;
 8001d56:	4b1e      	ldr	r3, [pc, #120]	@ (8001dd0 <HAL_RCC_GetSysClockFreq+0x94>)
 8001d58:	685b      	ldr	r3, [r3, #4]
 8001d5a:	60fb      	str	r3, [r7, #12]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	f003 030c 	and.w	r3, r3, #12
 8001d62:	2b04      	cmp	r3, #4
 8001d64:	d002      	beq.n	8001d6c <HAL_RCC_GetSysClockFreq+0x30>
 8001d66:	2b08      	cmp	r3, #8
 8001d68:	d003      	beq.n	8001d72 <HAL_RCC_GetSysClockFreq+0x36>
 8001d6a:	e027      	b.n	8001dbc <HAL_RCC_GetSysClockFreq+0x80>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8001d6c:	4b19      	ldr	r3, [pc, #100]	@ (8001dd4 <HAL_RCC_GetSysClockFreq+0x98>)
 8001d6e:	613b      	str	r3, [r7, #16]
      break;
 8001d70:	e027      	b.n	8001dc2 <HAL_RCC_GetSysClockFreq+0x86>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 8001d72:	68fb      	ldr	r3, [r7, #12]
 8001d74:	0c9b      	lsrs	r3, r3, #18
 8001d76:	f003 030f 	and.w	r3, r3, #15
 8001d7a:	4a17      	ldr	r2, [pc, #92]	@ (8001dd8 <HAL_RCC_GetSysClockFreq+0x9c>)
 8001d7c:	5cd3      	ldrb	r3, [r2, r3]
 8001d7e:	607b      	str	r3, [r7, #4]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 8001d80:	68fb      	ldr	r3, [r7, #12]
 8001d82:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001d86:	2b00      	cmp	r3, #0
 8001d88:	d010      	beq.n	8001dac <HAL_RCC_GetSysClockFreq+0x70>
      {
#if defined(RCC_CFGR2_PREDIV1)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1_Pos];
#else
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 8001d8a:	4b11      	ldr	r3, [pc, #68]	@ (8001dd0 <HAL_RCC_GetSysClockFreq+0x94>)
 8001d8c:	685b      	ldr	r3, [r3, #4]
 8001d8e:	0c5b      	lsrs	r3, r3, #17
 8001d90:	f003 0301 	and.w	r3, r3, #1
 8001d94:	4a11      	ldr	r2, [pc, #68]	@ (8001ddc <HAL_RCC_GetSysClockFreq+0xa0>)
 8001d96:	5cd3      	ldrb	r3, [r2, r3]
 8001d98:	60bb      	str	r3, [r7, #8]
        {
          pllclk = pllclk / 2;
        }
#else
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8001d9a:	687b      	ldr	r3, [r7, #4]
 8001d9c:	4a0d      	ldr	r2, [pc, #52]	@ (8001dd4 <HAL_RCC_GetSysClockFreq+0x98>)
 8001d9e:	fb03 f202 	mul.w	r2, r3, r2
 8001da2:	68bb      	ldr	r3, [r7, #8]
 8001da4:	fbb2 f3f3 	udiv	r3, r2, r3
 8001da8:	617b      	str	r3, [r7, #20]
 8001daa:	e004      	b.n	8001db6 <HAL_RCC_GetSysClockFreq+0x7a>
#endif /*RCC_CFGR2_PREDIV1SRC*/
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 8001dac:	687b      	ldr	r3, [r7, #4]
 8001dae:	4a0c      	ldr	r2, [pc, #48]	@ (8001de0 <HAL_RCC_GetSysClockFreq+0xa4>)
 8001db0:	fb02 f303 	mul.w	r3, r2, r3
 8001db4:	617b      	str	r3, [r7, #20]
      }
      sysclockfreq = pllclk;
 8001db6:	697b      	ldr	r3, [r7, #20]
 8001db8:	613b      	str	r3, [r7, #16]
      break;
 8001dba:	e002      	b.n	8001dc2 <HAL_RCC_GetSysClockFreq+0x86>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8001dbc:	4b05      	ldr	r3, [pc, #20]	@ (8001dd4 <HAL_RCC_GetSysClockFreq+0x98>)
 8001dbe:	613b      	str	r3, [r7, #16]
      break;
 8001dc0:	bf00      	nop
    }
  }
  return sysclockfreq;
 8001dc2:	693b      	ldr	r3, [r7, #16]
}
 8001dc4:	4618      	mov	r0, r3
 8001dc6:	371c      	adds	r7, #28
 8001dc8:	46bd      	mov	sp, r7
 8001dca:	bc80      	pop	{r7}
 8001dcc:	4770      	bx	lr
 8001dce:	bf00      	nop
 8001dd0:	40021000 	.word	0x40021000
 8001dd4:	007a1200 	.word	0x007a1200
 8001dd8:	08006500 	.word	0x08006500
 8001ddc:	08006510 	.word	0x08006510
 8001de0:	003d0900 	.word	0x003d0900

08001de4 <RCC_Delay>:
  * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
 8001de4:	b480      	push	{r7}
 8001de6:	b085      	sub	sp, #20
 8001de8:	af00      	add	r7, sp, #0
 8001dea:	6078      	str	r0, [r7, #4]
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 8001dec:	4b0a      	ldr	r3, [pc, #40]	@ (8001e18 <RCC_Delay+0x34>)
 8001dee:	681b      	ldr	r3, [r3, #0]
 8001df0:	4a0a      	ldr	r2, [pc, #40]	@ (8001e1c <RCC_Delay+0x38>)
 8001df2:	fba2 2303 	umull	r2, r3, r2, r3
 8001df6:	0a5b      	lsrs	r3, r3, #9
 8001df8:	687a      	ldr	r2, [r7, #4]
 8001dfa:	fb02 f303 	mul.w	r3, r2, r3
 8001dfe:	60fb      	str	r3, [r7, #12]
  do
  {
    __NOP();
 8001e00:	bf00      	nop
  }
  while (Delay --);
 8001e02:	68fb      	ldr	r3, [r7, #12]
 8001e04:	1e5a      	subs	r2, r3, #1
 8001e06:	60fa      	str	r2, [r7, #12]
 8001e08:	2b00      	cmp	r3, #0
 8001e0a:	d1f9      	bne.n	8001e00 <RCC_Delay+0x1c>
}
 8001e0c:	bf00      	nop
 8001e0e:	bf00      	nop
 8001e10:	3714      	adds	r7, #20
 8001e12:	46bd      	mov	sp, r7
 8001e14:	bc80      	pop	{r7}
 8001e16:	4770      	bx	lr
 8001e18:	20000000 	.word	0x20000000
 8001e1c:	10624dd3 	.word	0x10624dd3

08001e20 <__cvt>:
 8001e20:	2b00      	cmp	r3, #0
 8001e22:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e26:	461d      	mov	r5, r3
 8001e28:	bfbb      	ittet	lt
 8001e2a:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8001e2e:	461d      	movlt	r5, r3
 8001e30:	2300      	movge	r3, #0
 8001e32:	232d      	movlt	r3, #45	@ 0x2d
 8001e34:	b088      	sub	sp, #32
 8001e36:	4614      	mov	r4, r2
 8001e38:	bfb8      	it	lt
 8001e3a:	4614      	movlt	r4, r2
 8001e3c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8001e3e:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8001e40:	7013      	strb	r3, [r2, #0]
 8001e42:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8001e44:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8001e48:	f023 0820 	bic.w	r8, r3, #32
 8001e4c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001e50:	d005      	beq.n	8001e5e <__cvt+0x3e>
 8001e52:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001e56:	d100      	bne.n	8001e5a <__cvt+0x3a>
 8001e58:	3601      	adds	r6, #1
 8001e5a:	2302      	movs	r3, #2
 8001e5c:	e000      	b.n	8001e60 <__cvt+0x40>
 8001e5e:	2303      	movs	r3, #3
 8001e60:	aa07      	add	r2, sp, #28
 8001e62:	9204      	str	r2, [sp, #16]
 8001e64:	aa06      	add	r2, sp, #24
 8001e66:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001e6a:	e9cd 3600 	strd	r3, r6, [sp]
 8001e6e:	4622      	mov	r2, r4
 8001e70:	462b      	mov	r3, r5
 8001e72:	f001 f881 	bl	8002f78 <_dtoa_r>
 8001e76:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001e7a:	4607      	mov	r7, r0
 8001e7c:	d119      	bne.n	8001eb2 <__cvt+0x92>
 8001e7e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8001e80:	07db      	lsls	r3, r3, #31
 8001e82:	d50e      	bpl.n	8001ea2 <__cvt+0x82>
 8001e84:	eb00 0906 	add.w	r9, r0, r6
 8001e88:	2200      	movs	r2, #0
 8001e8a:	2300      	movs	r3, #0
 8001e8c:	4620      	mov	r0, r4
 8001e8e:	4629      	mov	r1, r5
 8001e90:	f7fe fd8a 	bl	80009a8 <__aeabi_dcmpeq>
 8001e94:	b108      	cbz	r0, 8001e9a <__cvt+0x7a>
 8001e96:	f8cd 901c 	str.w	r9, [sp, #28]
 8001e9a:	2230      	movs	r2, #48	@ 0x30
 8001e9c:	9b07      	ldr	r3, [sp, #28]
 8001e9e:	454b      	cmp	r3, r9
 8001ea0:	d31e      	bcc.n	8001ee0 <__cvt+0xc0>
 8001ea2:	4638      	mov	r0, r7
 8001ea4:	9b07      	ldr	r3, [sp, #28]
 8001ea6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8001ea8:	1bdb      	subs	r3, r3, r7
 8001eaa:	6013      	str	r3, [r2, #0]
 8001eac:	b008      	add	sp, #32
 8001eae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001eb2:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001eb6:	eb00 0906 	add.w	r9, r0, r6
 8001eba:	d1e5      	bne.n	8001e88 <__cvt+0x68>
 8001ebc:	7803      	ldrb	r3, [r0, #0]
 8001ebe:	2b30      	cmp	r3, #48	@ 0x30
 8001ec0:	d10a      	bne.n	8001ed8 <__cvt+0xb8>
 8001ec2:	2200      	movs	r2, #0
 8001ec4:	2300      	movs	r3, #0
 8001ec6:	4620      	mov	r0, r4
 8001ec8:	4629      	mov	r1, r5
 8001eca:	f7fe fd6d 	bl	80009a8 <__aeabi_dcmpeq>
 8001ece:	b918      	cbnz	r0, 8001ed8 <__cvt+0xb8>
 8001ed0:	f1c6 0601 	rsb	r6, r6, #1
 8001ed4:	f8ca 6000 	str.w	r6, [sl]
 8001ed8:	f8da 3000 	ldr.w	r3, [sl]
 8001edc:	4499      	add	r9, r3
 8001ede:	e7d3      	b.n	8001e88 <__cvt+0x68>
 8001ee0:	1c59      	adds	r1, r3, #1
 8001ee2:	9107      	str	r1, [sp, #28]
 8001ee4:	701a      	strb	r2, [r3, #0]
 8001ee6:	e7d9      	b.n	8001e9c <__cvt+0x7c>

08001ee8 <__exponent>:
 8001ee8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001eea:	2900      	cmp	r1, #0
 8001eec:	bfb6      	itet	lt
 8001eee:	232d      	movlt	r3, #45	@ 0x2d
 8001ef0:	232b      	movge	r3, #43	@ 0x2b
 8001ef2:	4249      	neglt	r1, r1
 8001ef4:	2909      	cmp	r1, #9
 8001ef6:	7002      	strb	r2, [r0, #0]
 8001ef8:	7043      	strb	r3, [r0, #1]
 8001efa:	dd29      	ble.n	8001f50 <__exponent+0x68>
 8001efc:	f10d 0307 	add.w	r3, sp, #7
 8001f00:	461d      	mov	r5, r3
 8001f02:	270a      	movs	r7, #10
 8001f04:	fbb1 f6f7 	udiv	r6, r1, r7
 8001f08:	461a      	mov	r2, r3
 8001f0a:	fb07 1416 	mls	r4, r7, r6, r1
 8001f0e:	3430      	adds	r4, #48	@ 0x30
 8001f10:	f802 4c01 	strb.w	r4, [r2, #-1]
 8001f14:	460c      	mov	r4, r1
 8001f16:	2c63      	cmp	r4, #99	@ 0x63
 8001f18:	4631      	mov	r1, r6
 8001f1a:	f103 33ff 	add.w	r3, r3, #4294967295
 8001f1e:	dcf1      	bgt.n	8001f04 <__exponent+0x1c>
 8001f20:	3130      	adds	r1, #48	@ 0x30
 8001f22:	1e94      	subs	r4, r2, #2
 8001f24:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001f28:	4623      	mov	r3, r4
 8001f2a:	1c41      	adds	r1, r0, #1
 8001f2c:	42ab      	cmp	r3, r5
 8001f2e:	d30a      	bcc.n	8001f46 <__exponent+0x5e>
 8001f30:	f10d 0309 	add.w	r3, sp, #9
 8001f34:	1a9b      	subs	r3, r3, r2
 8001f36:	42ac      	cmp	r4, r5
 8001f38:	bf88      	it	hi
 8001f3a:	2300      	movhi	r3, #0
 8001f3c:	3302      	adds	r3, #2
 8001f3e:	4403      	add	r3, r0
 8001f40:	1a18      	subs	r0, r3, r0
 8001f42:	b003      	add	sp, #12
 8001f44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001f46:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001f4a:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001f4e:	e7ed      	b.n	8001f2c <__exponent+0x44>
 8001f50:	2330      	movs	r3, #48	@ 0x30
 8001f52:	3130      	adds	r1, #48	@ 0x30
 8001f54:	7083      	strb	r3, [r0, #2]
 8001f56:	70c1      	strb	r1, [r0, #3]
 8001f58:	1d03      	adds	r3, r0, #4
 8001f5a:	e7f1      	b.n	8001f40 <__exponent+0x58>

08001f5c <_printf_float>:
 8001f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001f60:	b091      	sub	sp, #68	@ 0x44
 8001f62:	460c      	mov	r4, r1
 8001f64:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8001f68:	4616      	mov	r6, r2
 8001f6a:	461f      	mov	r7, r3
 8001f6c:	4605      	mov	r5, r0
 8001f6e:	f000 fef1 	bl	8002d54 <_localeconv_r>
 8001f72:	6803      	ldr	r3, [r0, #0]
 8001f74:	4618      	mov	r0, r3
 8001f76:	9308      	str	r3, [sp, #32]
 8001f78:	f7fe f8ea 	bl	8000150 <strlen>
 8001f7c:	2300      	movs	r3, #0
 8001f7e:	930e      	str	r3, [sp, #56]	@ 0x38
 8001f80:	f8d8 3000 	ldr.w	r3, [r8]
 8001f84:	9009      	str	r0, [sp, #36]	@ 0x24
 8001f86:	3307      	adds	r3, #7
 8001f88:	f023 0307 	bic.w	r3, r3, #7
 8001f8c:	f103 0208 	add.w	r2, r3, #8
 8001f90:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001f94:	f8d4 b000 	ldr.w	fp, [r4]
 8001f98:	f8c8 2000 	str.w	r2, [r8]
 8001f9c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001fa0:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001fa4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001fa6:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 8001faa:	f04f 32ff 	mov.w	r2, #4294967295
 8001fae:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001fb2:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001fb6:	4b9c      	ldr	r3, [pc, #624]	@ (8002228 <_printf_float+0x2cc>)
 8001fb8:	f7fe fd28 	bl	8000a0c <__aeabi_dcmpun>
 8001fbc:	bb70      	cbnz	r0, 800201c <_printf_float+0xc0>
 8001fbe:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8001fc2:	f04f 32ff 	mov.w	r2, #4294967295
 8001fc6:	4b98      	ldr	r3, [pc, #608]	@ (8002228 <_printf_float+0x2cc>)
 8001fc8:	f7fe fd02 	bl	80009d0 <__aeabi_dcmple>
 8001fcc:	bb30      	cbnz	r0, 800201c <_printf_float+0xc0>
 8001fce:	2200      	movs	r2, #0
 8001fd0:	2300      	movs	r3, #0
 8001fd2:	4640      	mov	r0, r8
 8001fd4:	4649      	mov	r1, r9
 8001fd6:	f7fe fcf1 	bl	80009bc <__aeabi_dcmplt>
 8001fda:	b110      	cbz	r0, 8001fe2 <_printf_float+0x86>
 8001fdc:	232d      	movs	r3, #45	@ 0x2d
 8001fde:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001fe2:	4a92      	ldr	r2, [pc, #584]	@ (800222c <_printf_float+0x2d0>)
 8001fe4:	4b92      	ldr	r3, [pc, #584]	@ (8002230 <_printf_float+0x2d4>)
 8001fe6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001fea:	bf94      	ite	ls
 8001fec:	4690      	movls	r8, r2
 8001fee:	4698      	movhi	r8, r3
 8001ff0:	2303      	movs	r3, #3
 8001ff2:	f04f 0900 	mov.w	r9, #0
 8001ff6:	6123      	str	r3, [r4, #16]
 8001ff8:	f02b 0304 	bic.w	r3, fp, #4
 8001ffc:	6023      	str	r3, [r4, #0]
 8001ffe:	4633      	mov	r3, r6
 8002000:	4621      	mov	r1, r4
 8002002:	4628      	mov	r0, r5
 8002004:	9700      	str	r7, [sp, #0]
 8002006:	aa0f      	add	r2, sp, #60	@ 0x3c
 8002008:	f000 f9d4 	bl	80023b4 <_printf_common>
 800200c:	3001      	adds	r0, #1
 800200e:	f040 8090 	bne.w	8002132 <_printf_float+0x1d6>
 8002012:	f04f 30ff 	mov.w	r0, #4294967295
 8002016:	b011      	add	sp, #68	@ 0x44
 8002018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800201c:	4642      	mov	r2, r8
 800201e:	464b      	mov	r3, r9
 8002020:	4640      	mov	r0, r8
 8002022:	4649      	mov	r1, r9
 8002024:	f7fe fcf2 	bl	8000a0c <__aeabi_dcmpun>
 8002028:	b148      	cbz	r0, 800203e <_printf_float+0xe2>
 800202a:	464b      	mov	r3, r9
 800202c:	2b00      	cmp	r3, #0
 800202e:	bfb8      	it	lt
 8002030:	232d      	movlt	r3, #45	@ 0x2d
 8002032:	4a80      	ldr	r2, [pc, #512]	@ (8002234 <_printf_float+0x2d8>)
 8002034:	bfb8      	it	lt
 8002036:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800203a:	4b7f      	ldr	r3, [pc, #508]	@ (8002238 <_printf_float+0x2dc>)
 800203c:	e7d3      	b.n	8001fe6 <_printf_float+0x8a>
 800203e:	6863      	ldr	r3, [r4, #4]
 8002040:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8002044:	1c5a      	adds	r2, r3, #1
 8002046:	d13f      	bne.n	80020c8 <_printf_float+0x16c>
 8002048:	2306      	movs	r3, #6
 800204a:	6063      	str	r3, [r4, #4]
 800204c:	2200      	movs	r2, #0
 800204e:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8002052:	6023      	str	r3, [r4, #0]
 8002054:	9206      	str	r2, [sp, #24]
 8002056:	aa0e      	add	r2, sp, #56	@ 0x38
 8002058:	e9cd a204 	strd	sl, r2, [sp, #16]
 800205c:	aa0d      	add	r2, sp, #52	@ 0x34
 800205e:	9203      	str	r2, [sp, #12]
 8002060:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8002064:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002068:	6863      	ldr	r3, [r4, #4]
 800206a:	4642      	mov	r2, r8
 800206c:	9300      	str	r3, [sp, #0]
 800206e:	4628      	mov	r0, r5
 8002070:	464b      	mov	r3, r9
 8002072:	910a      	str	r1, [sp, #40]	@ 0x28
 8002074:	f7ff fed4 	bl	8001e20 <__cvt>
 8002078:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800207a:	4680      	mov	r8, r0
 800207c:	2947      	cmp	r1, #71	@ 0x47
 800207e:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8002080:	d128      	bne.n	80020d4 <_printf_float+0x178>
 8002082:	1cc8      	adds	r0, r1, #3
 8002084:	db02      	blt.n	800208c <_printf_float+0x130>
 8002086:	6863      	ldr	r3, [r4, #4]
 8002088:	4299      	cmp	r1, r3
 800208a:	dd40      	ble.n	800210e <_printf_float+0x1b2>
 800208c:	f1aa 0a02 	sub.w	sl, sl, #2
 8002090:	fa5f fa8a 	uxtb.w	sl, sl
 8002094:	4652      	mov	r2, sl
 8002096:	3901      	subs	r1, #1
 8002098:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800209c:	910d      	str	r1, [sp, #52]	@ 0x34
 800209e:	f7ff ff23 	bl	8001ee8 <__exponent>
 80020a2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80020a4:	4681      	mov	r9, r0
 80020a6:	1813      	adds	r3, r2, r0
 80020a8:	2a01      	cmp	r2, #1
 80020aa:	6123      	str	r3, [r4, #16]
 80020ac:	dc02      	bgt.n	80020b4 <_printf_float+0x158>
 80020ae:	6822      	ldr	r2, [r4, #0]
 80020b0:	07d2      	lsls	r2, r2, #31
 80020b2:	d501      	bpl.n	80020b8 <_printf_float+0x15c>
 80020b4:	3301      	adds	r3, #1
 80020b6:	6123      	str	r3, [r4, #16]
 80020b8:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 80020bc:	2b00      	cmp	r3, #0
 80020be:	d09e      	beq.n	8001ffe <_printf_float+0xa2>
 80020c0:	232d      	movs	r3, #45	@ 0x2d
 80020c2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80020c6:	e79a      	b.n	8001ffe <_printf_float+0xa2>
 80020c8:	2947      	cmp	r1, #71	@ 0x47
 80020ca:	d1bf      	bne.n	800204c <_printf_float+0xf0>
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	d1bd      	bne.n	800204c <_printf_float+0xf0>
 80020d0:	2301      	movs	r3, #1
 80020d2:	e7ba      	b.n	800204a <_printf_float+0xee>
 80020d4:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80020d8:	d9dc      	bls.n	8002094 <_printf_float+0x138>
 80020da:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 80020de:	d118      	bne.n	8002112 <_printf_float+0x1b6>
 80020e0:	2900      	cmp	r1, #0
 80020e2:	6863      	ldr	r3, [r4, #4]
 80020e4:	dd0b      	ble.n	80020fe <_printf_float+0x1a2>
 80020e6:	6121      	str	r1, [r4, #16]
 80020e8:	b913      	cbnz	r3, 80020f0 <_printf_float+0x194>
 80020ea:	6822      	ldr	r2, [r4, #0]
 80020ec:	07d0      	lsls	r0, r2, #31
 80020ee:	d502      	bpl.n	80020f6 <_printf_float+0x19a>
 80020f0:	3301      	adds	r3, #1
 80020f2:	440b      	add	r3, r1
 80020f4:	6123      	str	r3, [r4, #16]
 80020f6:	f04f 0900 	mov.w	r9, #0
 80020fa:	65a1      	str	r1, [r4, #88]	@ 0x58
 80020fc:	e7dc      	b.n	80020b8 <_printf_float+0x15c>
 80020fe:	b913      	cbnz	r3, 8002106 <_printf_float+0x1aa>
 8002100:	6822      	ldr	r2, [r4, #0]
 8002102:	07d2      	lsls	r2, r2, #31
 8002104:	d501      	bpl.n	800210a <_printf_float+0x1ae>
 8002106:	3302      	adds	r3, #2
 8002108:	e7f4      	b.n	80020f4 <_printf_float+0x198>
 800210a:	2301      	movs	r3, #1
 800210c:	e7f2      	b.n	80020f4 <_printf_float+0x198>
 800210e:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8002112:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002114:	4299      	cmp	r1, r3
 8002116:	db05      	blt.n	8002124 <_printf_float+0x1c8>
 8002118:	6823      	ldr	r3, [r4, #0]
 800211a:	6121      	str	r1, [r4, #16]
 800211c:	07d8      	lsls	r0, r3, #31
 800211e:	d5ea      	bpl.n	80020f6 <_printf_float+0x19a>
 8002120:	1c4b      	adds	r3, r1, #1
 8002122:	e7e7      	b.n	80020f4 <_printf_float+0x198>
 8002124:	2900      	cmp	r1, #0
 8002126:	bfcc      	ite	gt
 8002128:	2201      	movgt	r2, #1
 800212a:	f1c1 0202 	rsble	r2, r1, #2
 800212e:	4413      	add	r3, r2
 8002130:	e7e0      	b.n	80020f4 <_printf_float+0x198>
 8002132:	6823      	ldr	r3, [r4, #0]
 8002134:	055a      	lsls	r2, r3, #21
 8002136:	d407      	bmi.n	8002148 <_printf_float+0x1ec>
 8002138:	6923      	ldr	r3, [r4, #16]
 800213a:	4642      	mov	r2, r8
 800213c:	4631      	mov	r1, r6
 800213e:	4628      	mov	r0, r5
 8002140:	47b8      	blx	r7
 8002142:	3001      	adds	r0, #1
 8002144:	d12b      	bne.n	800219e <_printf_float+0x242>
 8002146:	e764      	b.n	8002012 <_printf_float+0xb6>
 8002148:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800214c:	f240 80dc 	bls.w	8002308 <_printf_float+0x3ac>
 8002150:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002154:	2200      	movs	r2, #0
 8002156:	2300      	movs	r3, #0
 8002158:	f7fe fc26 	bl	80009a8 <__aeabi_dcmpeq>
 800215c:	2800      	cmp	r0, #0
 800215e:	d033      	beq.n	80021c8 <_printf_float+0x26c>
 8002160:	2301      	movs	r3, #1
 8002162:	4631      	mov	r1, r6
 8002164:	4628      	mov	r0, r5
 8002166:	4a35      	ldr	r2, [pc, #212]	@ (800223c <_printf_float+0x2e0>)
 8002168:	47b8      	blx	r7
 800216a:	3001      	adds	r0, #1
 800216c:	f43f af51 	beq.w	8002012 <_printf_float+0xb6>
 8002170:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 8002174:	4543      	cmp	r3, r8
 8002176:	db02      	blt.n	800217e <_printf_float+0x222>
 8002178:	6823      	ldr	r3, [r4, #0]
 800217a:	07d8      	lsls	r0, r3, #31
 800217c:	d50f      	bpl.n	800219e <_printf_float+0x242>
 800217e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002182:	4631      	mov	r1, r6
 8002184:	4628      	mov	r0, r5
 8002186:	47b8      	blx	r7
 8002188:	3001      	adds	r0, #1
 800218a:	f43f af42 	beq.w	8002012 <_printf_float+0xb6>
 800218e:	f04f 0900 	mov.w	r9, #0
 8002192:	f108 38ff 	add.w	r8, r8, #4294967295
 8002196:	f104 0a1a 	add.w	sl, r4, #26
 800219a:	45c8      	cmp	r8, r9
 800219c:	dc09      	bgt.n	80021b2 <_printf_float+0x256>
 800219e:	6823      	ldr	r3, [r4, #0]
 80021a0:	079b      	lsls	r3, r3, #30
 80021a2:	f100 8102 	bmi.w	80023aa <_printf_float+0x44e>
 80021a6:	68e0      	ldr	r0, [r4, #12]
 80021a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80021aa:	4298      	cmp	r0, r3
 80021ac:	bfb8      	it	lt
 80021ae:	4618      	movlt	r0, r3
 80021b0:	e731      	b.n	8002016 <_printf_float+0xba>
 80021b2:	2301      	movs	r3, #1
 80021b4:	4652      	mov	r2, sl
 80021b6:	4631      	mov	r1, r6
 80021b8:	4628      	mov	r0, r5
 80021ba:	47b8      	blx	r7
 80021bc:	3001      	adds	r0, #1
 80021be:	f43f af28 	beq.w	8002012 <_printf_float+0xb6>
 80021c2:	f109 0901 	add.w	r9, r9, #1
 80021c6:	e7e8      	b.n	800219a <_printf_float+0x23e>
 80021c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80021ca:	2b00      	cmp	r3, #0
 80021cc:	dc38      	bgt.n	8002240 <_printf_float+0x2e4>
 80021ce:	2301      	movs	r3, #1
 80021d0:	4631      	mov	r1, r6
 80021d2:	4628      	mov	r0, r5
 80021d4:	4a19      	ldr	r2, [pc, #100]	@ (800223c <_printf_float+0x2e0>)
 80021d6:	47b8      	blx	r7
 80021d8:	3001      	adds	r0, #1
 80021da:	f43f af1a 	beq.w	8002012 <_printf_float+0xb6>
 80021de:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 80021e2:	ea59 0303 	orrs.w	r3, r9, r3
 80021e6:	d102      	bne.n	80021ee <_printf_float+0x292>
 80021e8:	6823      	ldr	r3, [r4, #0]
 80021ea:	07d9      	lsls	r1, r3, #31
 80021ec:	d5d7      	bpl.n	800219e <_printf_float+0x242>
 80021ee:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80021f2:	4631      	mov	r1, r6
 80021f4:	4628      	mov	r0, r5
 80021f6:	47b8      	blx	r7
 80021f8:	3001      	adds	r0, #1
 80021fa:	f43f af0a 	beq.w	8002012 <_printf_float+0xb6>
 80021fe:	f04f 0a00 	mov.w	sl, #0
 8002202:	f104 0b1a 	add.w	fp, r4, #26
 8002206:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002208:	425b      	negs	r3, r3
 800220a:	4553      	cmp	r3, sl
 800220c:	dc01      	bgt.n	8002212 <_printf_float+0x2b6>
 800220e:	464b      	mov	r3, r9
 8002210:	e793      	b.n	800213a <_printf_float+0x1de>
 8002212:	2301      	movs	r3, #1
 8002214:	465a      	mov	r2, fp
 8002216:	4631      	mov	r1, r6
 8002218:	4628      	mov	r0, r5
 800221a:	47b8      	blx	r7
 800221c:	3001      	adds	r0, #1
 800221e:	f43f aef8 	beq.w	8002012 <_printf_float+0xb6>
 8002222:	f10a 0a01 	add.w	sl, sl, #1
 8002226:	e7ee      	b.n	8002206 <_printf_float+0x2aa>
 8002228:	7fefffff 	.word	0x7fefffff
 800222c:	08006512 	.word	0x08006512
 8002230:	08006516 	.word	0x08006516
 8002234:	0800651a 	.word	0x0800651a
 8002238:	0800651e 	.word	0x0800651e
 800223c:	08006522 	.word	0x08006522
 8002240:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002242:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8002246:	4553      	cmp	r3, sl
 8002248:	bfa8      	it	ge
 800224a:	4653      	movge	r3, sl
 800224c:	2b00      	cmp	r3, #0
 800224e:	4699      	mov	r9, r3
 8002250:	dc36      	bgt.n	80022c0 <_printf_float+0x364>
 8002252:	f04f 0b00 	mov.w	fp, #0
 8002256:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800225a:	f104 021a 	add.w	r2, r4, #26
 800225e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002260:	930a      	str	r3, [sp, #40]	@ 0x28
 8002262:	eba3 0309 	sub.w	r3, r3, r9
 8002266:	455b      	cmp	r3, fp
 8002268:	dc31      	bgt.n	80022ce <_printf_float+0x372>
 800226a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800226c:	459a      	cmp	sl, r3
 800226e:	dc3a      	bgt.n	80022e6 <_printf_float+0x38a>
 8002270:	6823      	ldr	r3, [r4, #0]
 8002272:	07da      	lsls	r2, r3, #31
 8002274:	d437      	bmi.n	80022e6 <_printf_float+0x38a>
 8002276:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002278:	ebaa 0903 	sub.w	r9, sl, r3
 800227c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800227e:	ebaa 0303 	sub.w	r3, sl, r3
 8002282:	4599      	cmp	r9, r3
 8002284:	bfa8      	it	ge
 8002286:	4699      	movge	r9, r3
 8002288:	f1b9 0f00 	cmp.w	r9, #0
 800228c:	dc33      	bgt.n	80022f6 <_printf_float+0x39a>
 800228e:	f04f 0800 	mov.w	r8, #0
 8002292:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002296:	f104 0b1a 	add.w	fp, r4, #26
 800229a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800229c:	ebaa 0303 	sub.w	r3, sl, r3
 80022a0:	eba3 0309 	sub.w	r3, r3, r9
 80022a4:	4543      	cmp	r3, r8
 80022a6:	f77f af7a 	ble.w	800219e <_printf_float+0x242>
 80022aa:	2301      	movs	r3, #1
 80022ac:	465a      	mov	r2, fp
 80022ae:	4631      	mov	r1, r6
 80022b0:	4628      	mov	r0, r5
 80022b2:	47b8      	blx	r7
 80022b4:	3001      	adds	r0, #1
 80022b6:	f43f aeac 	beq.w	8002012 <_printf_float+0xb6>
 80022ba:	f108 0801 	add.w	r8, r8, #1
 80022be:	e7ec      	b.n	800229a <_printf_float+0x33e>
 80022c0:	4642      	mov	r2, r8
 80022c2:	4631      	mov	r1, r6
 80022c4:	4628      	mov	r0, r5
 80022c6:	47b8      	blx	r7
 80022c8:	3001      	adds	r0, #1
 80022ca:	d1c2      	bne.n	8002252 <_printf_float+0x2f6>
 80022cc:	e6a1      	b.n	8002012 <_printf_float+0xb6>
 80022ce:	2301      	movs	r3, #1
 80022d0:	4631      	mov	r1, r6
 80022d2:	4628      	mov	r0, r5
 80022d4:	920a      	str	r2, [sp, #40]	@ 0x28
 80022d6:	47b8      	blx	r7
 80022d8:	3001      	adds	r0, #1
 80022da:	f43f ae9a 	beq.w	8002012 <_printf_float+0xb6>
 80022de:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80022e0:	f10b 0b01 	add.w	fp, fp, #1
 80022e4:	e7bb      	b.n	800225e <_printf_float+0x302>
 80022e6:	4631      	mov	r1, r6
 80022e8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80022ec:	4628      	mov	r0, r5
 80022ee:	47b8      	blx	r7
 80022f0:	3001      	adds	r0, #1
 80022f2:	d1c0      	bne.n	8002276 <_printf_float+0x31a>
 80022f4:	e68d      	b.n	8002012 <_printf_float+0xb6>
 80022f6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80022f8:	464b      	mov	r3, r9
 80022fa:	4631      	mov	r1, r6
 80022fc:	4628      	mov	r0, r5
 80022fe:	4442      	add	r2, r8
 8002300:	47b8      	blx	r7
 8002302:	3001      	adds	r0, #1
 8002304:	d1c3      	bne.n	800228e <_printf_float+0x332>
 8002306:	e684      	b.n	8002012 <_printf_float+0xb6>
 8002308:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 800230c:	f1ba 0f01 	cmp.w	sl, #1
 8002310:	dc01      	bgt.n	8002316 <_printf_float+0x3ba>
 8002312:	07db      	lsls	r3, r3, #31
 8002314:	d536      	bpl.n	8002384 <_printf_float+0x428>
 8002316:	2301      	movs	r3, #1
 8002318:	4642      	mov	r2, r8
 800231a:	4631      	mov	r1, r6
 800231c:	4628      	mov	r0, r5
 800231e:	47b8      	blx	r7
 8002320:	3001      	adds	r0, #1
 8002322:	f43f ae76 	beq.w	8002012 <_printf_float+0xb6>
 8002326:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800232a:	4631      	mov	r1, r6
 800232c:	4628      	mov	r0, r5
 800232e:	47b8      	blx	r7
 8002330:	3001      	adds	r0, #1
 8002332:	f43f ae6e 	beq.w	8002012 <_printf_float+0xb6>
 8002336:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800233a:	2200      	movs	r2, #0
 800233c:	2300      	movs	r3, #0
 800233e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002342:	f7fe fb31 	bl	80009a8 <__aeabi_dcmpeq>
 8002346:	b9c0      	cbnz	r0, 800237a <_printf_float+0x41e>
 8002348:	4653      	mov	r3, sl
 800234a:	f108 0201 	add.w	r2, r8, #1
 800234e:	4631      	mov	r1, r6
 8002350:	4628      	mov	r0, r5
 8002352:	47b8      	blx	r7
 8002354:	3001      	adds	r0, #1
 8002356:	d10c      	bne.n	8002372 <_printf_float+0x416>
 8002358:	e65b      	b.n	8002012 <_printf_float+0xb6>
 800235a:	2301      	movs	r3, #1
 800235c:	465a      	mov	r2, fp
 800235e:	4631      	mov	r1, r6
 8002360:	4628      	mov	r0, r5
 8002362:	47b8      	blx	r7
 8002364:	3001      	adds	r0, #1
 8002366:	f43f ae54 	beq.w	8002012 <_printf_float+0xb6>
 800236a:	f108 0801 	add.w	r8, r8, #1
 800236e:	45d0      	cmp	r8, sl
 8002370:	dbf3      	blt.n	800235a <_printf_float+0x3fe>
 8002372:	464b      	mov	r3, r9
 8002374:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8002378:	e6e0      	b.n	800213c <_printf_float+0x1e0>
 800237a:	f04f 0800 	mov.w	r8, #0
 800237e:	f104 0b1a 	add.w	fp, r4, #26
 8002382:	e7f4      	b.n	800236e <_printf_float+0x412>
 8002384:	2301      	movs	r3, #1
 8002386:	4642      	mov	r2, r8
 8002388:	e7e1      	b.n	800234e <_printf_float+0x3f2>
 800238a:	2301      	movs	r3, #1
 800238c:	464a      	mov	r2, r9
 800238e:	4631      	mov	r1, r6
 8002390:	4628      	mov	r0, r5
 8002392:	47b8      	blx	r7
 8002394:	3001      	adds	r0, #1
 8002396:	f43f ae3c 	beq.w	8002012 <_printf_float+0xb6>
 800239a:	f108 0801 	add.w	r8, r8, #1
 800239e:	68e3      	ldr	r3, [r4, #12]
 80023a0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80023a2:	1a5b      	subs	r3, r3, r1
 80023a4:	4543      	cmp	r3, r8
 80023a6:	dcf0      	bgt.n	800238a <_printf_float+0x42e>
 80023a8:	e6fd      	b.n	80021a6 <_printf_float+0x24a>
 80023aa:	f04f 0800 	mov.w	r8, #0
 80023ae:	f104 0919 	add.w	r9, r4, #25
 80023b2:	e7f4      	b.n	800239e <_printf_float+0x442>

080023b4 <_printf_common>:
 80023b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80023b8:	4616      	mov	r6, r2
 80023ba:	4698      	mov	r8, r3
 80023bc:	688a      	ldr	r2, [r1, #8]
 80023be:	690b      	ldr	r3, [r1, #16]
 80023c0:	4607      	mov	r7, r0
 80023c2:	4293      	cmp	r3, r2
 80023c4:	bfb8      	it	lt
 80023c6:	4613      	movlt	r3, r2
 80023c8:	6033      	str	r3, [r6, #0]
 80023ca:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80023ce:	460c      	mov	r4, r1
 80023d0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80023d4:	b10a      	cbz	r2, 80023da <_printf_common+0x26>
 80023d6:	3301      	adds	r3, #1
 80023d8:	6033      	str	r3, [r6, #0]
 80023da:	6823      	ldr	r3, [r4, #0]
 80023dc:	0699      	lsls	r1, r3, #26
 80023de:	bf42      	ittt	mi
 80023e0:	6833      	ldrmi	r3, [r6, #0]
 80023e2:	3302      	addmi	r3, #2
 80023e4:	6033      	strmi	r3, [r6, #0]
 80023e6:	6825      	ldr	r5, [r4, #0]
 80023e8:	f015 0506 	ands.w	r5, r5, #6
 80023ec:	d106      	bne.n	80023fc <_printf_common+0x48>
 80023ee:	f104 0a19 	add.w	sl, r4, #25
 80023f2:	68e3      	ldr	r3, [r4, #12]
 80023f4:	6832      	ldr	r2, [r6, #0]
 80023f6:	1a9b      	subs	r3, r3, r2
 80023f8:	42ab      	cmp	r3, r5
 80023fa:	dc2b      	bgt.n	8002454 <_printf_common+0xa0>
 80023fc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002400:	6822      	ldr	r2, [r4, #0]
 8002402:	3b00      	subs	r3, #0
 8002404:	bf18      	it	ne
 8002406:	2301      	movne	r3, #1
 8002408:	0692      	lsls	r2, r2, #26
 800240a:	d430      	bmi.n	800246e <_printf_common+0xba>
 800240c:	4641      	mov	r1, r8
 800240e:	4638      	mov	r0, r7
 8002410:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002414:	47c8      	blx	r9
 8002416:	3001      	adds	r0, #1
 8002418:	d023      	beq.n	8002462 <_printf_common+0xae>
 800241a:	6823      	ldr	r3, [r4, #0]
 800241c:	6922      	ldr	r2, [r4, #16]
 800241e:	f003 0306 	and.w	r3, r3, #6
 8002422:	2b04      	cmp	r3, #4
 8002424:	bf14      	ite	ne
 8002426:	2500      	movne	r5, #0
 8002428:	6833      	ldreq	r3, [r6, #0]
 800242a:	f04f 0600 	mov.w	r6, #0
 800242e:	bf08      	it	eq
 8002430:	68e5      	ldreq	r5, [r4, #12]
 8002432:	f104 041a 	add.w	r4, r4, #26
 8002436:	bf08      	it	eq
 8002438:	1aed      	subeq	r5, r5, r3
 800243a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 800243e:	bf08      	it	eq
 8002440:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002444:	4293      	cmp	r3, r2
 8002446:	bfc4      	itt	gt
 8002448:	1a9b      	subgt	r3, r3, r2
 800244a:	18ed      	addgt	r5, r5, r3
 800244c:	42b5      	cmp	r5, r6
 800244e:	d11a      	bne.n	8002486 <_printf_common+0xd2>
 8002450:	2000      	movs	r0, #0
 8002452:	e008      	b.n	8002466 <_printf_common+0xb2>
 8002454:	2301      	movs	r3, #1
 8002456:	4652      	mov	r2, sl
 8002458:	4641      	mov	r1, r8
 800245a:	4638      	mov	r0, r7
 800245c:	47c8      	blx	r9
 800245e:	3001      	adds	r0, #1
 8002460:	d103      	bne.n	800246a <_printf_common+0xb6>
 8002462:	f04f 30ff 	mov.w	r0, #4294967295
 8002466:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800246a:	3501      	adds	r5, #1
 800246c:	e7c1      	b.n	80023f2 <_printf_common+0x3e>
 800246e:	2030      	movs	r0, #48	@ 0x30
 8002470:	18e1      	adds	r1, r4, r3
 8002472:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8002476:	1c5a      	adds	r2, r3, #1
 8002478:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800247c:	4422      	add	r2, r4
 800247e:	3302      	adds	r3, #2
 8002480:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002484:	e7c2      	b.n	800240c <_printf_common+0x58>
 8002486:	2301      	movs	r3, #1
 8002488:	4622      	mov	r2, r4
 800248a:	4641      	mov	r1, r8
 800248c:	4638      	mov	r0, r7
 800248e:	47c8      	blx	r9
 8002490:	3001      	adds	r0, #1
 8002492:	d0e6      	beq.n	8002462 <_printf_common+0xae>
 8002494:	3601      	adds	r6, #1
 8002496:	e7d9      	b.n	800244c <_printf_common+0x98>

08002498 <_printf_i>:
 8002498:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800249c:	7e0f      	ldrb	r7, [r1, #24]
 800249e:	4691      	mov	r9, r2
 80024a0:	2f78      	cmp	r7, #120	@ 0x78
 80024a2:	4680      	mov	r8, r0
 80024a4:	460c      	mov	r4, r1
 80024a6:	469a      	mov	sl, r3
 80024a8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80024aa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80024ae:	d807      	bhi.n	80024c0 <_printf_i+0x28>
 80024b0:	2f62      	cmp	r7, #98	@ 0x62
 80024b2:	d80a      	bhi.n	80024ca <_printf_i+0x32>
 80024b4:	2f00      	cmp	r7, #0
 80024b6:	f000 80d3 	beq.w	8002660 <_printf_i+0x1c8>
 80024ba:	2f58      	cmp	r7, #88	@ 0x58
 80024bc:	f000 80ba 	beq.w	8002634 <_printf_i+0x19c>
 80024c0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80024c4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80024c8:	e03a      	b.n	8002540 <_printf_i+0xa8>
 80024ca:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80024ce:	2b15      	cmp	r3, #21
 80024d0:	d8f6      	bhi.n	80024c0 <_printf_i+0x28>
 80024d2:	a101      	add	r1, pc, #4	@ (adr r1, 80024d8 <_printf_i+0x40>)
 80024d4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80024d8:	08002531 	.word	0x08002531
 80024dc:	08002545 	.word	0x08002545
 80024e0:	080024c1 	.word	0x080024c1
 80024e4:	080024c1 	.word	0x080024c1
 80024e8:	080024c1 	.word	0x080024c1
 80024ec:	080024c1 	.word	0x080024c1
 80024f0:	08002545 	.word	0x08002545
 80024f4:	080024c1 	.word	0x080024c1
 80024f8:	080024c1 	.word	0x080024c1
 80024fc:	080024c1 	.word	0x080024c1
 8002500:	080024c1 	.word	0x080024c1
 8002504:	08002647 	.word	0x08002647
 8002508:	0800256f 	.word	0x0800256f
 800250c:	08002601 	.word	0x08002601
 8002510:	080024c1 	.word	0x080024c1
 8002514:	080024c1 	.word	0x080024c1
 8002518:	08002669 	.word	0x08002669
 800251c:	080024c1 	.word	0x080024c1
 8002520:	0800256f 	.word	0x0800256f
 8002524:	080024c1 	.word	0x080024c1
 8002528:	080024c1 	.word	0x080024c1
 800252c:	08002609 	.word	0x08002609
 8002530:	6833      	ldr	r3, [r6, #0]
 8002532:	1d1a      	adds	r2, r3, #4
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	6032      	str	r2, [r6, #0]
 8002538:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800253c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002540:	2301      	movs	r3, #1
 8002542:	e09e      	b.n	8002682 <_printf_i+0x1ea>
 8002544:	6833      	ldr	r3, [r6, #0]
 8002546:	6820      	ldr	r0, [r4, #0]
 8002548:	1d19      	adds	r1, r3, #4
 800254a:	6031      	str	r1, [r6, #0]
 800254c:	0606      	lsls	r6, r0, #24
 800254e:	d501      	bpl.n	8002554 <_printf_i+0xbc>
 8002550:	681d      	ldr	r5, [r3, #0]
 8002552:	e003      	b.n	800255c <_printf_i+0xc4>
 8002554:	0645      	lsls	r5, r0, #25
 8002556:	d5fb      	bpl.n	8002550 <_printf_i+0xb8>
 8002558:	f9b3 5000 	ldrsh.w	r5, [r3]
 800255c:	2d00      	cmp	r5, #0
 800255e:	da03      	bge.n	8002568 <_printf_i+0xd0>
 8002560:	232d      	movs	r3, #45	@ 0x2d
 8002562:	426d      	negs	r5, r5
 8002564:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002568:	230a      	movs	r3, #10
 800256a:	4859      	ldr	r0, [pc, #356]	@ (80026d0 <_printf_i+0x238>)
 800256c:	e011      	b.n	8002592 <_printf_i+0xfa>
 800256e:	6821      	ldr	r1, [r4, #0]
 8002570:	6833      	ldr	r3, [r6, #0]
 8002572:	0608      	lsls	r0, r1, #24
 8002574:	f853 5b04 	ldr.w	r5, [r3], #4
 8002578:	d402      	bmi.n	8002580 <_printf_i+0xe8>
 800257a:	0649      	lsls	r1, r1, #25
 800257c:	bf48      	it	mi
 800257e:	b2ad      	uxthmi	r5, r5
 8002580:	2f6f      	cmp	r7, #111	@ 0x6f
 8002582:	6033      	str	r3, [r6, #0]
 8002584:	bf14      	ite	ne
 8002586:	230a      	movne	r3, #10
 8002588:	2308      	moveq	r3, #8
 800258a:	4851      	ldr	r0, [pc, #324]	@ (80026d0 <_printf_i+0x238>)
 800258c:	2100      	movs	r1, #0
 800258e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002592:	6866      	ldr	r6, [r4, #4]
 8002594:	2e00      	cmp	r6, #0
 8002596:	bfa8      	it	ge
 8002598:	6821      	ldrge	r1, [r4, #0]
 800259a:	60a6      	str	r6, [r4, #8]
 800259c:	bfa4      	itt	ge
 800259e:	f021 0104 	bicge.w	r1, r1, #4
 80025a2:	6021      	strge	r1, [r4, #0]
 80025a4:	b90d      	cbnz	r5, 80025aa <_printf_i+0x112>
 80025a6:	2e00      	cmp	r6, #0
 80025a8:	d04b      	beq.n	8002642 <_printf_i+0x1aa>
 80025aa:	4616      	mov	r6, r2
 80025ac:	fbb5 f1f3 	udiv	r1, r5, r3
 80025b0:	fb03 5711 	mls	r7, r3, r1, r5
 80025b4:	5dc7      	ldrb	r7, [r0, r7]
 80025b6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80025ba:	462f      	mov	r7, r5
 80025bc:	42bb      	cmp	r3, r7
 80025be:	460d      	mov	r5, r1
 80025c0:	d9f4      	bls.n	80025ac <_printf_i+0x114>
 80025c2:	2b08      	cmp	r3, #8
 80025c4:	d10b      	bne.n	80025de <_printf_i+0x146>
 80025c6:	6823      	ldr	r3, [r4, #0]
 80025c8:	07df      	lsls	r7, r3, #31
 80025ca:	d508      	bpl.n	80025de <_printf_i+0x146>
 80025cc:	6923      	ldr	r3, [r4, #16]
 80025ce:	6861      	ldr	r1, [r4, #4]
 80025d0:	4299      	cmp	r1, r3
 80025d2:	bfde      	ittt	le
 80025d4:	2330      	movle	r3, #48	@ 0x30
 80025d6:	f806 3c01 	strble.w	r3, [r6, #-1]
 80025da:	f106 36ff 	addle.w	r6, r6, #4294967295
 80025de:	1b92      	subs	r2, r2, r6
 80025e0:	6122      	str	r2, [r4, #16]
 80025e2:	464b      	mov	r3, r9
 80025e4:	4621      	mov	r1, r4
 80025e6:	4640      	mov	r0, r8
 80025e8:	f8cd a000 	str.w	sl, [sp]
 80025ec:	aa03      	add	r2, sp, #12
 80025ee:	f7ff fee1 	bl	80023b4 <_printf_common>
 80025f2:	3001      	adds	r0, #1
 80025f4:	d14a      	bne.n	800268c <_printf_i+0x1f4>
 80025f6:	f04f 30ff 	mov.w	r0, #4294967295
 80025fa:	b004      	add	sp, #16
 80025fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002600:	6823      	ldr	r3, [r4, #0]
 8002602:	f043 0320 	orr.w	r3, r3, #32
 8002606:	6023      	str	r3, [r4, #0]
 8002608:	2778      	movs	r7, #120	@ 0x78
 800260a:	4832      	ldr	r0, [pc, #200]	@ (80026d4 <_printf_i+0x23c>)
 800260c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002610:	6823      	ldr	r3, [r4, #0]
 8002612:	6831      	ldr	r1, [r6, #0]
 8002614:	061f      	lsls	r7, r3, #24
 8002616:	f851 5b04 	ldr.w	r5, [r1], #4
 800261a:	d402      	bmi.n	8002622 <_printf_i+0x18a>
 800261c:	065f      	lsls	r7, r3, #25
 800261e:	bf48      	it	mi
 8002620:	b2ad      	uxthmi	r5, r5
 8002622:	6031      	str	r1, [r6, #0]
 8002624:	07d9      	lsls	r1, r3, #31
 8002626:	bf44      	itt	mi
 8002628:	f043 0320 	orrmi.w	r3, r3, #32
 800262c:	6023      	strmi	r3, [r4, #0]
 800262e:	b11d      	cbz	r5, 8002638 <_printf_i+0x1a0>
 8002630:	2310      	movs	r3, #16
 8002632:	e7ab      	b.n	800258c <_printf_i+0xf4>
 8002634:	4826      	ldr	r0, [pc, #152]	@ (80026d0 <_printf_i+0x238>)
 8002636:	e7e9      	b.n	800260c <_printf_i+0x174>
 8002638:	6823      	ldr	r3, [r4, #0]
 800263a:	f023 0320 	bic.w	r3, r3, #32
 800263e:	6023      	str	r3, [r4, #0]
 8002640:	e7f6      	b.n	8002630 <_printf_i+0x198>
 8002642:	4616      	mov	r6, r2
 8002644:	e7bd      	b.n	80025c2 <_printf_i+0x12a>
 8002646:	6833      	ldr	r3, [r6, #0]
 8002648:	6825      	ldr	r5, [r4, #0]
 800264a:	1d18      	adds	r0, r3, #4
 800264c:	6961      	ldr	r1, [r4, #20]
 800264e:	6030      	str	r0, [r6, #0]
 8002650:	062e      	lsls	r6, r5, #24
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	d501      	bpl.n	800265a <_printf_i+0x1c2>
 8002656:	6019      	str	r1, [r3, #0]
 8002658:	e002      	b.n	8002660 <_printf_i+0x1c8>
 800265a:	0668      	lsls	r0, r5, #25
 800265c:	d5fb      	bpl.n	8002656 <_printf_i+0x1be>
 800265e:	8019      	strh	r1, [r3, #0]
 8002660:	2300      	movs	r3, #0
 8002662:	4616      	mov	r6, r2
 8002664:	6123      	str	r3, [r4, #16]
 8002666:	e7bc      	b.n	80025e2 <_printf_i+0x14a>
 8002668:	6833      	ldr	r3, [r6, #0]
 800266a:	2100      	movs	r1, #0
 800266c:	1d1a      	adds	r2, r3, #4
 800266e:	6032      	str	r2, [r6, #0]
 8002670:	681e      	ldr	r6, [r3, #0]
 8002672:	6862      	ldr	r2, [r4, #4]
 8002674:	4630      	mov	r0, r6
 8002676:	f000 fbe4 	bl	8002e42 <memchr>
 800267a:	b108      	cbz	r0, 8002680 <_printf_i+0x1e8>
 800267c:	1b80      	subs	r0, r0, r6
 800267e:	6060      	str	r0, [r4, #4]
 8002680:	6863      	ldr	r3, [r4, #4]
 8002682:	6123      	str	r3, [r4, #16]
 8002684:	2300      	movs	r3, #0
 8002686:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800268a:	e7aa      	b.n	80025e2 <_printf_i+0x14a>
 800268c:	4632      	mov	r2, r6
 800268e:	4649      	mov	r1, r9
 8002690:	4640      	mov	r0, r8
 8002692:	6923      	ldr	r3, [r4, #16]
 8002694:	47d0      	blx	sl
 8002696:	3001      	adds	r0, #1
 8002698:	d0ad      	beq.n	80025f6 <_printf_i+0x15e>
 800269a:	6823      	ldr	r3, [r4, #0]
 800269c:	079b      	lsls	r3, r3, #30
 800269e:	d413      	bmi.n	80026c8 <_printf_i+0x230>
 80026a0:	68e0      	ldr	r0, [r4, #12]
 80026a2:	9b03      	ldr	r3, [sp, #12]
 80026a4:	4298      	cmp	r0, r3
 80026a6:	bfb8      	it	lt
 80026a8:	4618      	movlt	r0, r3
 80026aa:	e7a6      	b.n	80025fa <_printf_i+0x162>
 80026ac:	2301      	movs	r3, #1
 80026ae:	4632      	mov	r2, r6
 80026b0:	4649      	mov	r1, r9
 80026b2:	4640      	mov	r0, r8
 80026b4:	47d0      	blx	sl
 80026b6:	3001      	adds	r0, #1
 80026b8:	d09d      	beq.n	80025f6 <_printf_i+0x15e>
 80026ba:	3501      	adds	r5, #1
 80026bc:	68e3      	ldr	r3, [r4, #12]
 80026be:	9903      	ldr	r1, [sp, #12]
 80026c0:	1a5b      	subs	r3, r3, r1
 80026c2:	42ab      	cmp	r3, r5
 80026c4:	dcf2      	bgt.n	80026ac <_printf_i+0x214>
 80026c6:	e7eb      	b.n	80026a0 <_printf_i+0x208>
 80026c8:	2500      	movs	r5, #0
 80026ca:	f104 0619 	add.w	r6, r4, #25
 80026ce:	e7f5      	b.n	80026bc <_printf_i+0x224>
 80026d0:	08006524 	.word	0x08006524
 80026d4:	08006535 	.word	0x08006535

080026d8 <_scanf_float>:
 80026d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026dc:	b087      	sub	sp, #28
 80026de:	9303      	str	r3, [sp, #12]
 80026e0:	688b      	ldr	r3, [r1, #8]
 80026e2:	4617      	mov	r7, r2
 80026e4:	1e5a      	subs	r2, r3, #1
 80026e6:	f5b2 7fae 	cmp.w	r2, #348	@ 0x15c
 80026ea:	bf82      	ittt	hi
 80026ec:	f46f 75ae 	mvnhi.w	r5, #348	@ 0x15c
 80026f0:	eb03 0b05 	addhi.w	fp, r3, r5
 80026f4:	f240 135d 	movwhi	r3, #349	@ 0x15d
 80026f8:	460a      	mov	r2, r1
 80026fa:	f04f 0500 	mov.w	r5, #0
 80026fe:	bf88      	it	hi
 8002700:	608b      	strhi	r3, [r1, #8]
 8002702:	680b      	ldr	r3, [r1, #0]
 8002704:	4680      	mov	r8, r0
 8002706:	f443 63f0 	orr.w	r3, r3, #1920	@ 0x780
 800270a:	f842 3b1c 	str.w	r3, [r2], #28
 800270e:	460c      	mov	r4, r1
 8002710:	bf98      	it	ls
 8002712:	f04f 0b00 	movls.w	fp, #0
 8002716:	4616      	mov	r6, r2
 8002718:	46aa      	mov	sl, r5
 800271a:	46a9      	mov	r9, r5
 800271c:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8002720:	9201      	str	r2, [sp, #4]
 8002722:	9502      	str	r5, [sp, #8]
 8002724:	68a2      	ldr	r2, [r4, #8]
 8002726:	b152      	cbz	r2, 800273e <_scanf_float+0x66>
 8002728:	683b      	ldr	r3, [r7, #0]
 800272a:	781b      	ldrb	r3, [r3, #0]
 800272c:	2b4e      	cmp	r3, #78	@ 0x4e
 800272e:	d865      	bhi.n	80027fc <_scanf_float+0x124>
 8002730:	2b40      	cmp	r3, #64	@ 0x40
 8002732:	d83d      	bhi.n	80027b0 <_scanf_float+0xd8>
 8002734:	f1a3 012b 	sub.w	r1, r3, #43	@ 0x2b
 8002738:	b2c8      	uxtb	r0, r1
 800273a:	280e      	cmp	r0, #14
 800273c:	d93b      	bls.n	80027b6 <_scanf_float+0xde>
 800273e:	f1b9 0f00 	cmp.w	r9, #0
 8002742:	d003      	beq.n	800274c <_scanf_float+0x74>
 8002744:	6823      	ldr	r3, [r4, #0]
 8002746:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800274a:	6023      	str	r3, [r4, #0]
 800274c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002750:	f1ba 0f01 	cmp.w	sl, #1
 8002754:	f200 8118 	bhi.w	8002988 <_scanf_float+0x2b0>
 8002758:	9b01      	ldr	r3, [sp, #4]
 800275a:	429e      	cmp	r6, r3
 800275c:	f200 8109 	bhi.w	8002972 <_scanf_float+0x29a>
 8002760:	2001      	movs	r0, #1
 8002762:	b007      	add	sp, #28
 8002764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002768:	f1a3 0261 	sub.w	r2, r3, #97	@ 0x61
 800276c:	2a0d      	cmp	r2, #13
 800276e:	d8e6      	bhi.n	800273e <_scanf_float+0x66>
 8002770:	a101      	add	r1, pc, #4	@ (adr r1, 8002778 <_scanf_float+0xa0>)
 8002772:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002776:	bf00      	nop
 8002778:	080028bf 	.word	0x080028bf
 800277c:	0800273f 	.word	0x0800273f
 8002780:	0800273f 	.word	0x0800273f
 8002784:	0800273f 	.word	0x0800273f
 8002788:	0800291f 	.word	0x0800291f
 800278c:	080028f7 	.word	0x080028f7
 8002790:	0800273f 	.word	0x0800273f
 8002794:	0800273f 	.word	0x0800273f
 8002798:	080028cd 	.word	0x080028cd
 800279c:	0800273f 	.word	0x0800273f
 80027a0:	0800273f 	.word	0x0800273f
 80027a4:	0800273f 	.word	0x0800273f
 80027a8:	0800273f 	.word	0x0800273f
 80027ac:	08002885 	.word	0x08002885
 80027b0:	f1a3 0241 	sub.w	r2, r3, #65	@ 0x41
 80027b4:	e7da      	b.n	800276c <_scanf_float+0x94>
 80027b6:	290e      	cmp	r1, #14
 80027b8:	d8c1      	bhi.n	800273e <_scanf_float+0x66>
 80027ba:	a001      	add	r0, pc, #4	@ (adr r0, 80027c0 <_scanf_float+0xe8>)
 80027bc:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 80027c0:	08002875 	.word	0x08002875
 80027c4:	0800273f 	.word	0x0800273f
 80027c8:	08002875 	.word	0x08002875
 80027cc:	0800290b 	.word	0x0800290b
 80027d0:	0800273f 	.word	0x0800273f
 80027d4:	0800281d 	.word	0x0800281d
 80027d8:	0800285b 	.word	0x0800285b
 80027dc:	0800285b 	.word	0x0800285b
 80027e0:	0800285b 	.word	0x0800285b
 80027e4:	0800285b 	.word	0x0800285b
 80027e8:	0800285b 	.word	0x0800285b
 80027ec:	0800285b 	.word	0x0800285b
 80027f0:	0800285b 	.word	0x0800285b
 80027f4:	0800285b 	.word	0x0800285b
 80027f8:	0800285b 	.word	0x0800285b
 80027fc:	2b6e      	cmp	r3, #110	@ 0x6e
 80027fe:	d809      	bhi.n	8002814 <_scanf_float+0x13c>
 8002800:	2b60      	cmp	r3, #96	@ 0x60
 8002802:	d8b1      	bhi.n	8002768 <_scanf_float+0x90>
 8002804:	2b54      	cmp	r3, #84	@ 0x54
 8002806:	d07b      	beq.n	8002900 <_scanf_float+0x228>
 8002808:	2b59      	cmp	r3, #89	@ 0x59
 800280a:	d198      	bne.n	800273e <_scanf_float+0x66>
 800280c:	2d07      	cmp	r5, #7
 800280e:	d196      	bne.n	800273e <_scanf_float+0x66>
 8002810:	2508      	movs	r5, #8
 8002812:	e02c      	b.n	800286e <_scanf_float+0x196>
 8002814:	2b74      	cmp	r3, #116	@ 0x74
 8002816:	d073      	beq.n	8002900 <_scanf_float+0x228>
 8002818:	2b79      	cmp	r3, #121	@ 0x79
 800281a:	e7f6      	b.n	800280a <_scanf_float+0x132>
 800281c:	6821      	ldr	r1, [r4, #0]
 800281e:	05c8      	lsls	r0, r1, #23
 8002820:	d51b      	bpl.n	800285a <_scanf_float+0x182>
 8002822:	f021 0180 	bic.w	r1, r1, #128	@ 0x80
 8002826:	6021      	str	r1, [r4, #0]
 8002828:	f109 0901 	add.w	r9, r9, #1
 800282c:	f1bb 0f00 	cmp.w	fp, #0
 8002830:	d003      	beq.n	800283a <_scanf_float+0x162>
 8002832:	3201      	adds	r2, #1
 8002834:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002838:	60a2      	str	r2, [r4, #8]
 800283a:	68a3      	ldr	r3, [r4, #8]
 800283c:	3b01      	subs	r3, #1
 800283e:	60a3      	str	r3, [r4, #8]
 8002840:	6923      	ldr	r3, [r4, #16]
 8002842:	3301      	adds	r3, #1
 8002844:	6123      	str	r3, [r4, #16]
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	3b01      	subs	r3, #1
 800284a:	2b00      	cmp	r3, #0
 800284c:	607b      	str	r3, [r7, #4]
 800284e:	f340 8087 	ble.w	8002960 <_scanf_float+0x288>
 8002852:	683b      	ldr	r3, [r7, #0]
 8002854:	3301      	adds	r3, #1
 8002856:	603b      	str	r3, [r7, #0]
 8002858:	e764      	b.n	8002724 <_scanf_float+0x4c>
 800285a:	eb1a 0105 	adds.w	r1, sl, r5
 800285e:	f47f af6e 	bne.w	800273e <_scanf_float+0x66>
 8002862:	460d      	mov	r5, r1
 8002864:	468a      	mov	sl, r1
 8002866:	6822      	ldr	r2, [r4, #0]
 8002868:	f422 72c0 	bic.w	r2, r2, #384	@ 0x180
 800286c:	6022      	str	r2, [r4, #0]
 800286e:	f806 3b01 	strb.w	r3, [r6], #1
 8002872:	e7e2      	b.n	800283a <_scanf_float+0x162>
 8002874:	6822      	ldr	r2, [r4, #0]
 8002876:	0610      	lsls	r0, r2, #24
 8002878:	f57f af61 	bpl.w	800273e <_scanf_float+0x66>
 800287c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002880:	6022      	str	r2, [r4, #0]
 8002882:	e7f4      	b.n	800286e <_scanf_float+0x196>
 8002884:	f1ba 0f00 	cmp.w	sl, #0
 8002888:	d10e      	bne.n	80028a8 <_scanf_float+0x1d0>
 800288a:	f1b9 0f00 	cmp.w	r9, #0
 800288e:	d10e      	bne.n	80028ae <_scanf_float+0x1d6>
 8002890:	6822      	ldr	r2, [r4, #0]
 8002892:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 8002896:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 800289a:	d108      	bne.n	80028ae <_scanf_float+0x1d6>
 800289c:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80028a0:	f04f 0a01 	mov.w	sl, #1
 80028a4:	6022      	str	r2, [r4, #0]
 80028a6:	e7e2      	b.n	800286e <_scanf_float+0x196>
 80028a8:	f1ba 0f02 	cmp.w	sl, #2
 80028ac:	d055      	beq.n	800295a <_scanf_float+0x282>
 80028ae:	2d01      	cmp	r5, #1
 80028b0:	d002      	beq.n	80028b8 <_scanf_float+0x1e0>
 80028b2:	2d04      	cmp	r5, #4
 80028b4:	f47f af43 	bne.w	800273e <_scanf_float+0x66>
 80028b8:	3501      	adds	r5, #1
 80028ba:	b2ed      	uxtb	r5, r5
 80028bc:	e7d7      	b.n	800286e <_scanf_float+0x196>
 80028be:	f1ba 0f01 	cmp.w	sl, #1
 80028c2:	f47f af3c 	bne.w	800273e <_scanf_float+0x66>
 80028c6:	f04f 0a02 	mov.w	sl, #2
 80028ca:	e7d0      	b.n	800286e <_scanf_float+0x196>
 80028cc:	b97d      	cbnz	r5, 80028ee <_scanf_float+0x216>
 80028ce:	f1b9 0f00 	cmp.w	r9, #0
 80028d2:	f47f af37 	bne.w	8002744 <_scanf_float+0x6c>
 80028d6:	6822      	ldr	r2, [r4, #0]
 80028d8:	f402 61e0 	and.w	r1, r2, #1792	@ 0x700
 80028dc:	f5b1 6fe0 	cmp.w	r1, #1792	@ 0x700
 80028e0:	f040 8103 	bne.w	8002aea <_scanf_float+0x412>
 80028e4:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 80028e8:	2501      	movs	r5, #1
 80028ea:	6022      	str	r2, [r4, #0]
 80028ec:	e7bf      	b.n	800286e <_scanf_float+0x196>
 80028ee:	2d03      	cmp	r5, #3
 80028f0:	d0e2      	beq.n	80028b8 <_scanf_float+0x1e0>
 80028f2:	2d05      	cmp	r5, #5
 80028f4:	e7de      	b.n	80028b4 <_scanf_float+0x1dc>
 80028f6:	2d02      	cmp	r5, #2
 80028f8:	f47f af21 	bne.w	800273e <_scanf_float+0x66>
 80028fc:	2503      	movs	r5, #3
 80028fe:	e7b6      	b.n	800286e <_scanf_float+0x196>
 8002900:	2d06      	cmp	r5, #6
 8002902:	f47f af1c 	bne.w	800273e <_scanf_float+0x66>
 8002906:	2507      	movs	r5, #7
 8002908:	e7b1      	b.n	800286e <_scanf_float+0x196>
 800290a:	6822      	ldr	r2, [r4, #0]
 800290c:	0591      	lsls	r1, r2, #22
 800290e:	f57f af16 	bpl.w	800273e <_scanf_float+0x66>
 8002912:	f422 7220 	bic.w	r2, r2, #640	@ 0x280
 8002916:	6022      	str	r2, [r4, #0]
 8002918:	f8cd 9008 	str.w	r9, [sp, #8]
 800291c:	e7a7      	b.n	800286e <_scanf_float+0x196>
 800291e:	6822      	ldr	r2, [r4, #0]
 8002920:	f402 61a0 	and.w	r1, r2, #1280	@ 0x500
 8002924:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
 8002928:	d006      	beq.n	8002938 <_scanf_float+0x260>
 800292a:	0550      	lsls	r0, r2, #21
 800292c:	f57f af07 	bpl.w	800273e <_scanf_float+0x66>
 8002930:	f1b9 0f00 	cmp.w	r9, #0
 8002934:	f000 80d9 	beq.w	8002aea <_scanf_float+0x412>
 8002938:	0591      	lsls	r1, r2, #22
 800293a:	bf58      	it	pl
 800293c:	9902      	ldrpl	r1, [sp, #8]
 800293e:	f422 62f0 	bic.w	r2, r2, #1920	@ 0x780
 8002942:	bf58      	it	pl
 8002944:	eba9 0101 	subpl.w	r1, r9, r1
 8002948:	f442 72c0 	orr.w	r2, r2, #384	@ 0x180
 800294c:	f04f 0900 	mov.w	r9, #0
 8002950:	bf58      	it	pl
 8002952:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002956:	6022      	str	r2, [r4, #0]
 8002958:	e789      	b.n	800286e <_scanf_float+0x196>
 800295a:	f04f 0a03 	mov.w	sl, #3
 800295e:	e786      	b.n	800286e <_scanf_float+0x196>
 8002960:	4639      	mov	r1, r7
 8002962:	4640      	mov	r0, r8
 8002964:	f8d4 3180 	ldr.w	r3, [r4, #384]	@ 0x180
 8002968:	4798      	blx	r3
 800296a:	2800      	cmp	r0, #0
 800296c:	f43f aeda 	beq.w	8002724 <_scanf_float+0x4c>
 8002970:	e6e5      	b.n	800273e <_scanf_float+0x66>
 8002972:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002976:	463a      	mov	r2, r7
 8002978:	4640      	mov	r0, r8
 800297a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800297e:	4798      	blx	r3
 8002980:	6923      	ldr	r3, [r4, #16]
 8002982:	3b01      	subs	r3, #1
 8002984:	6123      	str	r3, [r4, #16]
 8002986:	e6e7      	b.n	8002758 <_scanf_float+0x80>
 8002988:	1e6b      	subs	r3, r5, #1
 800298a:	2b06      	cmp	r3, #6
 800298c:	d824      	bhi.n	80029d8 <_scanf_float+0x300>
 800298e:	2d02      	cmp	r5, #2
 8002990:	d836      	bhi.n	8002a00 <_scanf_float+0x328>
 8002992:	9b01      	ldr	r3, [sp, #4]
 8002994:	429e      	cmp	r6, r3
 8002996:	f67f aee3 	bls.w	8002760 <_scanf_float+0x88>
 800299a:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 800299e:	463a      	mov	r2, r7
 80029a0:	4640      	mov	r0, r8
 80029a2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80029a6:	4798      	blx	r3
 80029a8:	6923      	ldr	r3, [r4, #16]
 80029aa:	3b01      	subs	r3, #1
 80029ac:	6123      	str	r3, [r4, #16]
 80029ae:	e7f0      	b.n	8002992 <_scanf_float+0x2ba>
 80029b0:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80029b4:	463a      	mov	r2, r7
 80029b6:	4640      	mov	r0, r8
 80029b8:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
 80029bc:	4798      	blx	r3
 80029be:	6923      	ldr	r3, [r4, #16]
 80029c0:	3b01      	subs	r3, #1
 80029c2:	6123      	str	r3, [r4, #16]
 80029c4:	f10a 3aff 	add.w	sl, sl, #4294967295
 80029c8:	fa5f fa8a 	uxtb.w	sl, sl
 80029cc:	f1ba 0f02 	cmp.w	sl, #2
 80029d0:	d1ee      	bne.n	80029b0 <_scanf_float+0x2d8>
 80029d2:	3d03      	subs	r5, #3
 80029d4:	b2ed      	uxtb	r5, r5
 80029d6:	1b76      	subs	r6, r6, r5
 80029d8:	6823      	ldr	r3, [r4, #0]
 80029da:	05da      	lsls	r2, r3, #23
 80029dc:	d530      	bpl.n	8002a40 <_scanf_float+0x368>
 80029de:	055b      	lsls	r3, r3, #21
 80029e0:	d511      	bpl.n	8002a06 <_scanf_float+0x32e>
 80029e2:	9b01      	ldr	r3, [sp, #4]
 80029e4:	429e      	cmp	r6, r3
 80029e6:	f67f aebb 	bls.w	8002760 <_scanf_float+0x88>
 80029ea:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 80029ee:	463a      	mov	r2, r7
 80029f0:	4640      	mov	r0, r8
 80029f2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80029f6:	4798      	blx	r3
 80029f8:	6923      	ldr	r3, [r4, #16]
 80029fa:	3b01      	subs	r3, #1
 80029fc:	6123      	str	r3, [r4, #16]
 80029fe:	e7f0      	b.n	80029e2 <_scanf_float+0x30a>
 8002a00:	46aa      	mov	sl, r5
 8002a02:	46b3      	mov	fp, r6
 8002a04:	e7de      	b.n	80029c4 <_scanf_float+0x2ec>
 8002a06:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002a0a:	6923      	ldr	r3, [r4, #16]
 8002a0c:	2965      	cmp	r1, #101	@ 0x65
 8002a0e:	f103 33ff 	add.w	r3, r3, #4294967295
 8002a12:	f106 35ff 	add.w	r5, r6, #4294967295
 8002a16:	6123      	str	r3, [r4, #16]
 8002a18:	d00c      	beq.n	8002a34 <_scanf_float+0x35c>
 8002a1a:	2945      	cmp	r1, #69	@ 0x45
 8002a1c:	d00a      	beq.n	8002a34 <_scanf_float+0x35c>
 8002a1e:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002a22:	463a      	mov	r2, r7
 8002a24:	4640      	mov	r0, r8
 8002a26:	4798      	blx	r3
 8002a28:	6923      	ldr	r3, [r4, #16]
 8002a2a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002a2e:	3b01      	subs	r3, #1
 8002a30:	1eb5      	subs	r5, r6, #2
 8002a32:	6123      	str	r3, [r4, #16]
 8002a34:	463a      	mov	r2, r7
 8002a36:	4640      	mov	r0, r8
 8002a38:	f8d4 317c 	ldr.w	r3, [r4, #380]	@ 0x17c
 8002a3c:	4798      	blx	r3
 8002a3e:	462e      	mov	r6, r5
 8002a40:	6822      	ldr	r2, [r4, #0]
 8002a42:	f012 0210 	ands.w	r2, r2, #16
 8002a46:	d001      	beq.n	8002a4c <_scanf_float+0x374>
 8002a48:	2000      	movs	r0, #0
 8002a4a:	e68a      	b.n	8002762 <_scanf_float+0x8a>
 8002a4c:	7032      	strb	r2, [r6, #0]
 8002a4e:	6823      	ldr	r3, [r4, #0]
 8002a50:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8002a54:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002a58:	d11c      	bne.n	8002a94 <_scanf_float+0x3bc>
 8002a5a:	9b02      	ldr	r3, [sp, #8]
 8002a5c:	454b      	cmp	r3, r9
 8002a5e:	eba3 0209 	sub.w	r2, r3, r9
 8002a62:	d123      	bne.n	8002aac <_scanf_float+0x3d4>
 8002a64:	2200      	movs	r2, #0
 8002a66:	4640      	mov	r0, r8
 8002a68:	9901      	ldr	r1, [sp, #4]
 8002a6a:	f002 fbed 	bl	8005248 <_strtod_r>
 8002a6e:	9b03      	ldr	r3, [sp, #12]
 8002a70:	6825      	ldr	r5, [r4, #0]
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	f015 0f02 	tst.w	r5, #2
 8002a78:	4606      	mov	r6, r0
 8002a7a:	460f      	mov	r7, r1
 8002a7c:	f103 0204 	add.w	r2, r3, #4
 8002a80:	d01f      	beq.n	8002ac2 <_scanf_float+0x3ea>
 8002a82:	9903      	ldr	r1, [sp, #12]
 8002a84:	600a      	str	r2, [r1, #0]
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	e9c3 6700 	strd	r6, r7, [r3]
 8002a8c:	68e3      	ldr	r3, [r4, #12]
 8002a8e:	3301      	adds	r3, #1
 8002a90:	60e3      	str	r3, [r4, #12]
 8002a92:	e7d9      	b.n	8002a48 <_scanf_float+0x370>
 8002a94:	9b04      	ldr	r3, [sp, #16]
 8002a96:	2b00      	cmp	r3, #0
 8002a98:	d0e4      	beq.n	8002a64 <_scanf_float+0x38c>
 8002a9a:	9905      	ldr	r1, [sp, #20]
 8002a9c:	230a      	movs	r3, #10
 8002a9e:	4640      	mov	r0, r8
 8002aa0:	3101      	adds	r1, #1
 8002aa2:	f002 fc51 	bl	8005348 <_strtol_r>
 8002aa6:	9b04      	ldr	r3, [sp, #16]
 8002aa8:	9e05      	ldr	r6, [sp, #20]
 8002aaa:	1ac2      	subs	r2, r0, r3
 8002aac:	f204 136f 	addw	r3, r4, #367	@ 0x16f
 8002ab0:	429e      	cmp	r6, r3
 8002ab2:	bf28      	it	cs
 8002ab4:	f504 76b7 	addcs.w	r6, r4, #366	@ 0x16e
 8002ab8:	4630      	mov	r0, r6
 8002aba:	490d      	ldr	r1, [pc, #52]	@ (8002af0 <_scanf_float+0x418>)
 8002abc:	f000 f8de 	bl	8002c7c <siprintf>
 8002ac0:	e7d0      	b.n	8002a64 <_scanf_float+0x38c>
 8002ac2:	076d      	lsls	r5, r5, #29
 8002ac4:	d4dd      	bmi.n	8002a82 <_scanf_float+0x3aa>
 8002ac6:	9d03      	ldr	r5, [sp, #12]
 8002ac8:	602a      	str	r2, [r5, #0]
 8002aca:	681d      	ldr	r5, [r3, #0]
 8002acc:	4602      	mov	r2, r0
 8002ace:	460b      	mov	r3, r1
 8002ad0:	f7fd ff9c 	bl	8000a0c <__aeabi_dcmpun>
 8002ad4:	b120      	cbz	r0, 8002ae0 <_scanf_float+0x408>
 8002ad6:	4807      	ldr	r0, [pc, #28]	@ (8002af4 <_scanf_float+0x41c>)
 8002ad8:	f000 f9c2 	bl	8002e60 <nanf>
 8002adc:	6028      	str	r0, [r5, #0]
 8002ade:	e7d5      	b.n	8002a8c <_scanf_float+0x3b4>
 8002ae0:	4630      	mov	r0, r6
 8002ae2:	4639      	mov	r1, r7
 8002ae4:	f7fd fff0 	bl	8000ac8 <__aeabi_d2f>
 8002ae8:	e7f8      	b.n	8002adc <_scanf_float+0x404>
 8002aea:	f04f 0900 	mov.w	r9, #0
 8002aee:	e62d      	b.n	800274c <_scanf_float+0x74>
 8002af0:	08006546 	.word	0x08006546
 8002af4:	080068dd 	.word	0x080068dd

08002af8 <std>:
 8002af8:	2300      	movs	r3, #0
 8002afa:	b510      	push	{r4, lr}
 8002afc:	4604      	mov	r4, r0
 8002afe:	e9c0 3300 	strd	r3, r3, [r0]
 8002b02:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002b06:	6083      	str	r3, [r0, #8]
 8002b08:	8181      	strh	r1, [r0, #12]
 8002b0a:	6643      	str	r3, [r0, #100]	@ 0x64
 8002b0c:	81c2      	strh	r2, [r0, #14]
 8002b0e:	6183      	str	r3, [r0, #24]
 8002b10:	4619      	mov	r1, r3
 8002b12:	2208      	movs	r2, #8
 8002b14:	305c      	adds	r0, #92	@ 0x5c
 8002b16:	f000 f914 	bl	8002d42 <memset>
 8002b1a:	4b0d      	ldr	r3, [pc, #52]	@ (8002b50 <std+0x58>)
 8002b1c:	6224      	str	r4, [r4, #32]
 8002b1e:	6263      	str	r3, [r4, #36]	@ 0x24
 8002b20:	4b0c      	ldr	r3, [pc, #48]	@ (8002b54 <std+0x5c>)
 8002b22:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002b24:	4b0c      	ldr	r3, [pc, #48]	@ (8002b58 <std+0x60>)
 8002b26:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002b28:	4b0c      	ldr	r3, [pc, #48]	@ (8002b5c <std+0x64>)
 8002b2a:	6323      	str	r3, [r4, #48]	@ 0x30
 8002b2c:	4b0c      	ldr	r3, [pc, #48]	@ (8002b60 <std+0x68>)
 8002b2e:	429c      	cmp	r4, r3
 8002b30:	d006      	beq.n	8002b40 <std+0x48>
 8002b32:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002b36:	4294      	cmp	r4, r2
 8002b38:	d002      	beq.n	8002b40 <std+0x48>
 8002b3a:	33d0      	adds	r3, #208	@ 0xd0
 8002b3c:	429c      	cmp	r4, r3
 8002b3e:	d105      	bne.n	8002b4c <std+0x54>
 8002b40:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002b44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002b48:	f000 b978 	b.w	8002e3c <__retarget_lock_init_recursive>
 8002b4c:	bd10      	pop	{r4, pc}
 8002b4e:	bf00      	nop
 8002b50:	08002cbd 	.word	0x08002cbd
 8002b54:	08002cdf 	.word	0x08002cdf
 8002b58:	08002d17 	.word	0x08002d17
 8002b5c:	08002d3b 	.word	0x08002d3b
 8002b60:	200001f8 	.word	0x200001f8

08002b64 <stdio_exit_handler>:
 8002b64:	4a02      	ldr	r2, [pc, #8]	@ (8002b70 <stdio_exit_handler+0xc>)
 8002b66:	4903      	ldr	r1, [pc, #12]	@ (8002b74 <stdio_exit_handler+0x10>)
 8002b68:	4803      	ldr	r0, [pc, #12]	@ (8002b78 <stdio_exit_handler+0x14>)
 8002b6a:	f000 b869 	b.w	8002c40 <_fwalk_sglue>
 8002b6e:	bf00      	nop
 8002b70:	2000000c 	.word	0x2000000c
 8002b74:	080056fd 	.word	0x080056fd
 8002b78:	2000001c 	.word	0x2000001c

08002b7c <cleanup_stdio>:
 8002b7c:	6841      	ldr	r1, [r0, #4]
 8002b7e:	4b0c      	ldr	r3, [pc, #48]	@ (8002bb0 <cleanup_stdio+0x34>)
 8002b80:	b510      	push	{r4, lr}
 8002b82:	4299      	cmp	r1, r3
 8002b84:	4604      	mov	r4, r0
 8002b86:	d001      	beq.n	8002b8c <cleanup_stdio+0x10>
 8002b88:	f002 fdb8 	bl	80056fc <_fflush_r>
 8002b8c:	68a1      	ldr	r1, [r4, #8]
 8002b8e:	4b09      	ldr	r3, [pc, #36]	@ (8002bb4 <cleanup_stdio+0x38>)
 8002b90:	4299      	cmp	r1, r3
 8002b92:	d002      	beq.n	8002b9a <cleanup_stdio+0x1e>
 8002b94:	4620      	mov	r0, r4
 8002b96:	f002 fdb1 	bl	80056fc <_fflush_r>
 8002b9a:	68e1      	ldr	r1, [r4, #12]
 8002b9c:	4b06      	ldr	r3, [pc, #24]	@ (8002bb8 <cleanup_stdio+0x3c>)
 8002b9e:	4299      	cmp	r1, r3
 8002ba0:	d004      	beq.n	8002bac <cleanup_stdio+0x30>
 8002ba2:	4620      	mov	r0, r4
 8002ba4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ba8:	f002 bda8 	b.w	80056fc <_fflush_r>
 8002bac:	bd10      	pop	{r4, pc}
 8002bae:	bf00      	nop
 8002bb0:	200001f8 	.word	0x200001f8
 8002bb4:	20000260 	.word	0x20000260
 8002bb8:	200002c8 	.word	0x200002c8

08002bbc <global_stdio_init.part.0>:
 8002bbc:	b510      	push	{r4, lr}
 8002bbe:	4b0b      	ldr	r3, [pc, #44]	@ (8002bec <global_stdio_init.part.0+0x30>)
 8002bc0:	4c0b      	ldr	r4, [pc, #44]	@ (8002bf0 <global_stdio_init.part.0+0x34>)
 8002bc2:	4a0c      	ldr	r2, [pc, #48]	@ (8002bf4 <global_stdio_init.part.0+0x38>)
 8002bc4:	4620      	mov	r0, r4
 8002bc6:	601a      	str	r2, [r3, #0]
 8002bc8:	2104      	movs	r1, #4
 8002bca:	2200      	movs	r2, #0
 8002bcc:	f7ff ff94 	bl	8002af8 <std>
 8002bd0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002bd4:	2201      	movs	r2, #1
 8002bd6:	2109      	movs	r1, #9
 8002bd8:	f7ff ff8e 	bl	8002af8 <std>
 8002bdc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002be0:	2202      	movs	r2, #2
 8002be2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002be6:	2112      	movs	r1, #18
 8002be8:	f7ff bf86 	b.w	8002af8 <std>
 8002bec:	20000330 	.word	0x20000330
 8002bf0:	200001f8 	.word	0x200001f8
 8002bf4:	08002b65 	.word	0x08002b65

08002bf8 <__sfp_lock_acquire>:
 8002bf8:	4801      	ldr	r0, [pc, #4]	@ (8002c00 <__sfp_lock_acquire+0x8>)
 8002bfa:	f000 b920 	b.w	8002e3e <__retarget_lock_acquire_recursive>
 8002bfe:	bf00      	nop
 8002c00:	20000339 	.word	0x20000339

08002c04 <__sfp_lock_release>:
 8002c04:	4801      	ldr	r0, [pc, #4]	@ (8002c0c <__sfp_lock_release+0x8>)
 8002c06:	f000 b91b 	b.w	8002e40 <__retarget_lock_release_recursive>
 8002c0a:	bf00      	nop
 8002c0c:	20000339 	.word	0x20000339

08002c10 <__sinit>:
 8002c10:	b510      	push	{r4, lr}
 8002c12:	4604      	mov	r4, r0
 8002c14:	f7ff fff0 	bl	8002bf8 <__sfp_lock_acquire>
 8002c18:	6a23      	ldr	r3, [r4, #32]
 8002c1a:	b11b      	cbz	r3, 8002c24 <__sinit+0x14>
 8002c1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c20:	f7ff bff0 	b.w	8002c04 <__sfp_lock_release>
 8002c24:	4b04      	ldr	r3, [pc, #16]	@ (8002c38 <__sinit+0x28>)
 8002c26:	6223      	str	r3, [r4, #32]
 8002c28:	4b04      	ldr	r3, [pc, #16]	@ (8002c3c <__sinit+0x2c>)
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	2b00      	cmp	r3, #0
 8002c2e:	d1f5      	bne.n	8002c1c <__sinit+0xc>
 8002c30:	f7ff ffc4 	bl	8002bbc <global_stdio_init.part.0>
 8002c34:	e7f2      	b.n	8002c1c <__sinit+0xc>
 8002c36:	bf00      	nop
 8002c38:	08002b7d 	.word	0x08002b7d
 8002c3c:	20000330 	.word	0x20000330

08002c40 <_fwalk_sglue>:
 8002c40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002c44:	4607      	mov	r7, r0
 8002c46:	4688      	mov	r8, r1
 8002c48:	4614      	mov	r4, r2
 8002c4a:	2600      	movs	r6, #0
 8002c4c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002c50:	f1b9 0901 	subs.w	r9, r9, #1
 8002c54:	d505      	bpl.n	8002c62 <_fwalk_sglue+0x22>
 8002c56:	6824      	ldr	r4, [r4, #0]
 8002c58:	2c00      	cmp	r4, #0
 8002c5a:	d1f7      	bne.n	8002c4c <_fwalk_sglue+0xc>
 8002c5c:	4630      	mov	r0, r6
 8002c5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002c62:	89ab      	ldrh	r3, [r5, #12]
 8002c64:	2b01      	cmp	r3, #1
 8002c66:	d907      	bls.n	8002c78 <_fwalk_sglue+0x38>
 8002c68:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002c6c:	3301      	adds	r3, #1
 8002c6e:	d003      	beq.n	8002c78 <_fwalk_sglue+0x38>
 8002c70:	4629      	mov	r1, r5
 8002c72:	4638      	mov	r0, r7
 8002c74:	47c0      	blx	r8
 8002c76:	4306      	orrs	r6, r0
 8002c78:	3568      	adds	r5, #104	@ 0x68
 8002c7a:	e7e9      	b.n	8002c50 <_fwalk_sglue+0x10>

08002c7c <siprintf>:
 8002c7c:	b40e      	push	{r1, r2, r3}
 8002c7e:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8002c82:	b500      	push	{lr}
 8002c84:	b09c      	sub	sp, #112	@ 0x70
 8002c86:	ab1d      	add	r3, sp, #116	@ 0x74
 8002c88:	9002      	str	r0, [sp, #8]
 8002c8a:	9006      	str	r0, [sp, #24]
 8002c8c:	9107      	str	r1, [sp, #28]
 8002c8e:	9104      	str	r1, [sp, #16]
 8002c90:	4808      	ldr	r0, [pc, #32]	@ (8002cb4 <siprintf+0x38>)
 8002c92:	4909      	ldr	r1, [pc, #36]	@ (8002cb8 <siprintf+0x3c>)
 8002c94:	f853 2b04 	ldr.w	r2, [r3], #4
 8002c98:	9105      	str	r1, [sp, #20]
 8002c9a:	6800      	ldr	r0, [r0, #0]
 8002c9c:	a902      	add	r1, sp, #8
 8002c9e:	9301      	str	r3, [sp, #4]
 8002ca0:	f002 fbb0 	bl	8005404 <_svfiprintf_r>
 8002ca4:	2200      	movs	r2, #0
 8002ca6:	9b02      	ldr	r3, [sp, #8]
 8002ca8:	701a      	strb	r2, [r3, #0]
 8002caa:	b01c      	add	sp, #112	@ 0x70
 8002cac:	f85d eb04 	ldr.w	lr, [sp], #4
 8002cb0:	b003      	add	sp, #12
 8002cb2:	4770      	bx	lr
 8002cb4:	20000018 	.word	0x20000018
 8002cb8:	ffff0208 	.word	0xffff0208

08002cbc <__sread>:
 8002cbc:	b510      	push	{r4, lr}
 8002cbe:	460c      	mov	r4, r1
 8002cc0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002cc4:	f000 f86c 	bl	8002da0 <_read_r>
 8002cc8:	2800      	cmp	r0, #0
 8002cca:	bfab      	itete	ge
 8002ccc:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002cce:	89a3      	ldrhlt	r3, [r4, #12]
 8002cd0:	181b      	addge	r3, r3, r0
 8002cd2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8002cd6:	bfac      	ite	ge
 8002cd8:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002cda:	81a3      	strhlt	r3, [r4, #12]
 8002cdc:	bd10      	pop	{r4, pc}

08002cde <__swrite>:
 8002cde:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002ce2:	461f      	mov	r7, r3
 8002ce4:	898b      	ldrh	r3, [r1, #12]
 8002ce6:	4605      	mov	r5, r0
 8002ce8:	05db      	lsls	r3, r3, #23
 8002cea:	460c      	mov	r4, r1
 8002cec:	4616      	mov	r6, r2
 8002cee:	d505      	bpl.n	8002cfc <__swrite+0x1e>
 8002cf0:	2302      	movs	r3, #2
 8002cf2:	2200      	movs	r2, #0
 8002cf4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002cf8:	f000 f840 	bl	8002d7c <_lseek_r>
 8002cfc:	89a3      	ldrh	r3, [r4, #12]
 8002cfe:	4632      	mov	r2, r6
 8002d00:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002d04:	81a3      	strh	r3, [r4, #12]
 8002d06:	4628      	mov	r0, r5
 8002d08:	463b      	mov	r3, r7
 8002d0a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002d0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002d12:	f000 b857 	b.w	8002dc4 <_write_r>

08002d16 <__sseek>:
 8002d16:	b510      	push	{r4, lr}
 8002d18:	460c      	mov	r4, r1
 8002d1a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d1e:	f000 f82d 	bl	8002d7c <_lseek_r>
 8002d22:	1c43      	adds	r3, r0, #1
 8002d24:	89a3      	ldrh	r3, [r4, #12]
 8002d26:	bf15      	itete	ne
 8002d28:	6560      	strne	r0, [r4, #84]	@ 0x54
 8002d2a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8002d2e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002d32:	81a3      	strheq	r3, [r4, #12]
 8002d34:	bf18      	it	ne
 8002d36:	81a3      	strhne	r3, [r4, #12]
 8002d38:	bd10      	pop	{r4, pc}

08002d3a <__sclose>:
 8002d3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002d3e:	f000 b80d 	b.w	8002d5c <_close_r>

08002d42 <memset>:
 8002d42:	4603      	mov	r3, r0
 8002d44:	4402      	add	r2, r0
 8002d46:	4293      	cmp	r3, r2
 8002d48:	d100      	bne.n	8002d4c <memset+0xa>
 8002d4a:	4770      	bx	lr
 8002d4c:	f803 1b01 	strb.w	r1, [r3], #1
 8002d50:	e7f9      	b.n	8002d46 <memset+0x4>
	...

08002d54 <_localeconv_r>:
 8002d54:	4800      	ldr	r0, [pc, #0]	@ (8002d58 <_localeconv_r+0x4>)
 8002d56:	4770      	bx	lr
 8002d58:	20000158 	.word	0x20000158

08002d5c <_close_r>:
 8002d5c:	b538      	push	{r3, r4, r5, lr}
 8002d5e:	2300      	movs	r3, #0
 8002d60:	4d05      	ldr	r5, [pc, #20]	@ (8002d78 <_close_r+0x1c>)
 8002d62:	4604      	mov	r4, r0
 8002d64:	4608      	mov	r0, r1
 8002d66:	602b      	str	r3, [r5, #0]
 8002d68:	f7fe f8b4 	bl	8000ed4 <_close>
 8002d6c:	1c43      	adds	r3, r0, #1
 8002d6e:	d102      	bne.n	8002d76 <_close_r+0x1a>
 8002d70:	682b      	ldr	r3, [r5, #0]
 8002d72:	b103      	cbz	r3, 8002d76 <_close_r+0x1a>
 8002d74:	6023      	str	r3, [r4, #0]
 8002d76:	bd38      	pop	{r3, r4, r5, pc}
 8002d78:	20000334 	.word	0x20000334

08002d7c <_lseek_r>:
 8002d7c:	b538      	push	{r3, r4, r5, lr}
 8002d7e:	4604      	mov	r4, r0
 8002d80:	4608      	mov	r0, r1
 8002d82:	4611      	mov	r1, r2
 8002d84:	2200      	movs	r2, #0
 8002d86:	4d05      	ldr	r5, [pc, #20]	@ (8002d9c <_lseek_r+0x20>)
 8002d88:	602a      	str	r2, [r5, #0]
 8002d8a:	461a      	mov	r2, r3
 8002d8c:	f7fe f8c6 	bl	8000f1c <_lseek>
 8002d90:	1c43      	adds	r3, r0, #1
 8002d92:	d102      	bne.n	8002d9a <_lseek_r+0x1e>
 8002d94:	682b      	ldr	r3, [r5, #0]
 8002d96:	b103      	cbz	r3, 8002d9a <_lseek_r+0x1e>
 8002d98:	6023      	str	r3, [r4, #0]
 8002d9a:	bd38      	pop	{r3, r4, r5, pc}
 8002d9c:	20000334 	.word	0x20000334

08002da0 <_read_r>:
 8002da0:	b538      	push	{r3, r4, r5, lr}
 8002da2:	4604      	mov	r4, r0
 8002da4:	4608      	mov	r0, r1
 8002da6:	4611      	mov	r1, r2
 8002da8:	2200      	movs	r2, #0
 8002daa:	4d05      	ldr	r5, [pc, #20]	@ (8002dc0 <_read_r+0x20>)
 8002dac:	602a      	str	r2, [r5, #0]
 8002dae:	461a      	mov	r2, r3
 8002db0:	f7fe f857 	bl	8000e62 <_read>
 8002db4:	1c43      	adds	r3, r0, #1
 8002db6:	d102      	bne.n	8002dbe <_read_r+0x1e>
 8002db8:	682b      	ldr	r3, [r5, #0]
 8002dba:	b103      	cbz	r3, 8002dbe <_read_r+0x1e>
 8002dbc:	6023      	str	r3, [r4, #0]
 8002dbe:	bd38      	pop	{r3, r4, r5, pc}
 8002dc0:	20000334 	.word	0x20000334

08002dc4 <_write_r>:
 8002dc4:	b538      	push	{r3, r4, r5, lr}
 8002dc6:	4604      	mov	r4, r0
 8002dc8:	4608      	mov	r0, r1
 8002dca:	4611      	mov	r1, r2
 8002dcc:	2200      	movs	r2, #0
 8002dce:	4d05      	ldr	r5, [pc, #20]	@ (8002de4 <_write_r+0x20>)
 8002dd0:	602a      	str	r2, [r5, #0]
 8002dd2:	461a      	mov	r2, r3
 8002dd4:	f7fe f862 	bl	8000e9c <_write>
 8002dd8:	1c43      	adds	r3, r0, #1
 8002dda:	d102      	bne.n	8002de2 <_write_r+0x1e>
 8002ddc:	682b      	ldr	r3, [r5, #0]
 8002dde:	b103      	cbz	r3, 8002de2 <_write_r+0x1e>
 8002de0:	6023      	str	r3, [r4, #0]
 8002de2:	bd38      	pop	{r3, r4, r5, pc}
 8002de4:	20000334 	.word	0x20000334

08002de8 <__errno>:
 8002de8:	4b01      	ldr	r3, [pc, #4]	@ (8002df0 <__errno+0x8>)
 8002dea:	6818      	ldr	r0, [r3, #0]
 8002dec:	4770      	bx	lr
 8002dee:	bf00      	nop
 8002df0:	20000018 	.word	0x20000018

08002df4 <__libc_init_array>:
 8002df4:	b570      	push	{r4, r5, r6, lr}
 8002df6:	2600      	movs	r6, #0
 8002df8:	4d0c      	ldr	r5, [pc, #48]	@ (8002e2c <__libc_init_array+0x38>)
 8002dfa:	4c0d      	ldr	r4, [pc, #52]	@ (8002e30 <__libc_init_array+0x3c>)
 8002dfc:	1b64      	subs	r4, r4, r5
 8002dfe:	10a4      	asrs	r4, r4, #2
 8002e00:	42a6      	cmp	r6, r4
 8002e02:	d109      	bne.n	8002e18 <__libc_init_array+0x24>
 8002e04:	f003 fb66 	bl	80064d4 <_init>
 8002e08:	2600      	movs	r6, #0
 8002e0a:	4d0a      	ldr	r5, [pc, #40]	@ (8002e34 <__libc_init_array+0x40>)
 8002e0c:	4c0a      	ldr	r4, [pc, #40]	@ (8002e38 <__libc_init_array+0x44>)
 8002e0e:	1b64      	subs	r4, r4, r5
 8002e10:	10a4      	asrs	r4, r4, #2
 8002e12:	42a6      	cmp	r6, r4
 8002e14:	d105      	bne.n	8002e22 <__libc_init_array+0x2e>
 8002e16:	bd70      	pop	{r4, r5, r6, pc}
 8002e18:	f855 3b04 	ldr.w	r3, [r5], #4
 8002e1c:	4798      	blx	r3
 8002e1e:	3601      	adds	r6, #1
 8002e20:	e7ee      	b.n	8002e00 <__libc_init_array+0xc>
 8002e22:	f855 3b04 	ldr.w	r3, [r5], #4
 8002e26:	4798      	blx	r3
 8002e28:	3601      	adds	r6, #1
 8002e2a:	e7f2      	b.n	8002e12 <__libc_init_array+0x1e>
 8002e2c:	08006948 	.word	0x08006948
 8002e30:	08006948 	.word	0x08006948
 8002e34:	08006948 	.word	0x08006948
 8002e38:	0800694c 	.word	0x0800694c

08002e3c <__retarget_lock_init_recursive>:
 8002e3c:	4770      	bx	lr

08002e3e <__retarget_lock_acquire_recursive>:
 8002e3e:	4770      	bx	lr

08002e40 <__retarget_lock_release_recursive>:
 8002e40:	4770      	bx	lr

08002e42 <memchr>:
 8002e42:	4603      	mov	r3, r0
 8002e44:	b510      	push	{r4, lr}
 8002e46:	b2c9      	uxtb	r1, r1
 8002e48:	4402      	add	r2, r0
 8002e4a:	4293      	cmp	r3, r2
 8002e4c:	4618      	mov	r0, r3
 8002e4e:	d101      	bne.n	8002e54 <memchr+0x12>
 8002e50:	2000      	movs	r0, #0
 8002e52:	e003      	b.n	8002e5c <memchr+0x1a>
 8002e54:	7804      	ldrb	r4, [r0, #0]
 8002e56:	3301      	adds	r3, #1
 8002e58:	428c      	cmp	r4, r1
 8002e5a:	d1f6      	bne.n	8002e4a <memchr+0x8>
 8002e5c:	bd10      	pop	{r4, pc}
	...

08002e60 <nanf>:
 8002e60:	4800      	ldr	r0, [pc, #0]	@ (8002e64 <nanf+0x4>)
 8002e62:	4770      	bx	lr
 8002e64:	7fc00000 	.word	0x7fc00000

08002e68 <quorem>:
 8002e68:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e6c:	6903      	ldr	r3, [r0, #16]
 8002e6e:	690c      	ldr	r4, [r1, #16]
 8002e70:	4607      	mov	r7, r0
 8002e72:	42a3      	cmp	r3, r4
 8002e74:	db7e      	blt.n	8002f74 <quorem+0x10c>
 8002e76:	3c01      	subs	r4, #1
 8002e78:	00a3      	lsls	r3, r4, #2
 8002e7a:	f100 0514 	add.w	r5, r0, #20
 8002e7e:	f101 0814 	add.w	r8, r1, #20
 8002e82:	9300      	str	r3, [sp, #0]
 8002e84:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002e88:	9301      	str	r3, [sp, #4]
 8002e8a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002e8e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002e92:	3301      	adds	r3, #1
 8002e94:	429a      	cmp	r2, r3
 8002e96:	fbb2 f6f3 	udiv	r6, r2, r3
 8002e9a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002e9e:	d32e      	bcc.n	8002efe <quorem+0x96>
 8002ea0:	f04f 0a00 	mov.w	sl, #0
 8002ea4:	46c4      	mov	ip, r8
 8002ea6:	46ae      	mov	lr, r5
 8002ea8:	46d3      	mov	fp, sl
 8002eaa:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002eae:	b298      	uxth	r0, r3
 8002eb0:	fb06 a000 	mla	r0, r6, r0, sl
 8002eb4:	0c1b      	lsrs	r3, r3, #16
 8002eb6:	0c02      	lsrs	r2, r0, #16
 8002eb8:	fb06 2303 	mla	r3, r6, r3, r2
 8002ebc:	f8de 2000 	ldr.w	r2, [lr]
 8002ec0:	b280      	uxth	r0, r0
 8002ec2:	b292      	uxth	r2, r2
 8002ec4:	1a12      	subs	r2, r2, r0
 8002ec6:	445a      	add	r2, fp
 8002ec8:	f8de 0000 	ldr.w	r0, [lr]
 8002ecc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002ed0:	b29b      	uxth	r3, r3
 8002ed2:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002ed6:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002eda:	b292      	uxth	r2, r2
 8002edc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002ee0:	45e1      	cmp	r9, ip
 8002ee2:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002ee6:	f84e 2b04 	str.w	r2, [lr], #4
 8002eea:	d2de      	bcs.n	8002eaa <quorem+0x42>
 8002eec:	9b00      	ldr	r3, [sp, #0]
 8002eee:	58eb      	ldr	r3, [r5, r3]
 8002ef0:	b92b      	cbnz	r3, 8002efe <quorem+0x96>
 8002ef2:	9b01      	ldr	r3, [sp, #4]
 8002ef4:	3b04      	subs	r3, #4
 8002ef6:	429d      	cmp	r5, r3
 8002ef8:	461a      	mov	r2, r3
 8002efa:	d32f      	bcc.n	8002f5c <quorem+0xf4>
 8002efc:	613c      	str	r4, [r7, #16]
 8002efe:	4638      	mov	r0, r7
 8002f00:	f001 f9c2 	bl	8004288 <__mcmp>
 8002f04:	2800      	cmp	r0, #0
 8002f06:	db25      	blt.n	8002f54 <quorem+0xec>
 8002f08:	4629      	mov	r1, r5
 8002f0a:	2000      	movs	r0, #0
 8002f0c:	f858 2b04 	ldr.w	r2, [r8], #4
 8002f10:	f8d1 c000 	ldr.w	ip, [r1]
 8002f14:	fa1f fe82 	uxth.w	lr, r2
 8002f18:	fa1f f38c 	uxth.w	r3, ip
 8002f1c:	eba3 030e 	sub.w	r3, r3, lr
 8002f20:	4403      	add	r3, r0
 8002f22:	0c12      	lsrs	r2, r2, #16
 8002f24:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002f28:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002f2c:	b29b      	uxth	r3, r3
 8002f2e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002f32:	45c1      	cmp	r9, r8
 8002f34:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002f38:	f841 3b04 	str.w	r3, [r1], #4
 8002f3c:	d2e6      	bcs.n	8002f0c <quorem+0xa4>
 8002f3e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002f42:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002f46:	b922      	cbnz	r2, 8002f52 <quorem+0xea>
 8002f48:	3b04      	subs	r3, #4
 8002f4a:	429d      	cmp	r5, r3
 8002f4c:	461a      	mov	r2, r3
 8002f4e:	d30b      	bcc.n	8002f68 <quorem+0x100>
 8002f50:	613c      	str	r4, [r7, #16]
 8002f52:	3601      	adds	r6, #1
 8002f54:	4630      	mov	r0, r6
 8002f56:	b003      	add	sp, #12
 8002f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f5c:	6812      	ldr	r2, [r2, #0]
 8002f5e:	3b04      	subs	r3, #4
 8002f60:	2a00      	cmp	r2, #0
 8002f62:	d1cb      	bne.n	8002efc <quorem+0x94>
 8002f64:	3c01      	subs	r4, #1
 8002f66:	e7c6      	b.n	8002ef6 <quorem+0x8e>
 8002f68:	6812      	ldr	r2, [r2, #0]
 8002f6a:	3b04      	subs	r3, #4
 8002f6c:	2a00      	cmp	r2, #0
 8002f6e:	d1ef      	bne.n	8002f50 <quorem+0xe8>
 8002f70:	3c01      	subs	r4, #1
 8002f72:	e7ea      	b.n	8002f4a <quorem+0xe2>
 8002f74:	2000      	movs	r0, #0
 8002f76:	e7ee      	b.n	8002f56 <quorem+0xee>

08002f78 <_dtoa_r>:
 8002f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f7c:	4614      	mov	r4, r2
 8002f7e:	461d      	mov	r5, r3
 8002f80:	69c7      	ldr	r7, [r0, #28]
 8002f82:	b097      	sub	sp, #92	@ 0x5c
 8002f84:	4683      	mov	fp, r0
 8002f86:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8002f8a:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8002f8c:	b97f      	cbnz	r7, 8002fae <_dtoa_r+0x36>
 8002f8e:	2010      	movs	r0, #16
 8002f90:	f000 fe02 	bl	8003b98 <malloc>
 8002f94:	4602      	mov	r2, r0
 8002f96:	f8cb 001c 	str.w	r0, [fp, #28]
 8002f9a:	b920      	cbnz	r0, 8002fa6 <_dtoa_r+0x2e>
 8002f9c:	21ef      	movs	r1, #239	@ 0xef
 8002f9e:	4ba8      	ldr	r3, [pc, #672]	@ (8003240 <_dtoa_r+0x2c8>)
 8002fa0:	48a8      	ldr	r0, [pc, #672]	@ (8003244 <_dtoa_r+0x2cc>)
 8002fa2:	f002 fc23 	bl	80057ec <__assert_func>
 8002fa6:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002faa:	6007      	str	r7, [r0, #0]
 8002fac:	60c7      	str	r7, [r0, #12]
 8002fae:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002fb2:	6819      	ldr	r1, [r3, #0]
 8002fb4:	b159      	cbz	r1, 8002fce <_dtoa_r+0x56>
 8002fb6:	685a      	ldr	r2, [r3, #4]
 8002fb8:	2301      	movs	r3, #1
 8002fba:	4093      	lsls	r3, r2
 8002fbc:	604a      	str	r2, [r1, #4]
 8002fbe:	608b      	str	r3, [r1, #8]
 8002fc0:	4658      	mov	r0, fp
 8002fc2:	f000 fedf 	bl	8003d84 <_Bfree>
 8002fc6:	2200      	movs	r2, #0
 8002fc8:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002fcc:	601a      	str	r2, [r3, #0]
 8002fce:	1e2b      	subs	r3, r5, #0
 8002fd0:	bfaf      	iteee	ge
 8002fd2:	2300      	movge	r3, #0
 8002fd4:	2201      	movlt	r2, #1
 8002fd6:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002fda:	9303      	strlt	r3, [sp, #12]
 8002fdc:	bfa8      	it	ge
 8002fde:	6033      	strge	r3, [r6, #0]
 8002fe0:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8002fe4:	4b98      	ldr	r3, [pc, #608]	@ (8003248 <_dtoa_r+0x2d0>)
 8002fe6:	bfb8      	it	lt
 8002fe8:	6032      	strlt	r2, [r6, #0]
 8002fea:	ea33 0308 	bics.w	r3, r3, r8
 8002fee:	d112      	bne.n	8003016 <_dtoa_r+0x9e>
 8002ff0:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002ff4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002ff6:	6013      	str	r3, [r2, #0]
 8002ff8:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8002ffc:	4323      	orrs	r3, r4
 8002ffe:	f000 8550 	beq.w	8003aa2 <_dtoa_r+0xb2a>
 8003002:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003004:	f8df a244 	ldr.w	sl, [pc, #580]	@ 800324c <_dtoa_r+0x2d4>
 8003008:	2b00      	cmp	r3, #0
 800300a:	f000 8552 	beq.w	8003ab2 <_dtoa_r+0xb3a>
 800300e:	f10a 0303 	add.w	r3, sl, #3
 8003012:	f000 bd4c 	b.w	8003aae <_dtoa_r+0xb36>
 8003016:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800301a:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800301e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003022:	2200      	movs	r2, #0
 8003024:	2300      	movs	r3, #0
 8003026:	f7fd fcbf 	bl	80009a8 <__aeabi_dcmpeq>
 800302a:	4607      	mov	r7, r0
 800302c:	b158      	cbz	r0, 8003046 <_dtoa_r+0xce>
 800302e:	2301      	movs	r3, #1
 8003030:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8003032:	6013      	str	r3, [r2, #0]
 8003034:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003036:	b113      	cbz	r3, 800303e <_dtoa_r+0xc6>
 8003038:	4b85      	ldr	r3, [pc, #532]	@ (8003250 <_dtoa_r+0x2d8>)
 800303a:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 800303c:	6013      	str	r3, [r2, #0]
 800303e:	f8df a214 	ldr.w	sl, [pc, #532]	@ 8003254 <_dtoa_r+0x2dc>
 8003042:	f000 bd36 	b.w	8003ab2 <_dtoa_r+0xb3a>
 8003046:	ab14      	add	r3, sp, #80	@ 0x50
 8003048:	9301      	str	r3, [sp, #4]
 800304a:	ab15      	add	r3, sp, #84	@ 0x54
 800304c:	9300      	str	r3, [sp, #0]
 800304e:	4658      	mov	r0, fp
 8003050:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8003054:	f001 fa30 	bl	80044b8 <__d2b>
 8003058:	f3c8 560a 	ubfx	r6, r8, #20, #11
 800305c:	4681      	mov	r9, r0
 800305e:	2e00      	cmp	r6, #0
 8003060:	d077      	beq.n	8003152 <_dtoa_r+0x1da>
 8003062:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8003066:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8003068:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 800306c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003070:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8003074:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8003078:	9712      	str	r7, [sp, #72]	@ 0x48
 800307a:	4619      	mov	r1, r3
 800307c:	2200      	movs	r2, #0
 800307e:	4b76      	ldr	r3, [pc, #472]	@ (8003258 <_dtoa_r+0x2e0>)
 8003080:	f7fd f872 	bl	8000168 <__aeabi_dsub>
 8003084:	a368      	add	r3, pc, #416	@ (adr r3, 8003228 <_dtoa_r+0x2b0>)
 8003086:	e9d3 2300 	ldrd	r2, r3, [r3]
 800308a:	f7fd fa25 	bl	80004d8 <__aeabi_dmul>
 800308e:	a368      	add	r3, pc, #416	@ (adr r3, 8003230 <_dtoa_r+0x2b8>)
 8003090:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003094:	f7fd f86a 	bl	800016c <__adddf3>
 8003098:	4604      	mov	r4, r0
 800309a:	4630      	mov	r0, r6
 800309c:	460d      	mov	r5, r1
 800309e:	f7fd f9b1 	bl	8000404 <__aeabi_i2d>
 80030a2:	a365      	add	r3, pc, #404	@ (adr r3, 8003238 <_dtoa_r+0x2c0>)
 80030a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80030a8:	f7fd fa16 	bl	80004d8 <__aeabi_dmul>
 80030ac:	4602      	mov	r2, r0
 80030ae:	460b      	mov	r3, r1
 80030b0:	4620      	mov	r0, r4
 80030b2:	4629      	mov	r1, r5
 80030b4:	f7fd f85a 	bl	800016c <__adddf3>
 80030b8:	4604      	mov	r4, r0
 80030ba:	460d      	mov	r5, r1
 80030bc:	f7fd fcbc 	bl	8000a38 <__aeabi_d2iz>
 80030c0:	2200      	movs	r2, #0
 80030c2:	4607      	mov	r7, r0
 80030c4:	2300      	movs	r3, #0
 80030c6:	4620      	mov	r0, r4
 80030c8:	4629      	mov	r1, r5
 80030ca:	f7fd fc77 	bl	80009bc <__aeabi_dcmplt>
 80030ce:	b140      	cbz	r0, 80030e2 <_dtoa_r+0x16a>
 80030d0:	4638      	mov	r0, r7
 80030d2:	f7fd f997 	bl	8000404 <__aeabi_i2d>
 80030d6:	4622      	mov	r2, r4
 80030d8:	462b      	mov	r3, r5
 80030da:	f7fd fc65 	bl	80009a8 <__aeabi_dcmpeq>
 80030de:	b900      	cbnz	r0, 80030e2 <_dtoa_r+0x16a>
 80030e0:	3f01      	subs	r7, #1
 80030e2:	2f16      	cmp	r7, #22
 80030e4:	d853      	bhi.n	800318e <_dtoa_r+0x216>
 80030e6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80030ea:	4b5c      	ldr	r3, [pc, #368]	@ (800325c <_dtoa_r+0x2e4>)
 80030ec:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80030f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80030f4:	f7fd fc62 	bl	80009bc <__aeabi_dcmplt>
 80030f8:	2800      	cmp	r0, #0
 80030fa:	d04a      	beq.n	8003192 <_dtoa_r+0x21a>
 80030fc:	2300      	movs	r3, #0
 80030fe:	3f01      	subs	r7, #1
 8003100:	930f      	str	r3, [sp, #60]	@ 0x3c
 8003102:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003104:	1b9b      	subs	r3, r3, r6
 8003106:	1e5a      	subs	r2, r3, #1
 8003108:	bf46      	itte	mi
 800310a:	f1c3 0801 	rsbmi	r8, r3, #1
 800310e:	2300      	movmi	r3, #0
 8003110:	f04f 0800 	movpl.w	r8, #0
 8003114:	9209      	str	r2, [sp, #36]	@ 0x24
 8003116:	bf48      	it	mi
 8003118:	9309      	strmi	r3, [sp, #36]	@ 0x24
 800311a:	2f00      	cmp	r7, #0
 800311c:	db3b      	blt.n	8003196 <_dtoa_r+0x21e>
 800311e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003120:	970e      	str	r7, [sp, #56]	@ 0x38
 8003122:	443b      	add	r3, r7
 8003124:	9309      	str	r3, [sp, #36]	@ 0x24
 8003126:	2300      	movs	r3, #0
 8003128:	930a      	str	r3, [sp, #40]	@ 0x28
 800312a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800312c:	2b09      	cmp	r3, #9
 800312e:	d866      	bhi.n	80031fe <_dtoa_r+0x286>
 8003130:	2b05      	cmp	r3, #5
 8003132:	bfc4      	itt	gt
 8003134:	3b04      	subgt	r3, #4
 8003136:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8003138:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800313a:	bfc8      	it	gt
 800313c:	2400      	movgt	r4, #0
 800313e:	f1a3 0302 	sub.w	r3, r3, #2
 8003142:	bfd8      	it	le
 8003144:	2401      	movle	r4, #1
 8003146:	2b03      	cmp	r3, #3
 8003148:	d864      	bhi.n	8003214 <_dtoa_r+0x29c>
 800314a:	e8df f003 	tbb	[pc, r3]
 800314e:	382b      	.short	0x382b
 8003150:	5636      	.short	0x5636
 8003152:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8003156:	441e      	add	r6, r3
 8003158:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 800315c:	2b20      	cmp	r3, #32
 800315e:	bfc1      	itttt	gt
 8003160:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8003164:	fa08 f803 	lslgt.w	r8, r8, r3
 8003168:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800316c:	fa24 f303 	lsrgt.w	r3, r4, r3
 8003170:	bfd6      	itet	le
 8003172:	f1c3 0320 	rsble	r3, r3, #32
 8003176:	ea48 0003 	orrgt.w	r0, r8, r3
 800317a:	fa04 f003 	lslle.w	r0, r4, r3
 800317e:	f7fd f931 	bl	80003e4 <__aeabi_ui2d>
 8003182:	2201      	movs	r2, #1
 8003184:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8003188:	3e01      	subs	r6, #1
 800318a:	9212      	str	r2, [sp, #72]	@ 0x48
 800318c:	e775      	b.n	800307a <_dtoa_r+0x102>
 800318e:	2301      	movs	r3, #1
 8003190:	e7b6      	b.n	8003100 <_dtoa_r+0x188>
 8003192:	900f      	str	r0, [sp, #60]	@ 0x3c
 8003194:	e7b5      	b.n	8003102 <_dtoa_r+0x18a>
 8003196:	427b      	negs	r3, r7
 8003198:	930a      	str	r3, [sp, #40]	@ 0x28
 800319a:	2300      	movs	r3, #0
 800319c:	eba8 0807 	sub.w	r8, r8, r7
 80031a0:	930e      	str	r3, [sp, #56]	@ 0x38
 80031a2:	e7c2      	b.n	800312a <_dtoa_r+0x1b2>
 80031a4:	2300      	movs	r3, #0
 80031a6:	930b      	str	r3, [sp, #44]	@ 0x2c
 80031a8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80031aa:	2b00      	cmp	r3, #0
 80031ac:	dc35      	bgt.n	800321a <_dtoa_r+0x2a2>
 80031ae:	2301      	movs	r3, #1
 80031b0:	461a      	mov	r2, r3
 80031b2:	e9cd 3307 	strd	r3, r3, [sp, #28]
 80031b6:	9221      	str	r2, [sp, #132]	@ 0x84
 80031b8:	e00b      	b.n	80031d2 <_dtoa_r+0x25a>
 80031ba:	2301      	movs	r3, #1
 80031bc:	e7f3      	b.n	80031a6 <_dtoa_r+0x22e>
 80031be:	2300      	movs	r3, #0
 80031c0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80031c2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80031c4:	18fb      	adds	r3, r7, r3
 80031c6:	9308      	str	r3, [sp, #32]
 80031c8:	3301      	adds	r3, #1
 80031ca:	2b01      	cmp	r3, #1
 80031cc:	9307      	str	r3, [sp, #28]
 80031ce:	bfb8      	it	lt
 80031d0:	2301      	movlt	r3, #1
 80031d2:	2100      	movs	r1, #0
 80031d4:	2204      	movs	r2, #4
 80031d6:	f8db 001c 	ldr.w	r0, [fp, #28]
 80031da:	f102 0514 	add.w	r5, r2, #20
 80031de:	429d      	cmp	r5, r3
 80031e0:	d91f      	bls.n	8003222 <_dtoa_r+0x2aa>
 80031e2:	6041      	str	r1, [r0, #4]
 80031e4:	4658      	mov	r0, fp
 80031e6:	f000 fd8d 	bl	8003d04 <_Balloc>
 80031ea:	4682      	mov	sl, r0
 80031ec:	2800      	cmp	r0, #0
 80031ee:	d139      	bne.n	8003264 <_dtoa_r+0x2ec>
 80031f0:	4602      	mov	r2, r0
 80031f2:	f240 11af 	movw	r1, #431	@ 0x1af
 80031f6:	4b1a      	ldr	r3, [pc, #104]	@ (8003260 <_dtoa_r+0x2e8>)
 80031f8:	e6d2      	b.n	8002fa0 <_dtoa_r+0x28>
 80031fa:	2301      	movs	r3, #1
 80031fc:	e7e0      	b.n	80031c0 <_dtoa_r+0x248>
 80031fe:	2401      	movs	r4, #1
 8003200:	2300      	movs	r3, #0
 8003202:	940b      	str	r4, [sp, #44]	@ 0x2c
 8003204:	9320      	str	r3, [sp, #128]	@ 0x80
 8003206:	f04f 33ff 	mov.w	r3, #4294967295
 800320a:	2200      	movs	r2, #0
 800320c:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8003210:	2312      	movs	r3, #18
 8003212:	e7d0      	b.n	80031b6 <_dtoa_r+0x23e>
 8003214:	2301      	movs	r3, #1
 8003216:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003218:	e7f5      	b.n	8003206 <_dtoa_r+0x28e>
 800321a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800321c:	e9cd 3307 	strd	r3, r3, [sp, #28]
 8003220:	e7d7      	b.n	80031d2 <_dtoa_r+0x25a>
 8003222:	3101      	adds	r1, #1
 8003224:	0052      	lsls	r2, r2, #1
 8003226:	e7d8      	b.n	80031da <_dtoa_r+0x262>
 8003228:	636f4361 	.word	0x636f4361
 800322c:	3fd287a7 	.word	0x3fd287a7
 8003230:	8b60c8b3 	.word	0x8b60c8b3
 8003234:	3fc68a28 	.word	0x3fc68a28
 8003238:	509f79fb 	.word	0x509f79fb
 800323c:	3fd34413 	.word	0x3fd34413
 8003240:	08006558 	.word	0x08006558
 8003244:	0800656f 	.word	0x0800656f
 8003248:	7ff00000 	.word	0x7ff00000
 800324c:	08006554 	.word	0x08006554
 8003250:	08006523 	.word	0x08006523
 8003254:	08006522 	.word	0x08006522
 8003258:	3ff80000 	.word	0x3ff80000
 800325c:	08006668 	.word	0x08006668
 8003260:	080065c7 	.word	0x080065c7
 8003264:	f8db 301c 	ldr.w	r3, [fp, #28]
 8003268:	6018      	str	r0, [r3, #0]
 800326a:	9b07      	ldr	r3, [sp, #28]
 800326c:	2b0e      	cmp	r3, #14
 800326e:	f200 80a4 	bhi.w	80033ba <_dtoa_r+0x442>
 8003272:	2c00      	cmp	r4, #0
 8003274:	f000 80a1 	beq.w	80033ba <_dtoa_r+0x442>
 8003278:	2f00      	cmp	r7, #0
 800327a:	dd33      	ble.n	80032e4 <_dtoa_r+0x36c>
 800327c:	4b86      	ldr	r3, [pc, #536]	@ (8003498 <_dtoa_r+0x520>)
 800327e:	f007 020f 	and.w	r2, r7, #15
 8003282:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003286:	05f8      	lsls	r0, r7, #23
 8003288:	e9d3 3400 	ldrd	r3, r4, [r3]
 800328c:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8003290:	ea4f 1427 	mov.w	r4, r7, asr #4
 8003294:	d516      	bpl.n	80032c4 <_dtoa_r+0x34c>
 8003296:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800329a:	4b80      	ldr	r3, [pc, #512]	@ (800349c <_dtoa_r+0x524>)
 800329c:	2603      	movs	r6, #3
 800329e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80032a2:	f7fd fa43 	bl	800072c <__aeabi_ddiv>
 80032a6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80032aa:	f004 040f 	and.w	r4, r4, #15
 80032ae:	4d7b      	ldr	r5, [pc, #492]	@ (800349c <_dtoa_r+0x524>)
 80032b0:	b954      	cbnz	r4, 80032c8 <_dtoa_r+0x350>
 80032b2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80032b6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80032ba:	f7fd fa37 	bl	800072c <__aeabi_ddiv>
 80032be:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80032c2:	e028      	b.n	8003316 <_dtoa_r+0x39e>
 80032c4:	2602      	movs	r6, #2
 80032c6:	e7f2      	b.n	80032ae <_dtoa_r+0x336>
 80032c8:	07e1      	lsls	r1, r4, #31
 80032ca:	d508      	bpl.n	80032de <_dtoa_r+0x366>
 80032cc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80032d0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80032d4:	f7fd f900 	bl	80004d8 <__aeabi_dmul>
 80032d8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80032dc:	3601      	adds	r6, #1
 80032de:	1064      	asrs	r4, r4, #1
 80032e0:	3508      	adds	r5, #8
 80032e2:	e7e5      	b.n	80032b0 <_dtoa_r+0x338>
 80032e4:	f000 80d2 	beq.w	800348c <_dtoa_r+0x514>
 80032e8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80032ec:	427c      	negs	r4, r7
 80032ee:	4b6a      	ldr	r3, [pc, #424]	@ (8003498 <_dtoa_r+0x520>)
 80032f0:	f004 020f 	and.w	r2, r4, #15
 80032f4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80032f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032fc:	f7fd f8ec 	bl	80004d8 <__aeabi_dmul>
 8003300:	2602      	movs	r6, #2
 8003302:	2300      	movs	r3, #0
 8003304:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003308:	4d64      	ldr	r5, [pc, #400]	@ (800349c <_dtoa_r+0x524>)
 800330a:	1124      	asrs	r4, r4, #4
 800330c:	2c00      	cmp	r4, #0
 800330e:	f040 80b2 	bne.w	8003476 <_dtoa_r+0x4fe>
 8003312:	2b00      	cmp	r3, #0
 8003314:	d1d3      	bne.n	80032be <_dtoa_r+0x346>
 8003316:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800331a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800331c:	2b00      	cmp	r3, #0
 800331e:	f000 80b7 	beq.w	8003490 <_dtoa_r+0x518>
 8003322:	2200      	movs	r2, #0
 8003324:	4620      	mov	r0, r4
 8003326:	4629      	mov	r1, r5
 8003328:	4b5d      	ldr	r3, [pc, #372]	@ (80034a0 <_dtoa_r+0x528>)
 800332a:	f7fd fb47 	bl	80009bc <__aeabi_dcmplt>
 800332e:	2800      	cmp	r0, #0
 8003330:	f000 80ae 	beq.w	8003490 <_dtoa_r+0x518>
 8003334:	9b07      	ldr	r3, [sp, #28]
 8003336:	2b00      	cmp	r3, #0
 8003338:	f000 80aa 	beq.w	8003490 <_dtoa_r+0x518>
 800333c:	9b08      	ldr	r3, [sp, #32]
 800333e:	2b00      	cmp	r3, #0
 8003340:	dd37      	ble.n	80033b2 <_dtoa_r+0x43a>
 8003342:	1e7b      	subs	r3, r7, #1
 8003344:	4620      	mov	r0, r4
 8003346:	9304      	str	r3, [sp, #16]
 8003348:	2200      	movs	r2, #0
 800334a:	4629      	mov	r1, r5
 800334c:	4b55      	ldr	r3, [pc, #340]	@ (80034a4 <_dtoa_r+0x52c>)
 800334e:	f7fd f8c3 	bl	80004d8 <__aeabi_dmul>
 8003352:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003356:	9c08      	ldr	r4, [sp, #32]
 8003358:	3601      	adds	r6, #1
 800335a:	4630      	mov	r0, r6
 800335c:	f7fd f852 	bl	8000404 <__aeabi_i2d>
 8003360:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003364:	f7fd f8b8 	bl	80004d8 <__aeabi_dmul>
 8003368:	2200      	movs	r2, #0
 800336a:	4b4f      	ldr	r3, [pc, #316]	@ (80034a8 <_dtoa_r+0x530>)
 800336c:	f7fc fefe 	bl	800016c <__adddf3>
 8003370:	4605      	mov	r5, r0
 8003372:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8003376:	2c00      	cmp	r4, #0
 8003378:	f040 809a 	bne.w	80034b0 <_dtoa_r+0x538>
 800337c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003380:	2200      	movs	r2, #0
 8003382:	4b4a      	ldr	r3, [pc, #296]	@ (80034ac <_dtoa_r+0x534>)
 8003384:	f7fc fef0 	bl	8000168 <__aeabi_dsub>
 8003388:	4602      	mov	r2, r0
 800338a:	460b      	mov	r3, r1
 800338c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003390:	462a      	mov	r2, r5
 8003392:	4633      	mov	r3, r6
 8003394:	f7fd fb30 	bl	80009f8 <__aeabi_dcmpgt>
 8003398:	2800      	cmp	r0, #0
 800339a:	f040 828e 	bne.w	80038ba <_dtoa_r+0x942>
 800339e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80033a2:	462a      	mov	r2, r5
 80033a4:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80033a8:	f7fd fb08 	bl	80009bc <__aeabi_dcmplt>
 80033ac:	2800      	cmp	r0, #0
 80033ae:	f040 8127 	bne.w	8003600 <_dtoa_r+0x688>
 80033b2:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80033b6:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80033ba:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80033bc:	2b00      	cmp	r3, #0
 80033be:	f2c0 8163 	blt.w	8003688 <_dtoa_r+0x710>
 80033c2:	2f0e      	cmp	r7, #14
 80033c4:	f300 8160 	bgt.w	8003688 <_dtoa_r+0x710>
 80033c8:	4b33      	ldr	r3, [pc, #204]	@ (8003498 <_dtoa_r+0x520>)
 80033ca:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80033ce:	e9d3 3400 	ldrd	r3, r4, [r3]
 80033d2:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80033d6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80033d8:	2b00      	cmp	r3, #0
 80033da:	da03      	bge.n	80033e4 <_dtoa_r+0x46c>
 80033dc:	9b07      	ldr	r3, [sp, #28]
 80033de:	2b00      	cmp	r3, #0
 80033e0:	f340 8100 	ble.w	80035e4 <_dtoa_r+0x66c>
 80033e4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80033e8:	4656      	mov	r6, sl
 80033ea:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80033ee:	4620      	mov	r0, r4
 80033f0:	4629      	mov	r1, r5
 80033f2:	f7fd f99b 	bl	800072c <__aeabi_ddiv>
 80033f6:	f7fd fb1f 	bl	8000a38 <__aeabi_d2iz>
 80033fa:	4680      	mov	r8, r0
 80033fc:	f7fd f802 	bl	8000404 <__aeabi_i2d>
 8003400:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003404:	f7fd f868 	bl	80004d8 <__aeabi_dmul>
 8003408:	4602      	mov	r2, r0
 800340a:	460b      	mov	r3, r1
 800340c:	4620      	mov	r0, r4
 800340e:	4629      	mov	r1, r5
 8003410:	f7fc feaa 	bl	8000168 <__aeabi_dsub>
 8003414:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8003418:	9d07      	ldr	r5, [sp, #28]
 800341a:	f806 4b01 	strb.w	r4, [r6], #1
 800341e:	eba6 040a 	sub.w	r4, r6, sl
 8003422:	42a5      	cmp	r5, r4
 8003424:	4602      	mov	r2, r0
 8003426:	460b      	mov	r3, r1
 8003428:	f040 8116 	bne.w	8003658 <_dtoa_r+0x6e0>
 800342c:	f7fc fe9e 	bl	800016c <__adddf3>
 8003430:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003434:	4604      	mov	r4, r0
 8003436:	460d      	mov	r5, r1
 8003438:	f7fd fade 	bl	80009f8 <__aeabi_dcmpgt>
 800343c:	2800      	cmp	r0, #0
 800343e:	f040 80f8 	bne.w	8003632 <_dtoa_r+0x6ba>
 8003442:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003446:	4620      	mov	r0, r4
 8003448:	4629      	mov	r1, r5
 800344a:	f7fd faad 	bl	80009a8 <__aeabi_dcmpeq>
 800344e:	b118      	cbz	r0, 8003458 <_dtoa_r+0x4e0>
 8003450:	f018 0f01 	tst.w	r8, #1
 8003454:	f040 80ed 	bne.w	8003632 <_dtoa_r+0x6ba>
 8003458:	4649      	mov	r1, r9
 800345a:	4658      	mov	r0, fp
 800345c:	f000 fc92 	bl	8003d84 <_Bfree>
 8003460:	2300      	movs	r3, #0
 8003462:	7033      	strb	r3, [r6, #0]
 8003464:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8003466:	3701      	adds	r7, #1
 8003468:	601f      	str	r7, [r3, #0]
 800346a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 800346c:	2b00      	cmp	r3, #0
 800346e:	f000 8320 	beq.w	8003ab2 <_dtoa_r+0xb3a>
 8003472:	601e      	str	r6, [r3, #0]
 8003474:	e31d      	b.n	8003ab2 <_dtoa_r+0xb3a>
 8003476:	07e2      	lsls	r2, r4, #31
 8003478:	d505      	bpl.n	8003486 <_dtoa_r+0x50e>
 800347a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800347e:	f7fd f82b 	bl	80004d8 <__aeabi_dmul>
 8003482:	2301      	movs	r3, #1
 8003484:	3601      	adds	r6, #1
 8003486:	1064      	asrs	r4, r4, #1
 8003488:	3508      	adds	r5, #8
 800348a:	e73f      	b.n	800330c <_dtoa_r+0x394>
 800348c:	2602      	movs	r6, #2
 800348e:	e742      	b.n	8003316 <_dtoa_r+0x39e>
 8003490:	9c07      	ldr	r4, [sp, #28]
 8003492:	9704      	str	r7, [sp, #16]
 8003494:	e761      	b.n	800335a <_dtoa_r+0x3e2>
 8003496:	bf00      	nop
 8003498:	08006668 	.word	0x08006668
 800349c:	08006640 	.word	0x08006640
 80034a0:	3ff00000 	.word	0x3ff00000
 80034a4:	40240000 	.word	0x40240000
 80034a8:	401c0000 	.word	0x401c0000
 80034ac:	40140000 	.word	0x40140000
 80034b0:	4b70      	ldr	r3, [pc, #448]	@ (8003674 <_dtoa_r+0x6fc>)
 80034b2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80034b4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80034b8:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80034bc:	4454      	add	r4, sl
 80034be:	2900      	cmp	r1, #0
 80034c0:	d045      	beq.n	800354e <_dtoa_r+0x5d6>
 80034c2:	2000      	movs	r0, #0
 80034c4:	496c      	ldr	r1, [pc, #432]	@ (8003678 <_dtoa_r+0x700>)
 80034c6:	f7fd f931 	bl	800072c <__aeabi_ddiv>
 80034ca:	4633      	mov	r3, r6
 80034cc:	462a      	mov	r2, r5
 80034ce:	f7fc fe4b 	bl	8000168 <__aeabi_dsub>
 80034d2:	4656      	mov	r6, sl
 80034d4:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80034d8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80034dc:	f7fd faac 	bl	8000a38 <__aeabi_d2iz>
 80034e0:	4605      	mov	r5, r0
 80034e2:	f7fc ff8f 	bl	8000404 <__aeabi_i2d>
 80034e6:	4602      	mov	r2, r0
 80034e8:	460b      	mov	r3, r1
 80034ea:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80034ee:	f7fc fe3b 	bl	8000168 <__aeabi_dsub>
 80034f2:	4602      	mov	r2, r0
 80034f4:	460b      	mov	r3, r1
 80034f6:	3530      	adds	r5, #48	@ 0x30
 80034f8:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80034fc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003500:	f806 5b01 	strb.w	r5, [r6], #1
 8003504:	f7fd fa5a 	bl	80009bc <__aeabi_dcmplt>
 8003508:	2800      	cmp	r0, #0
 800350a:	d163      	bne.n	80035d4 <_dtoa_r+0x65c>
 800350c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8003510:	2000      	movs	r0, #0
 8003512:	495a      	ldr	r1, [pc, #360]	@ (800367c <_dtoa_r+0x704>)
 8003514:	f7fc fe28 	bl	8000168 <__aeabi_dsub>
 8003518:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 800351c:	f7fd fa4e 	bl	80009bc <__aeabi_dcmplt>
 8003520:	2800      	cmp	r0, #0
 8003522:	f040 8087 	bne.w	8003634 <_dtoa_r+0x6bc>
 8003526:	42a6      	cmp	r6, r4
 8003528:	f43f af43 	beq.w	80033b2 <_dtoa_r+0x43a>
 800352c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003530:	2200      	movs	r2, #0
 8003532:	4b53      	ldr	r3, [pc, #332]	@ (8003680 <_dtoa_r+0x708>)
 8003534:	f7fc ffd0 	bl	80004d8 <__aeabi_dmul>
 8003538:	2200      	movs	r2, #0
 800353a:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800353e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003542:	4b4f      	ldr	r3, [pc, #316]	@ (8003680 <_dtoa_r+0x708>)
 8003544:	f7fc ffc8 	bl	80004d8 <__aeabi_dmul>
 8003548:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800354c:	e7c4      	b.n	80034d8 <_dtoa_r+0x560>
 800354e:	4631      	mov	r1, r6
 8003550:	4628      	mov	r0, r5
 8003552:	f7fc ffc1 	bl	80004d8 <__aeabi_dmul>
 8003556:	4656      	mov	r6, sl
 8003558:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 800355c:	9413      	str	r4, [sp, #76]	@ 0x4c
 800355e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003562:	f7fd fa69 	bl	8000a38 <__aeabi_d2iz>
 8003566:	4605      	mov	r5, r0
 8003568:	f7fc ff4c 	bl	8000404 <__aeabi_i2d>
 800356c:	4602      	mov	r2, r0
 800356e:	460b      	mov	r3, r1
 8003570:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8003574:	f7fc fdf8 	bl	8000168 <__aeabi_dsub>
 8003578:	4602      	mov	r2, r0
 800357a:	460b      	mov	r3, r1
 800357c:	3530      	adds	r5, #48	@ 0x30
 800357e:	f806 5b01 	strb.w	r5, [r6], #1
 8003582:	42a6      	cmp	r6, r4
 8003584:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8003588:	f04f 0200 	mov.w	r2, #0
 800358c:	d124      	bne.n	80035d8 <_dtoa_r+0x660>
 800358e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003592:	4b39      	ldr	r3, [pc, #228]	@ (8003678 <_dtoa_r+0x700>)
 8003594:	f7fc fdea 	bl	800016c <__adddf3>
 8003598:	4602      	mov	r2, r0
 800359a:	460b      	mov	r3, r1
 800359c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80035a0:	f7fd fa2a 	bl	80009f8 <__aeabi_dcmpgt>
 80035a4:	2800      	cmp	r0, #0
 80035a6:	d145      	bne.n	8003634 <_dtoa_r+0x6bc>
 80035a8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 80035ac:	2000      	movs	r0, #0
 80035ae:	4932      	ldr	r1, [pc, #200]	@ (8003678 <_dtoa_r+0x700>)
 80035b0:	f7fc fdda 	bl	8000168 <__aeabi_dsub>
 80035b4:	4602      	mov	r2, r0
 80035b6:	460b      	mov	r3, r1
 80035b8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80035bc:	f7fd f9fe 	bl	80009bc <__aeabi_dcmplt>
 80035c0:	2800      	cmp	r0, #0
 80035c2:	f43f aef6 	beq.w	80033b2 <_dtoa_r+0x43a>
 80035c6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80035c8:	1e73      	subs	r3, r6, #1
 80035ca:	9313      	str	r3, [sp, #76]	@ 0x4c
 80035cc:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80035d0:	2b30      	cmp	r3, #48	@ 0x30
 80035d2:	d0f8      	beq.n	80035c6 <_dtoa_r+0x64e>
 80035d4:	9f04      	ldr	r7, [sp, #16]
 80035d6:	e73f      	b.n	8003458 <_dtoa_r+0x4e0>
 80035d8:	4b29      	ldr	r3, [pc, #164]	@ (8003680 <_dtoa_r+0x708>)
 80035da:	f7fc ff7d 	bl	80004d8 <__aeabi_dmul>
 80035de:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80035e2:	e7bc      	b.n	800355e <_dtoa_r+0x5e6>
 80035e4:	d10c      	bne.n	8003600 <_dtoa_r+0x688>
 80035e6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80035ea:	2200      	movs	r2, #0
 80035ec:	4b25      	ldr	r3, [pc, #148]	@ (8003684 <_dtoa_r+0x70c>)
 80035ee:	f7fc ff73 	bl	80004d8 <__aeabi_dmul>
 80035f2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80035f6:	f7fd f9f5 	bl	80009e4 <__aeabi_dcmpge>
 80035fa:	2800      	cmp	r0, #0
 80035fc:	f000 815b 	beq.w	80038b6 <_dtoa_r+0x93e>
 8003600:	2400      	movs	r4, #0
 8003602:	4625      	mov	r5, r4
 8003604:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8003606:	4656      	mov	r6, sl
 8003608:	43db      	mvns	r3, r3
 800360a:	9304      	str	r3, [sp, #16]
 800360c:	2700      	movs	r7, #0
 800360e:	4621      	mov	r1, r4
 8003610:	4658      	mov	r0, fp
 8003612:	f000 fbb7 	bl	8003d84 <_Bfree>
 8003616:	2d00      	cmp	r5, #0
 8003618:	d0dc      	beq.n	80035d4 <_dtoa_r+0x65c>
 800361a:	b12f      	cbz	r7, 8003628 <_dtoa_r+0x6b0>
 800361c:	42af      	cmp	r7, r5
 800361e:	d003      	beq.n	8003628 <_dtoa_r+0x6b0>
 8003620:	4639      	mov	r1, r7
 8003622:	4658      	mov	r0, fp
 8003624:	f000 fbae 	bl	8003d84 <_Bfree>
 8003628:	4629      	mov	r1, r5
 800362a:	4658      	mov	r0, fp
 800362c:	f000 fbaa 	bl	8003d84 <_Bfree>
 8003630:	e7d0      	b.n	80035d4 <_dtoa_r+0x65c>
 8003632:	9704      	str	r7, [sp, #16]
 8003634:	4633      	mov	r3, r6
 8003636:	461e      	mov	r6, r3
 8003638:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800363c:	2a39      	cmp	r2, #57	@ 0x39
 800363e:	d107      	bne.n	8003650 <_dtoa_r+0x6d8>
 8003640:	459a      	cmp	sl, r3
 8003642:	d1f8      	bne.n	8003636 <_dtoa_r+0x6be>
 8003644:	9a04      	ldr	r2, [sp, #16]
 8003646:	3201      	adds	r2, #1
 8003648:	9204      	str	r2, [sp, #16]
 800364a:	2230      	movs	r2, #48	@ 0x30
 800364c:	f88a 2000 	strb.w	r2, [sl]
 8003650:	781a      	ldrb	r2, [r3, #0]
 8003652:	3201      	adds	r2, #1
 8003654:	701a      	strb	r2, [r3, #0]
 8003656:	e7bd      	b.n	80035d4 <_dtoa_r+0x65c>
 8003658:	2200      	movs	r2, #0
 800365a:	4b09      	ldr	r3, [pc, #36]	@ (8003680 <_dtoa_r+0x708>)
 800365c:	f7fc ff3c 	bl	80004d8 <__aeabi_dmul>
 8003660:	2200      	movs	r2, #0
 8003662:	2300      	movs	r3, #0
 8003664:	4604      	mov	r4, r0
 8003666:	460d      	mov	r5, r1
 8003668:	f7fd f99e 	bl	80009a8 <__aeabi_dcmpeq>
 800366c:	2800      	cmp	r0, #0
 800366e:	f43f aebc 	beq.w	80033ea <_dtoa_r+0x472>
 8003672:	e6f1      	b.n	8003458 <_dtoa_r+0x4e0>
 8003674:	08006668 	.word	0x08006668
 8003678:	3fe00000 	.word	0x3fe00000
 800367c:	3ff00000 	.word	0x3ff00000
 8003680:	40240000 	.word	0x40240000
 8003684:	40140000 	.word	0x40140000
 8003688:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800368a:	2a00      	cmp	r2, #0
 800368c:	f000 80db 	beq.w	8003846 <_dtoa_r+0x8ce>
 8003690:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8003692:	2a01      	cmp	r2, #1
 8003694:	f300 80bf 	bgt.w	8003816 <_dtoa_r+0x89e>
 8003698:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800369a:	2a00      	cmp	r2, #0
 800369c:	f000 80b7 	beq.w	800380e <_dtoa_r+0x896>
 80036a0:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 80036a4:	4646      	mov	r6, r8
 80036a6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80036a8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80036aa:	2101      	movs	r1, #1
 80036ac:	441a      	add	r2, r3
 80036ae:	4658      	mov	r0, fp
 80036b0:	4498      	add	r8, r3
 80036b2:	9209      	str	r2, [sp, #36]	@ 0x24
 80036b4:	f000 fc64 	bl	8003f80 <__i2b>
 80036b8:	4605      	mov	r5, r0
 80036ba:	b15e      	cbz	r6, 80036d4 <_dtoa_r+0x75c>
 80036bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80036be:	2b00      	cmp	r3, #0
 80036c0:	dd08      	ble.n	80036d4 <_dtoa_r+0x75c>
 80036c2:	42b3      	cmp	r3, r6
 80036c4:	bfa8      	it	ge
 80036c6:	4633      	movge	r3, r6
 80036c8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80036ca:	eba8 0803 	sub.w	r8, r8, r3
 80036ce:	1af6      	subs	r6, r6, r3
 80036d0:	1ad3      	subs	r3, r2, r3
 80036d2:	9309      	str	r3, [sp, #36]	@ 0x24
 80036d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80036d6:	b1f3      	cbz	r3, 8003716 <_dtoa_r+0x79e>
 80036d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80036da:	2b00      	cmp	r3, #0
 80036dc:	f000 80b7 	beq.w	800384e <_dtoa_r+0x8d6>
 80036e0:	b18c      	cbz	r4, 8003706 <_dtoa_r+0x78e>
 80036e2:	4629      	mov	r1, r5
 80036e4:	4622      	mov	r2, r4
 80036e6:	4658      	mov	r0, fp
 80036e8:	f000 fd08 	bl	80040fc <__pow5mult>
 80036ec:	464a      	mov	r2, r9
 80036ee:	4601      	mov	r1, r0
 80036f0:	4605      	mov	r5, r0
 80036f2:	4658      	mov	r0, fp
 80036f4:	f000 fc5a 	bl	8003fac <__multiply>
 80036f8:	4649      	mov	r1, r9
 80036fa:	9004      	str	r0, [sp, #16]
 80036fc:	4658      	mov	r0, fp
 80036fe:	f000 fb41 	bl	8003d84 <_Bfree>
 8003702:	9b04      	ldr	r3, [sp, #16]
 8003704:	4699      	mov	r9, r3
 8003706:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003708:	1b1a      	subs	r2, r3, r4
 800370a:	d004      	beq.n	8003716 <_dtoa_r+0x79e>
 800370c:	4649      	mov	r1, r9
 800370e:	4658      	mov	r0, fp
 8003710:	f000 fcf4 	bl	80040fc <__pow5mult>
 8003714:	4681      	mov	r9, r0
 8003716:	2101      	movs	r1, #1
 8003718:	4658      	mov	r0, fp
 800371a:	f000 fc31 	bl	8003f80 <__i2b>
 800371e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003720:	4604      	mov	r4, r0
 8003722:	2b00      	cmp	r3, #0
 8003724:	f000 81c9 	beq.w	8003aba <_dtoa_r+0xb42>
 8003728:	461a      	mov	r2, r3
 800372a:	4601      	mov	r1, r0
 800372c:	4658      	mov	r0, fp
 800372e:	f000 fce5 	bl	80040fc <__pow5mult>
 8003732:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003734:	4604      	mov	r4, r0
 8003736:	2b01      	cmp	r3, #1
 8003738:	f300 808f 	bgt.w	800385a <_dtoa_r+0x8e2>
 800373c:	9b02      	ldr	r3, [sp, #8]
 800373e:	2b00      	cmp	r3, #0
 8003740:	f040 8087 	bne.w	8003852 <_dtoa_r+0x8da>
 8003744:	9b03      	ldr	r3, [sp, #12]
 8003746:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800374a:	2b00      	cmp	r3, #0
 800374c:	f040 8083 	bne.w	8003856 <_dtoa_r+0x8de>
 8003750:	9b03      	ldr	r3, [sp, #12]
 8003752:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8003756:	0d1b      	lsrs	r3, r3, #20
 8003758:	051b      	lsls	r3, r3, #20
 800375a:	b12b      	cbz	r3, 8003768 <_dtoa_r+0x7f0>
 800375c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800375e:	f108 0801 	add.w	r8, r8, #1
 8003762:	3301      	adds	r3, #1
 8003764:	9309      	str	r3, [sp, #36]	@ 0x24
 8003766:	2301      	movs	r3, #1
 8003768:	930a      	str	r3, [sp, #40]	@ 0x28
 800376a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800376c:	2b00      	cmp	r3, #0
 800376e:	f000 81aa 	beq.w	8003ac6 <_dtoa_r+0xb4e>
 8003772:	6923      	ldr	r3, [r4, #16]
 8003774:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003778:	6918      	ldr	r0, [r3, #16]
 800377a:	f000 fbb5 	bl	8003ee8 <__hi0bits>
 800377e:	f1c0 0020 	rsb	r0, r0, #32
 8003782:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003784:	4418      	add	r0, r3
 8003786:	f010 001f 	ands.w	r0, r0, #31
 800378a:	d071      	beq.n	8003870 <_dtoa_r+0x8f8>
 800378c:	f1c0 0320 	rsb	r3, r0, #32
 8003790:	2b04      	cmp	r3, #4
 8003792:	dd65      	ble.n	8003860 <_dtoa_r+0x8e8>
 8003794:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003796:	f1c0 001c 	rsb	r0, r0, #28
 800379a:	4403      	add	r3, r0
 800379c:	4480      	add	r8, r0
 800379e:	4406      	add	r6, r0
 80037a0:	9309      	str	r3, [sp, #36]	@ 0x24
 80037a2:	f1b8 0f00 	cmp.w	r8, #0
 80037a6:	dd05      	ble.n	80037b4 <_dtoa_r+0x83c>
 80037a8:	4649      	mov	r1, r9
 80037aa:	4642      	mov	r2, r8
 80037ac:	4658      	mov	r0, fp
 80037ae:	f000 fcff 	bl	80041b0 <__lshift>
 80037b2:	4681      	mov	r9, r0
 80037b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	dd05      	ble.n	80037c6 <_dtoa_r+0x84e>
 80037ba:	4621      	mov	r1, r4
 80037bc:	461a      	mov	r2, r3
 80037be:	4658      	mov	r0, fp
 80037c0:	f000 fcf6 	bl	80041b0 <__lshift>
 80037c4:	4604      	mov	r4, r0
 80037c6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	d053      	beq.n	8003874 <_dtoa_r+0x8fc>
 80037cc:	4621      	mov	r1, r4
 80037ce:	4648      	mov	r0, r9
 80037d0:	f000 fd5a 	bl	8004288 <__mcmp>
 80037d4:	2800      	cmp	r0, #0
 80037d6:	da4d      	bge.n	8003874 <_dtoa_r+0x8fc>
 80037d8:	1e7b      	subs	r3, r7, #1
 80037da:	4649      	mov	r1, r9
 80037dc:	9304      	str	r3, [sp, #16]
 80037de:	220a      	movs	r2, #10
 80037e0:	2300      	movs	r3, #0
 80037e2:	4658      	mov	r0, fp
 80037e4:	f000 faf0 	bl	8003dc8 <__multadd>
 80037e8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80037ea:	4681      	mov	r9, r0
 80037ec:	2b00      	cmp	r3, #0
 80037ee:	f000 816c 	beq.w	8003aca <_dtoa_r+0xb52>
 80037f2:	2300      	movs	r3, #0
 80037f4:	4629      	mov	r1, r5
 80037f6:	220a      	movs	r2, #10
 80037f8:	4658      	mov	r0, fp
 80037fa:	f000 fae5 	bl	8003dc8 <__multadd>
 80037fe:	9b08      	ldr	r3, [sp, #32]
 8003800:	4605      	mov	r5, r0
 8003802:	2b00      	cmp	r3, #0
 8003804:	dc61      	bgt.n	80038ca <_dtoa_r+0x952>
 8003806:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003808:	2b02      	cmp	r3, #2
 800380a:	dc3b      	bgt.n	8003884 <_dtoa_r+0x90c>
 800380c:	e05d      	b.n	80038ca <_dtoa_r+0x952>
 800380e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8003810:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8003814:	e746      	b.n	80036a4 <_dtoa_r+0x72c>
 8003816:	9b07      	ldr	r3, [sp, #28]
 8003818:	1e5c      	subs	r4, r3, #1
 800381a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800381c:	42a3      	cmp	r3, r4
 800381e:	bfbf      	itttt	lt
 8003820:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8003822:	9a0e      	ldrlt	r2, [sp, #56]	@ 0x38
 8003824:	1ae3      	sublt	r3, r4, r3
 8003826:	18d2      	addlt	r2, r2, r3
 8003828:	bfa8      	it	ge
 800382a:	1b1c      	subge	r4, r3, r4
 800382c:	9b07      	ldr	r3, [sp, #28]
 800382e:	bfbe      	ittt	lt
 8003830:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8003832:	920e      	strlt	r2, [sp, #56]	@ 0x38
 8003834:	2400      	movlt	r4, #0
 8003836:	2b00      	cmp	r3, #0
 8003838:	bfb5      	itete	lt
 800383a:	eba8 0603 	sublt.w	r6, r8, r3
 800383e:	4646      	movge	r6, r8
 8003840:	2300      	movlt	r3, #0
 8003842:	9b07      	ldrge	r3, [sp, #28]
 8003844:	e730      	b.n	80036a8 <_dtoa_r+0x730>
 8003846:	4646      	mov	r6, r8
 8003848:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 800384a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 800384c:	e735      	b.n	80036ba <_dtoa_r+0x742>
 800384e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8003850:	e75c      	b.n	800370c <_dtoa_r+0x794>
 8003852:	2300      	movs	r3, #0
 8003854:	e788      	b.n	8003768 <_dtoa_r+0x7f0>
 8003856:	9b02      	ldr	r3, [sp, #8]
 8003858:	e786      	b.n	8003768 <_dtoa_r+0x7f0>
 800385a:	2300      	movs	r3, #0
 800385c:	930a      	str	r3, [sp, #40]	@ 0x28
 800385e:	e788      	b.n	8003772 <_dtoa_r+0x7fa>
 8003860:	d09f      	beq.n	80037a2 <_dtoa_r+0x82a>
 8003862:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003864:	331c      	adds	r3, #28
 8003866:	441a      	add	r2, r3
 8003868:	4498      	add	r8, r3
 800386a:	441e      	add	r6, r3
 800386c:	9209      	str	r2, [sp, #36]	@ 0x24
 800386e:	e798      	b.n	80037a2 <_dtoa_r+0x82a>
 8003870:	4603      	mov	r3, r0
 8003872:	e7f6      	b.n	8003862 <_dtoa_r+0x8ea>
 8003874:	9b07      	ldr	r3, [sp, #28]
 8003876:	9704      	str	r7, [sp, #16]
 8003878:	2b00      	cmp	r3, #0
 800387a:	dc20      	bgt.n	80038be <_dtoa_r+0x946>
 800387c:	9308      	str	r3, [sp, #32]
 800387e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003880:	2b02      	cmp	r3, #2
 8003882:	dd1e      	ble.n	80038c2 <_dtoa_r+0x94a>
 8003884:	9b08      	ldr	r3, [sp, #32]
 8003886:	2b00      	cmp	r3, #0
 8003888:	f47f aebc 	bne.w	8003604 <_dtoa_r+0x68c>
 800388c:	4621      	mov	r1, r4
 800388e:	2205      	movs	r2, #5
 8003890:	4658      	mov	r0, fp
 8003892:	f000 fa99 	bl	8003dc8 <__multadd>
 8003896:	4601      	mov	r1, r0
 8003898:	4604      	mov	r4, r0
 800389a:	4648      	mov	r0, r9
 800389c:	f000 fcf4 	bl	8004288 <__mcmp>
 80038a0:	2800      	cmp	r0, #0
 80038a2:	f77f aeaf 	ble.w	8003604 <_dtoa_r+0x68c>
 80038a6:	2331      	movs	r3, #49	@ 0x31
 80038a8:	4656      	mov	r6, sl
 80038aa:	f806 3b01 	strb.w	r3, [r6], #1
 80038ae:	9b04      	ldr	r3, [sp, #16]
 80038b0:	3301      	adds	r3, #1
 80038b2:	9304      	str	r3, [sp, #16]
 80038b4:	e6aa      	b.n	800360c <_dtoa_r+0x694>
 80038b6:	9c07      	ldr	r4, [sp, #28]
 80038b8:	9704      	str	r7, [sp, #16]
 80038ba:	4625      	mov	r5, r4
 80038bc:	e7f3      	b.n	80038a6 <_dtoa_r+0x92e>
 80038be:	9b07      	ldr	r3, [sp, #28]
 80038c0:	9308      	str	r3, [sp, #32]
 80038c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80038c4:	2b00      	cmp	r3, #0
 80038c6:	f000 8104 	beq.w	8003ad2 <_dtoa_r+0xb5a>
 80038ca:	2e00      	cmp	r6, #0
 80038cc:	dd05      	ble.n	80038da <_dtoa_r+0x962>
 80038ce:	4629      	mov	r1, r5
 80038d0:	4632      	mov	r2, r6
 80038d2:	4658      	mov	r0, fp
 80038d4:	f000 fc6c 	bl	80041b0 <__lshift>
 80038d8:	4605      	mov	r5, r0
 80038da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80038dc:	2b00      	cmp	r3, #0
 80038de:	d05a      	beq.n	8003996 <_dtoa_r+0xa1e>
 80038e0:	4658      	mov	r0, fp
 80038e2:	6869      	ldr	r1, [r5, #4]
 80038e4:	f000 fa0e 	bl	8003d04 <_Balloc>
 80038e8:	4606      	mov	r6, r0
 80038ea:	b928      	cbnz	r0, 80038f8 <_dtoa_r+0x980>
 80038ec:	4602      	mov	r2, r0
 80038ee:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80038f2:	4b83      	ldr	r3, [pc, #524]	@ (8003b00 <_dtoa_r+0xb88>)
 80038f4:	f7ff bb54 	b.w	8002fa0 <_dtoa_r+0x28>
 80038f8:	692a      	ldr	r2, [r5, #16]
 80038fa:	f105 010c 	add.w	r1, r5, #12
 80038fe:	3202      	adds	r2, #2
 8003900:	0092      	lsls	r2, r2, #2
 8003902:	300c      	adds	r0, #12
 8003904:	f001 ff5e 	bl	80057c4 <memcpy>
 8003908:	2201      	movs	r2, #1
 800390a:	4631      	mov	r1, r6
 800390c:	4658      	mov	r0, fp
 800390e:	f000 fc4f 	bl	80041b0 <__lshift>
 8003912:	462f      	mov	r7, r5
 8003914:	4605      	mov	r5, r0
 8003916:	f10a 0301 	add.w	r3, sl, #1
 800391a:	9307      	str	r3, [sp, #28]
 800391c:	9b08      	ldr	r3, [sp, #32]
 800391e:	4453      	add	r3, sl
 8003920:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003922:	9b02      	ldr	r3, [sp, #8]
 8003924:	f003 0301 	and.w	r3, r3, #1
 8003928:	930a      	str	r3, [sp, #40]	@ 0x28
 800392a:	9b07      	ldr	r3, [sp, #28]
 800392c:	4621      	mov	r1, r4
 800392e:	3b01      	subs	r3, #1
 8003930:	4648      	mov	r0, r9
 8003932:	9302      	str	r3, [sp, #8]
 8003934:	f7ff fa98 	bl	8002e68 <quorem>
 8003938:	4639      	mov	r1, r7
 800393a:	9008      	str	r0, [sp, #32]
 800393c:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003940:	4648      	mov	r0, r9
 8003942:	f000 fca1 	bl	8004288 <__mcmp>
 8003946:	462a      	mov	r2, r5
 8003948:	9009      	str	r0, [sp, #36]	@ 0x24
 800394a:	4621      	mov	r1, r4
 800394c:	4658      	mov	r0, fp
 800394e:	f000 fcb7 	bl	80042c0 <__mdiff>
 8003952:	68c2      	ldr	r2, [r0, #12]
 8003954:	4606      	mov	r6, r0
 8003956:	bb02      	cbnz	r2, 800399a <_dtoa_r+0xa22>
 8003958:	4601      	mov	r1, r0
 800395a:	4648      	mov	r0, r9
 800395c:	f000 fc94 	bl	8004288 <__mcmp>
 8003960:	4602      	mov	r2, r0
 8003962:	4631      	mov	r1, r6
 8003964:	4658      	mov	r0, fp
 8003966:	920c      	str	r2, [sp, #48]	@ 0x30
 8003968:	f000 fa0c 	bl	8003d84 <_Bfree>
 800396c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800396e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003970:	9e07      	ldr	r6, [sp, #28]
 8003972:	ea43 0102 	orr.w	r1, r3, r2
 8003976:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003978:	4319      	orrs	r1, r3
 800397a:	d110      	bne.n	800399e <_dtoa_r+0xa26>
 800397c:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003980:	d029      	beq.n	80039d6 <_dtoa_r+0xa5e>
 8003982:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003984:	2b00      	cmp	r3, #0
 8003986:	dd02      	ble.n	800398e <_dtoa_r+0xa16>
 8003988:	9b08      	ldr	r3, [sp, #32]
 800398a:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 800398e:	9b02      	ldr	r3, [sp, #8]
 8003990:	f883 8000 	strb.w	r8, [r3]
 8003994:	e63b      	b.n	800360e <_dtoa_r+0x696>
 8003996:	4628      	mov	r0, r5
 8003998:	e7bb      	b.n	8003912 <_dtoa_r+0x99a>
 800399a:	2201      	movs	r2, #1
 800399c:	e7e1      	b.n	8003962 <_dtoa_r+0x9ea>
 800399e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80039a0:	2b00      	cmp	r3, #0
 80039a2:	db04      	blt.n	80039ae <_dtoa_r+0xa36>
 80039a4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80039a6:	430b      	orrs	r3, r1
 80039a8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80039aa:	430b      	orrs	r3, r1
 80039ac:	d120      	bne.n	80039f0 <_dtoa_r+0xa78>
 80039ae:	2a00      	cmp	r2, #0
 80039b0:	dded      	ble.n	800398e <_dtoa_r+0xa16>
 80039b2:	4649      	mov	r1, r9
 80039b4:	2201      	movs	r2, #1
 80039b6:	4658      	mov	r0, fp
 80039b8:	f000 fbfa 	bl	80041b0 <__lshift>
 80039bc:	4621      	mov	r1, r4
 80039be:	4681      	mov	r9, r0
 80039c0:	f000 fc62 	bl	8004288 <__mcmp>
 80039c4:	2800      	cmp	r0, #0
 80039c6:	dc03      	bgt.n	80039d0 <_dtoa_r+0xa58>
 80039c8:	d1e1      	bne.n	800398e <_dtoa_r+0xa16>
 80039ca:	f018 0f01 	tst.w	r8, #1
 80039ce:	d0de      	beq.n	800398e <_dtoa_r+0xa16>
 80039d0:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80039d4:	d1d8      	bne.n	8003988 <_dtoa_r+0xa10>
 80039d6:	2339      	movs	r3, #57	@ 0x39
 80039d8:	9a02      	ldr	r2, [sp, #8]
 80039da:	7013      	strb	r3, [r2, #0]
 80039dc:	4633      	mov	r3, r6
 80039de:	461e      	mov	r6, r3
 80039e0:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80039e4:	3b01      	subs	r3, #1
 80039e6:	2a39      	cmp	r2, #57	@ 0x39
 80039e8:	d052      	beq.n	8003a90 <_dtoa_r+0xb18>
 80039ea:	3201      	adds	r2, #1
 80039ec:	701a      	strb	r2, [r3, #0]
 80039ee:	e60e      	b.n	800360e <_dtoa_r+0x696>
 80039f0:	2a00      	cmp	r2, #0
 80039f2:	dd07      	ble.n	8003a04 <_dtoa_r+0xa8c>
 80039f4:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80039f8:	d0ed      	beq.n	80039d6 <_dtoa_r+0xa5e>
 80039fa:	9a02      	ldr	r2, [sp, #8]
 80039fc:	f108 0301 	add.w	r3, r8, #1
 8003a00:	7013      	strb	r3, [r2, #0]
 8003a02:	e604      	b.n	800360e <_dtoa_r+0x696>
 8003a04:	9b07      	ldr	r3, [sp, #28]
 8003a06:	9a07      	ldr	r2, [sp, #28]
 8003a08:	f803 8c01 	strb.w	r8, [r3, #-1]
 8003a0c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003a0e:	4293      	cmp	r3, r2
 8003a10:	d028      	beq.n	8003a64 <_dtoa_r+0xaec>
 8003a12:	4649      	mov	r1, r9
 8003a14:	2300      	movs	r3, #0
 8003a16:	220a      	movs	r2, #10
 8003a18:	4658      	mov	r0, fp
 8003a1a:	f000 f9d5 	bl	8003dc8 <__multadd>
 8003a1e:	42af      	cmp	r7, r5
 8003a20:	4681      	mov	r9, r0
 8003a22:	f04f 0300 	mov.w	r3, #0
 8003a26:	f04f 020a 	mov.w	r2, #10
 8003a2a:	4639      	mov	r1, r7
 8003a2c:	4658      	mov	r0, fp
 8003a2e:	d107      	bne.n	8003a40 <_dtoa_r+0xac8>
 8003a30:	f000 f9ca 	bl	8003dc8 <__multadd>
 8003a34:	4607      	mov	r7, r0
 8003a36:	4605      	mov	r5, r0
 8003a38:	9b07      	ldr	r3, [sp, #28]
 8003a3a:	3301      	adds	r3, #1
 8003a3c:	9307      	str	r3, [sp, #28]
 8003a3e:	e774      	b.n	800392a <_dtoa_r+0x9b2>
 8003a40:	f000 f9c2 	bl	8003dc8 <__multadd>
 8003a44:	4629      	mov	r1, r5
 8003a46:	4607      	mov	r7, r0
 8003a48:	2300      	movs	r3, #0
 8003a4a:	220a      	movs	r2, #10
 8003a4c:	4658      	mov	r0, fp
 8003a4e:	f000 f9bb 	bl	8003dc8 <__multadd>
 8003a52:	4605      	mov	r5, r0
 8003a54:	e7f0      	b.n	8003a38 <_dtoa_r+0xac0>
 8003a56:	9b08      	ldr	r3, [sp, #32]
 8003a58:	2700      	movs	r7, #0
 8003a5a:	2b00      	cmp	r3, #0
 8003a5c:	bfcc      	ite	gt
 8003a5e:	461e      	movgt	r6, r3
 8003a60:	2601      	movle	r6, #1
 8003a62:	4456      	add	r6, sl
 8003a64:	4649      	mov	r1, r9
 8003a66:	2201      	movs	r2, #1
 8003a68:	4658      	mov	r0, fp
 8003a6a:	f000 fba1 	bl	80041b0 <__lshift>
 8003a6e:	4621      	mov	r1, r4
 8003a70:	4681      	mov	r9, r0
 8003a72:	f000 fc09 	bl	8004288 <__mcmp>
 8003a76:	2800      	cmp	r0, #0
 8003a78:	dcb0      	bgt.n	80039dc <_dtoa_r+0xa64>
 8003a7a:	d102      	bne.n	8003a82 <_dtoa_r+0xb0a>
 8003a7c:	f018 0f01 	tst.w	r8, #1
 8003a80:	d1ac      	bne.n	80039dc <_dtoa_r+0xa64>
 8003a82:	4633      	mov	r3, r6
 8003a84:	461e      	mov	r6, r3
 8003a86:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003a8a:	2a30      	cmp	r2, #48	@ 0x30
 8003a8c:	d0fa      	beq.n	8003a84 <_dtoa_r+0xb0c>
 8003a8e:	e5be      	b.n	800360e <_dtoa_r+0x696>
 8003a90:	459a      	cmp	sl, r3
 8003a92:	d1a4      	bne.n	80039de <_dtoa_r+0xa66>
 8003a94:	9b04      	ldr	r3, [sp, #16]
 8003a96:	3301      	adds	r3, #1
 8003a98:	9304      	str	r3, [sp, #16]
 8003a9a:	2331      	movs	r3, #49	@ 0x31
 8003a9c:	f88a 3000 	strb.w	r3, [sl]
 8003aa0:	e5b5      	b.n	800360e <_dtoa_r+0x696>
 8003aa2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003aa4:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8003b04 <_dtoa_r+0xb8c>
 8003aa8:	b11b      	cbz	r3, 8003ab2 <_dtoa_r+0xb3a>
 8003aaa:	f10a 0308 	add.w	r3, sl, #8
 8003aae:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003ab0:	6013      	str	r3, [r2, #0]
 8003ab2:	4650      	mov	r0, sl
 8003ab4:	b017      	add	sp, #92	@ 0x5c
 8003ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003aba:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003abc:	2b01      	cmp	r3, #1
 8003abe:	f77f ae3d 	ble.w	800373c <_dtoa_r+0x7c4>
 8003ac2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003ac4:	930a      	str	r3, [sp, #40]	@ 0x28
 8003ac6:	2001      	movs	r0, #1
 8003ac8:	e65b      	b.n	8003782 <_dtoa_r+0x80a>
 8003aca:	9b08      	ldr	r3, [sp, #32]
 8003acc:	2b00      	cmp	r3, #0
 8003ace:	f77f aed6 	ble.w	800387e <_dtoa_r+0x906>
 8003ad2:	4656      	mov	r6, sl
 8003ad4:	4621      	mov	r1, r4
 8003ad6:	4648      	mov	r0, r9
 8003ad8:	f7ff f9c6 	bl	8002e68 <quorem>
 8003adc:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003ae0:	9b08      	ldr	r3, [sp, #32]
 8003ae2:	f806 8b01 	strb.w	r8, [r6], #1
 8003ae6:	eba6 020a 	sub.w	r2, r6, sl
 8003aea:	4293      	cmp	r3, r2
 8003aec:	ddb3      	ble.n	8003a56 <_dtoa_r+0xade>
 8003aee:	4649      	mov	r1, r9
 8003af0:	2300      	movs	r3, #0
 8003af2:	220a      	movs	r2, #10
 8003af4:	4658      	mov	r0, fp
 8003af6:	f000 f967 	bl	8003dc8 <__multadd>
 8003afa:	4681      	mov	r9, r0
 8003afc:	e7ea      	b.n	8003ad4 <_dtoa_r+0xb5c>
 8003afe:	bf00      	nop
 8003b00:	080065c7 	.word	0x080065c7
 8003b04:	0800654b 	.word	0x0800654b

08003b08 <_free_r>:
 8003b08:	b538      	push	{r3, r4, r5, lr}
 8003b0a:	4605      	mov	r5, r0
 8003b0c:	2900      	cmp	r1, #0
 8003b0e:	d040      	beq.n	8003b92 <_free_r+0x8a>
 8003b10:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003b14:	1f0c      	subs	r4, r1, #4
 8003b16:	2b00      	cmp	r3, #0
 8003b18:	bfb8      	it	lt
 8003b1a:	18e4      	addlt	r4, r4, r3
 8003b1c:	f000 f8e6 	bl	8003cec <__malloc_lock>
 8003b20:	4a1c      	ldr	r2, [pc, #112]	@ (8003b94 <_free_r+0x8c>)
 8003b22:	6813      	ldr	r3, [r2, #0]
 8003b24:	b933      	cbnz	r3, 8003b34 <_free_r+0x2c>
 8003b26:	6063      	str	r3, [r4, #4]
 8003b28:	6014      	str	r4, [r2, #0]
 8003b2a:	4628      	mov	r0, r5
 8003b2c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003b30:	f000 b8e2 	b.w	8003cf8 <__malloc_unlock>
 8003b34:	42a3      	cmp	r3, r4
 8003b36:	d908      	bls.n	8003b4a <_free_r+0x42>
 8003b38:	6820      	ldr	r0, [r4, #0]
 8003b3a:	1821      	adds	r1, r4, r0
 8003b3c:	428b      	cmp	r3, r1
 8003b3e:	bf01      	itttt	eq
 8003b40:	6819      	ldreq	r1, [r3, #0]
 8003b42:	685b      	ldreq	r3, [r3, #4]
 8003b44:	1809      	addeq	r1, r1, r0
 8003b46:	6021      	streq	r1, [r4, #0]
 8003b48:	e7ed      	b.n	8003b26 <_free_r+0x1e>
 8003b4a:	461a      	mov	r2, r3
 8003b4c:	685b      	ldr	r3, [r3, #4]
 8003b4e:	b10b      	cbz	r3, 8003b54 <_free_r+0x4c>
 8003b50:	42a3      	cmp	r3, r4
 8003b52:	d9fa      	bls.n	8003b4a <_free_r+0x42>
 8003b54:	6811      	ldr	r1, [r2, #0]
 8003b56:	1850      	adds	r0, r2, r1
 8003b58:	42a0      	cmp	r0, r4
 8003b5a:	d10b      	bne.n	8003b74 <_free_r+0x6c>
 8003b5c:	6820      	ldr	r0, [r4, #0]
 8003b5e:	4401      	add	r1, r0
 8003b60:	1850      	adds	r0, r2, r1
 8003b62:	4283      	cmp	r3, r0
 8003b64:	6011      	str	r1, [r2, #0]
 8003b66:	d1e0      	bne.n	8003b2a <_free_r+0x22>
 8003b68:	6818      	ldr	r0, [r3, #0]
 8003b6a:	685b      	ldr	r3, [r3, #4]
 8003b6c:	4408      	add	r0, r1
 8003b6e:	6010      	str	r0, [r2, #0]
 8003b70:	6053      	str	r3, [r2, #4]
 8003b72:	e7da      	b.n	8003b2a <_free_r+0x22>
 8003b74:	d902      	bls.n	8003b7c <_free_r+0x74>
 8003b76:	230c      	movs	r3, #12
 8003b78:	602b      	str	r3, [r5, #0]
 8003b7a:	e7d6      	b.n	8003b2a <_free_r+0x22>
 8003b7c:	6820      	ldr	r0, [r4, #0]
 8003b7e:	1821      	adds	r1, r4, r0
 8003b80:	428b      	cmp	r3, r1
 8003b82:	bf01      	itttt	eq
 8003b84:	6819      	ldreq	r1, [r3, #0]
 8003b86:	685b      	ldreq	r3, [r3, #4]
 8003b88:	1809      	addeq	r1, r1, r0
 8003b8a:	6021      	streq	r1, [r4, #0]
 8003b8c:	6063      	str	r3, [r4, #4]
 8003b8e:	6054      	str	r4, [r2, #4]
 8003b90:	e7cb      	b.n	8003b2a <_free_r+0x22>
 8003b92:	bd38      	pop	{r3, r4, r5, pc}
 8003b94:	20000340 	.word	0x20000340

08003b98 <malloc>:
 8003b98:	4b02      	ldr	r3, [pc, #8]	@ (8003ba4 <malloc+0xc>)
 8003b9a:	4601      	mov	r1, r0
 8003b9c:	6818      	ldr	r0, [r3, #0]
 8003b9e:	f000 b825 	b.w	8003bec <_malloc_r>
 8003ba2:	bf00      	nop
 8003ba4:	20000018 	.word	0x20000018

08003ba8 <sbrk_aligned>:
 8003ba8:	b570      	push	{r4, r5, r6, lr}
 8003baa:	4e0f      	ldr	r6, [pc, #60]	@ (8003be8 <sbrk_aligned+0x40>)
 8003bac:	460c      	mov	r4, r1
 8003bae:	6831      	ldr	r1, [r6, #0]
 8003bb0:	4605      	mov	r5, r0
 8003bb2:	b911      	cbnz	r1, 8003bba <sbrk_aligned+0x12>
 8003bb4:	f001 fdf6 	bl	80057a4 <_sbrk_r>
 8003bb8:	6030      	str	r0, [r6, #0]
 8003bba:	4621      	mov	r1, r4
 8003bbc:	4628      	mov	r0, r5
 8003bbe:	f001 fdf1 	bl	80057a4 <_sbrk_r>
 8003bc2:	1c43      	adds	r3, r0, #1
 8003bc4:	d103      	bne.n	8003bce <sbrk_aligned+0x26>
 8003bc6:	f04f 34ff 	mov.w	r4, #4294967295
 8003bca:	4620      	mov	r0, r4
 8003bcc:	bd70      	pop	{r4, r5, r6, pc}
 8003bce:	1cc4      	adds	r4, r0, #3
 8003bd0:	f024 0403 	bic.w	r4, r4, #3
 8003bd4:	42a0      	cmp	r0, r4
 8003bd6:	d0f8      	beq.n	8003bca <sbrk_aligned+0x22>
 8003bd8:	1a21      	subs	r1, r4, r0
 8003bda:	4628      	mov	r0, r5
 8003bdc:	f001 fde2 	bl	80057a4 <_sbrk_r>
 8003be0:	3001      	adds	r0, #1
 8003be2:	d1f2      	bne.n	8003bca <sbrk_aligned+0x22>
 8003be4:	e7ef      	b.n	8003bc6 <sbrk_aligned+0x1e>
 8003be6:	bf00      	nop
 8003be8:	2000033c 	.word	0x2000033c

08003bec <_malloc_r>:
 8003bec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003bf0:	1ccd      	adds	r5, r1, #3
 8003bf2:	f025 0503 	bic.w	r5, r5, #3
 8003bf6:	3508      	adds	r5, #8
 8003bf8:	2d0c      	cmp	r5, #12
 8003bfa:	bf38      	it	cc
 8003bfc:	250c      	movcc	r5, #12
 8003bfe:	2d00      	cmp	r5, #0
 8003c00:	4606      	mov	r6, r0
 8003c02:	db01      	blt.n	8003c08 <_malloc_r+0x1c>
 8003c04:	42a9      	cmp	r1, r5
 8003c06:	d904      	bls.n	8003c12 <_malloc_r+0x26>
 8003c08:	230c      	movs	r3, #12
 8003c0a:	6033      	str	r3, [r6, #0]
 8003c0c:	2000      	movs	r0, #0
 8003c0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003c12:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003ce8 <_malloc_r+0xfc>
 8003c16:	f000 f869 	bl	8003cec <__malloc_lock>
 8003c1a:	f8d8 3000 	ldr.w	r3, [r8]
 8003c1e:	461c      	mov	r4, r3
 8003c20:	bb44      	cbnz	r4, 8003c74 <_malloc_r+0x88>
 8003c22:	4629      	mov	r1, r5
 8003c24:	4630      	mov	r0, r6
 8003c26:	f7ff ffbf 	bl	8003ba8 <sbrk_aligned>
 8003c2a:	1c43      	adds	r3, r0, #1
 8003c2c:	4604      	mov	r4, r0
 8003c2e:	d158      	bne.n	8003ce2 <_malloc_r+0xf6>
 8003c30:	f8d8 4000 	ldr.w	r4, [r8]
 8003c34:	4627      	mov	r7, r4
 8003c36:	2f00      	cmp	r7, #0
 8003c38:	d143      	bne.n	8003cc2 <_malloc_r+0xd6>
 8003c3a:	2c00      	cmp	r4, #0
 8003c3c:	d04b      	beq.n	8003cd6 <_malloc_r+0xea>
 8003c3e:	6823      	ldr	r3, [r4, #0]
 8003c40:	4639      	mov	r1, r7
 8003c42:	4630      	mov	r0, r6
 8003c44:	eb04 0903 	add.w	r9, r4, r3
 8003c48:	f001 fdac 	bl	80057a4 <_sbrk_r>
 8003c4c:	4581      	cmp	r9, r0
 8003c4e:	d142      	bne.n	8003cd6 <_malloc_r+0xea>
 8003c50:	6821      	ldr	r1, [r4, #0]
 8003c52:	4630      	mov	r0, r6
 8003c54:	1a6d      	subs	r5, r5, r1
 8003c56:	4629      	mov	r1, r5
 8003c58:	f7ff ffa6 	bl	8003ba8 <sbrk_aligned>
 8003c5c:	3001      	adds	r0, #1
 8003c5e:	d03a      	beq.n	8003cd6 <_malloc_r+0xea>
 8003c60:	6823      	ldr	r3, [r4, #0]
 8003c62:	442b      	add	r3, r5
 8003c64:	6023      	str	r3, [r4, #0]
 8003c66:	f8d8 3000 	ldr.w	r3, [r8]
 8003c6a:	685a      	ldr	r2, [r3, #4]
 8003c6c:	bb62      	cbnz	r2, 8003cc8 <_malloc_r+0xdc>
 8003c6e:	f8c8 7000 	str.w	r7, [r8]
 8003c72:	e00f      	b.n	8003c94 <_malloc_r+0xa8>
 8003c74:	6822      	ldr	r2, [r4, #0]
 8003c76:	1b52      	subs	r2, r2, r5
 8003c78:	d420      	bmi.n	8003cbc <_malloc_r+0xd0>
 8003c7a:	2a0b      	cmp	r2, #11
 8003c7c:	d917      	bls.n	8003cae <_malloc_r+0xc2>
 8003c7e:	1961      	adds	r1, r4, r5
 8003c80:	42a3      	cmp	r3, r4
 8003c82:	6025      	str	r5, [r4, #0]
 8003c84:	bf18      	it	ne
 8003c86:	6059      	strne	r1, [r3, #4]
 8003c88:	6863      	ldr	r3, [r4, #4]
 8003c8a:	bf08      	it	eq
 8003c8c:	f8c8 1000 	streq.w	r1, [r8]
 8003c90:	5162      	str	r2, [r4, r5]
 8003c92:	604b      	str	r3, [r1, #4]
 8003c94:	4630      	mov	r0, r6
 8003c96:	f000 f82f 	bl	8003cf8 <__malloc_unlock>
 8003c9a:	f104 000b 	add.w	r0, r4, #11
 8003c9e:	1d23      	adds	r3, r4, #4
 8003ca0:	f020 0007 	bic.w	r0, r0, #7
 8003ca4:	1ac2      	subs	r2, r0, r3
 8003ca6:	bf1c      	itt	ne
 8003ca8:	1a1b      	subne	r3, r3, r0
 8003caa:	50a3      	strne	r3, [r4, r2]
 8003cac:	e7af      	b.n	8003c0e <_malloc_r+0x22>
 8003cae:	6862      	ldr	r2, [r4, #4]
 8003cb0:	42a3      	cmp	r3, r4
 8003cb2:	bf0c      	ite	eq
 8003cb4:	f8c8 2000 	streq.w	r2, [r8]
 8003cb8:	605a      	strne	r2, [r3, #4]
 8003cba:	e7eb      	b.n	8003c94 <_malloc_r+0xa8>
 8003cbc:	4623      	mov	r3, r4
 8003cbe:	6864      	ldr	r4, [r4, #4]
 8003cc0:	e7ae      	b.n	8003c20 <_malloc_r+0x34>
 8003cc2:	463c      	mov	r4, r7
 8003cc4:	687f      	ldr	r7, [r7, #4]
 8003cc6:	e7b6      	b.n	8003c36 <_malloc_r+0x4a>
 8003cc8:	461a      	mov	r2, r3
 8003cca:	685b      	ldr	r3, [r3, #4]
 8003ccc:	42a3      	cmp	r3, r4
 8003cce:	d1fb      	bne.n	8003cc8 <_malloc_r+0xdc>
 8003cd0:	2300      	movs	r3, #0
 8003cd2:	6053      	str	r3, [r2, #4]
 8003cd4:	e7de      	b.n	8003c94 <_malloc_r+0xa8>
 8003cd6:	230c      	movs	r3, #12
 8003cd8:	4630      	mov	r0, r6
 8003cda:	6033      	str	r3, [r6, #0]
 8003cdc:	f000 f80c 	bl	8003cf8 <__malloc_unlock>
 8003ce0:	e794      	b.n	8003c0c <_malloc_r+0x20>
 8003ce2:	6005      	str	r5, [r0, #0]
 8003ce4:	e7d6      	b.n	8003c94 <_malloc_r+0xa8>
 8003ce6:	bf00      	nop
 8003ce8:	20000340 	.word	0x20000340

08003cec <__malloc_lock>:
 8003cec:	4801      	ldr	r0, [pc, #4]	@ (8003cf4 <__malloc_lock+0x8>)
 8003cee:	f7ff b8a6 	b.w	8002e3e <__retarget_lock_acquire_recursive>
 8003cf2:	bf00      	nop
 8003cf4:	20000338 	.word	0x20000338

08003cf8 <__malloc_unlock>:
 8003cf8:	4801      	ldr	r0, [pc, #4]	@ (8003d00 <__malloc_unlock+0x8>)
 8003cfa:	f7ff b8a1 	b.w	8002e40 <__retarget_lock_release_recursive>
 8003cfe:	bf00      	nop
 8003d00:	20000338 	.word	0x20000338

08003d04 <_Balloc>:
 8003d04:	b570      	push	{r4, r5, r6, lr}
 8003d06:	69c6      	ldr	r6, [r0, #28]
 8003d08:	4604      	mov	r4, r0
 8003d0a:	460d      	mov	r5, r1
 8003d0c:	b976      	cbnz	r6, 8003d2c <_Balloc+0x28>
 8003d0e:	2010      	movs	r0, #16
 8003d10:	f7ff ff42 	bl	8003b98 <malloc>
 8003d14:	4602      	mov	r2, r0
 8003d16:	61e0      	str	r0, [r4, #28]
 8003d18:	b920      	cbnz	r0, 8003d24 <_Balloc+0x20>
 8003d1a:	216b      	movs	r1, #107	@ 0x6b
 8003d1c:	4b17      	ldr	r3, [pc, #92]	@ (8003d7c <_Balloc+0x78>)
 8003d1e:	4818      	ldr	r0, [pc, #96]	@ (8003d80 <_Balloc+0x7c>)
 8003d20:	f001 fd64 	bl	80057ec <__assert_func>
 8003d24:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003d28:	6006      	str	r6, [r0, #0]
 8003d2a:	60c6      	str	r6, [r0, #12]
 8003d2c:	69e6      	ldr	r6, [r4, #28]
 8003d2e:	68f3      	ldr	r3, [r6, #12]
 8003d30:	b183      	cbz	r3, 8003d54 <_Balloc+0x50>
 8003d32:	69e3      	ldr	r3, [r4, #28]
 8003d34:	68db      	ldr	r3, [r3, #12]
 8003d36:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003d3a:	b9b8      	cbnz	r0, 8003d6c <_Balloc+0x68>
 8003d3c:	2101      	movs	r1, #1
 8003d3e:	fa01 f605 	lsl.w	r6, r1, r5
 8003d42:	1d72      	adds	r2, r6, #5
 8003d44:	4620      	mov	r0, r4
 8003d46:	0092      	lsls	r2, r2, #2
 8003d48:	f001 fd6e 	bl	8005828 <_calloc_r>
 8003d4c:	b160      	cbz	r0, 8003d68 <_Balloc+0x64>
 8003d4e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003d52:	e00e      	b.n	8003d72 <_Balloc+0x6e>
 8003d54:	2221      	movs	r2, #33	@ 0x21
 8003d56:	2104      	movs	r1, #4
 8003d58:	4620      	mov	r0, r4
 8003d5a:	f001 fd65 	bl	8005828 <_calloc_r>
 8003d5e:	69e3      	ldr	r3, [r4, #28]
 8003d60:	60f0      	str	r0, [r6, #12]
 8003d62:	68db      	ldr	r3, [r3, #12]
 8003d64:	2b00      	cmp	r3, #0
 8003d66:	d1e4      	bne.n	8003d32 <_Balloc+0x2e>
 8003d68:	2000      	movs	r0, #0
 8003d6a:	bd70      	pop	{r4, r5, r6, pc}
 8003d6c:	6802      	ldr	r2, [r0, #0]
 8003d6e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003d72:	2300      	movs	r3, #0
 8003d74:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003d78:	e7f7      	b.n	8003d6a <_Balloc+0x66>
 8003d7a:	bf00      	nop
 8003d7c:	08006558 	.word	0x08006558
 8003d80:	080065d8 	.word	0x080065d8

08003d84 <_Bfree>:
 8003d84:	b570      	push	{r4, r5, r6, lr}
 8003d86:	69c6      	ldr	r6, [r0, #28]
 8003d88:	4605      	mov	r5, r0
 8003d8a:	460c      	mov	r4, r1
 8003d8c:	b976      	cbnz	r6, 8003dac <_Bfree+0x28>
 8003d8e:	2010      	movs	r0, #16
 8003d90:	f7ff ff02 	bl	8003b98 <malloc>
 8003d94:	4602      	mov	r2, r0
 8003d96:	61e8      	str	r0, [r5, #28]
 8003d98:	b920      	cbnz	r0, 8003da4 <_Bfree+0x20>
 8003d9a:	218f      	movs	r1, #143	@ 0x8f
 8003d9c:	4b08      	ldr	r3, [pc, #32]	@ (8003dc0 <_Bfree+0x3c>)
 8003d9e:	4809      	ldr	r0, [pc, #36]	@ (8003dc4 <_Bfree+0x40>)
 8003da0:	f001 fd24 	bl	80057ec <__assert_func>
 8003da4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003da8:	6006      	str	r6, [r0, #0]
 8003daa:	60c6      	str	r6, [r0, #12]
 8003dac:	b13c      	cbz	r4, 8003dbe <_Bfree+0x3a>
 8003dae:	69eb      	ldr	r3, [r5, #28]
 8003db0:	6862      	ldr	r2, [r4, #4]
 8003db2:	68db      	ldr	r3, [r3, #12]
 8003db4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003db8:	6021      	str	r1, [r4, #0]
 8003dba:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003dbe:	bd70      	pop	{r4, r5, r6, pc}
 8003dc0:	08006558 	.word	0x08006558
 8003dc4:	080065d8 	.word	0x080065d8

08003dc8 <__multadd>:
 8003dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003dcc:	4607      	mov	r7, r0
 8003dce:	460c      	mov	r4, r1
 8003dd0:	461e      	mov	r6, r3
 8003dd2:	2000      	movs	r0, #0
 8003dd4:	690d      	ldr	r5, [r1, #16]
 8003dd6:	f101 0c14 	add.w	ip, r1, #20
 8003dda:	f8dc 3000 	ldr.w	r3, [ip]
 8003dde:	3001      	adds	r0, #1
 8003de0:	b299      	uxth	r1, r3
 8003de2:	fb02 6101 	mla	r1, r2, r1, r6
 8003de6:	0c1e      	lsrs	r6, r3, #16
 8003de8:	0c0b      	lsrs	r3, r1, #16
 8003dea:	fb02 3306 	mla	r3, r2, r6, r3
 8003dee:	b289      	uxth	r1, r1
 8003df0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003df4:	4285      	cmp	r5, r0
 8003df6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003dfa:	f84c 1b04 	str.w	r1, [ip], #4
 8003dfe:	dcec      	bgt.n	8003dda <__multadd+0x12>
 8003e00:	b30e      	cbz	r6, 8003e46 <__multadd+0x7e>
 8003e02:	68a3      	ldr	r3, [r4, #8]
 8003e04:	42ab      	cmp	r3, r5
 8003e06:	dc19      	bgt.n	8003e3c <__multadd+0x74>
 8003e08:	6861      	ldr	r1, [r4, #4]
 8003e0a:	4638      	mov	r0, r7
 8003e0c:	3101      	adds	r1, #1
 8003e0e:	f7ff ff79 	bl	8003d04 <_Balloc>
 8003e12:	4680      	mov	r8, r0
 8003e14:	b928      	cbnz	r0, 8003e22 <__multadd+0x5a>
 8003e16:	4602      	mov	r2, r0
 8003e18:	21ba      	movs	r1, #186	@ 0xba
 8003e1a:	4b0c      	ldr	r3, [pc, #48]	@ (8003e4c <__multadd+0x84>)
 8003e1c:	480c      	ldr	r0, [pc, #48]	@ (8003e50 <__multadd+0x88>)
 8003e1e:	f001 fce5 	bl	80057ec <__assert_func>
 8003e22:	6922      	ldr	r2, [r4, #16]
 8003e24:	f104 010c 	add.w	r1, r4, #12
 8003e28:	3202      	adds	r2, #2
 8003e2a:	0092      	lsls	r2, r2, #2
 8003e2c:	300c      	adds	r0, #12
 8003e2e:	f001 fcc9 	bl	80057c4 <memcpy>
 8003e32:	4621      	mov	r1, r4
 8003e34:	4638      	mov	r0, r7
 8003e36:	f7ff ffa5 	bl	8003d84 <_Bfree>
 8003e3a:	4644      	mov	r4, r8
 8003e3c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003e40:	3501      	adds	r5, #1
 8003e42:	615e      	str	r6, [r3, #20]
 8003e44:	6125      	str	r5, [r4, #16]
 8003e46:	4620      	mov	r0, r4
 8003e48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003e4c:	080065c7 	.word	0x080065c7
 8003e50:	080065d8 	.word	0x080065d8

08003e54 <__s2b>:
 8003e54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003e58:	4615      	mov	r5, r2
 8003e5a:	2209      	movs	r2, #9
 8003e5c:	461f      	mov	r7, r3
 8003e5e:	3308      	adds	r3, #8
 8003e60:	460c      	mov	r4, r1
 8003e62:	fb93 f3f2 	sdiv	r3, r3, r2
 8003e66:	4606      	mov	r6, r0
 8003e68:	2201      	movs	r2, #1
 8003e6a:	2100      	movs	r1, #0
 8003e6c:	429a      	cmp	r2, r3
 8003e6e:	db09      	blt.n	8003e84 <__s2b+0x30>
 8003e70:	4630      	mov	r0, r6
 8003e72:	f7ff ff47 	bl	8003d04 <_Balloc>
 8003e76:	b940      	cbnz	r0, 8003e8a <__s2b+0x36>
 8003e78:	4602      	mov	r2, r0
 8003e7a:	21d3      	movs	r1, #211	@ 0xd3
 8003e7c:	4b18      	ldr	r3, [pc, #96]	@ (8003ee0 <__s2b+0x8c>)
 8003e7e:	4819      	ldr	r0, [pc, #100]	@ (8003ee4 <__s2b+0x90>)
 8003e80:	f001 fcb4 	bl	80057ec <__assert_func>
 8003e84:	0052      	lsls	r2, r2, #1
 8003e86:	3101      	adds	r1, #1
 8003e88:	e7f0      	b.n	8003e6c <__s2b+0x18>
 8003e8a:	9b08      	ldr	r3, [sp, #32]
 8003e8c:	2d09      	cmp	r5, #9
 8003e8e:	6143      	str	r3, [r0, #20]
 8003e90:	f04f 0301 	mov.w	r3, #1
 8003e94:	6103      	str	r3, [r0, #16]
 8003e96:	dd16      	ble.n	8003ec6 <__s2b+0x72>
 8003e98:	f104 0909 	add.w	r9, r4, #9
 8003e9c:	46c8      	mov	r8, r9
 8003e9e:	442c      	add	r4, r5
 8003ea0:	f818 3b01 	ldrb.w	r3, [r8], #1
 8003ea4:	4601      	mov	r1, r0
 8003ea6:	220a      	movs	r2, #10
 8003ea8:	4630      	mov	r0, r6
 8003eaa:	3b30      	subs	r3, #48	@ 0x30
 8003eac:	f7ff ff8c 	bl	8003dc8 <__multadd>
 8003eb0:	45a0      	cmp	r8, r4
 8003eb2:	d1f5      	bne.n	8003ea0 <__s2b+0x4c>
 8003eb4:	f1a5 0408 	sub.w	r4, r5, #8
 8003eb8:	444c      	add	r4, r9
 8003eba:	1b2d      	subs	r5, r5, r4
 8003ebc:	1963      	adds	r3, r4, r5
 8003ebe:	42bb      	cmp	r3, r7
 8003ec0:	db04      	blt.n	8003ecc <__s2b+0x78>
 8003ec2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003ec6:	2509      	movs	r5, #9
 8003ec8:	340a      	adds	r4, #10
 8003eca:	e7f6      	b.n	8003eba <__s2b+0x66>
 8003ecc:	f814 3b01 	ldrb.w	r3, [r4], #1
 8003ed0:	4601      	mov	r1, r0
 8003ed2:	220a      	movs	r2, #10
 8003ed4:	4630      	mov	r0, r6
 8003ed6:	3b30      	subs	r3, #48	@ 0x30
 8003ed8:	f7ff ff76 	bl	8003dc8 <__multadd>
 8003edc:	e7ee      	b.n	8003ebc <__s2b+0x68>
 8003ede:	bf00      	nop
 8003ee0:	080065c7 	.word	0x080065c7
 8003ee4:	080065d8 	.word	0x080065d8

08003ee8 <__hi0bits>:
 8003ee8:	4603      	mov	r3, r0
 8003eea:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003eee:	bf3a      	itte	cc
 8003ef0:	0403      	lslcc	r3, r0, #16
 8003ef2:	2010      	movcc	r0, #16
 8003ef4:	2000      	movcs	r0, #0
 8003ef6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003efa:	bf3c      	itt	cc
 8003efc:	021b      	lslcc	r3, r3, #8
 8003efe:	3008      	addcc	r0, #8
 8003f00:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003f04:	bf3c      	itt	cc
 8003f06:	011b      	lslcc	r3, r3, #4
 8003f08:	3004      	addcc	r0, #4
 8003f0a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003f0e:	bf3c      	itt	cc
 8003f10:	009b      	lslcc	r3, r3, #2
 8003f12:	3002      	addcc	r0, #2
 8003f14:	2b00      	cmp	r3, #0
 8003f16:	db05      	blt.n	8003f24 <__hi0bits+0x3c>
 8003f18:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003f1c:	f100 0001 	add.w	r0, r0, #1
 8003f20:	bf08      	it	eq
 8003f22:	2020      	moveq	r0, #32
 8003f24:	4770      	bx	lr

08003f26 <__lo0bits>:
 8003f26:	6803      	ldr	r3, [r0, #0]
 8003f28:	4602      	mov	r2, r0
 8003f2a:	f013 0007 	ands.w	r0, r3, #7
 8003f2e:	d00b      	beq.n	8003f48 <__lo0bits+0x22>
 8003f30:	07d9      	lsls	r1, r3, #31
 8003f32:	d421      	bmi.n	8003f78 <__lo0bits+0x52>
 8003f34:	0798      	lsls	r0, r3, #30
 8003f36:	bf49      	itett	mi
 8003f38:	085b      	lsrmi	r3, r3, #1
 8003f3a:	089b      	lsrpl	r3, r3, #2
 8003f3c:	2001      	movmi	r0, #1
 8003f3e:	6013      	strmi	r3, [r2, #0]
 8003f40:	bf5c      	itt	pl
 8003f42:	2002      	movpl	r0, #2
 8003f44:	6013      	strpl	r3, [r2, #0]
 8003f46:	4770      	bx	lr
 8003f48:	b299      	uxth	r1, r3
 8003f4a:	b909      	cbnz	r1, 8003f50 <__lo0bits+0x2a>
 8003f4c:	2010      	movs	r0, #16
 8003f4e:	0c1b      	lsrs	r3, r3, #16
 8003f50:	b2d9      	uxtb	r1, r3
 8003f52:	b909      	cbnz	r1, 8003f58 <__lo0bits+0x32>
 8003f54:	3008      	adds	r0, #8
 8003f56:	0a1b      	lsrs	r3, r3, #8
 8003f58:	0719      	lsls	r1, r3, #28
 8003f5a:	bf04      	itt	eq
 8003f5c:	091b      	lsreq	r3, r3, #4
 8003f5e:	3004      	addeq	r0, #4
 8003f60:	0799      	lsls	r1, r3, #30
 8003f62:	bf04      	itt	eq
 8003f64:	089b      	lsreq	r3, r3, #2
 8003f66:	3002      	addeq	r0, #2
 8003f68:	07d9      	lsls	r1, r3, #31
 8003f6a:	d403      	bmi.n	8003f74 <__lo0bits+0x4e>
 8003f6c:	085b      	lsrs	r3, r3, #1
 8003f6e:	f100 0001 	add.w	r0, r0, #1
 8003f72:	d003      	beq.n	8003f7c <__lo0bits+0x56>
 8003f74:	6013      	str	r3, [r2, #0]
 8003f76:	4770      	bx	lr
 8003f78:	2000      	movs	r0, #0
 8003f7a:	4770      	bx	lr
 8003f7c:	2020      	movs	r0, #32
 8003f7e:	4770      	bx	lr

08003f80 <__i2b>:
 8003f80:	b510      	push	{r4, lr}
 8003f82:	460c      	mov	r4, r1
 8003f84:	2101      	movs	r1, #1
 8003f86:	f7ff febd 	bl	8003d04 <_Balloc>
 8003f8a:	4602      	mov	r2, r0
 8003f8c:	b928      	cbnz	r0, 8003f9a <__i2b+0x1a>
 8003f8e:	f240 1145 	movw	r1, #325	@ 0x145
 8003f92:	4b04      	ldr	r3, [pc, #16]	@ (8003fa4 <__i2b+0x24>)
 8003f94:	4804      	ldr	r0, [pc, #16]	@ (8003fa8 <__i2b+0x28>)
 8003f96:	f001 fc29 	bl	80057ec <__assert_func>
 8003f9a:	2301      	movs	r3, #1
 8003f9c:	6144      	str	r4, [r0, #20]
 8003f9e:	6103      	str	r3, [r0, #16]
 8003fa0:	bd10      	pop	{r4, pc}
 8003fa2:	bf00      	nop
 8003fa4:	080065c7 	.word	0x080065c7
 8003fa8:	080065d8 	.word	0x080065d8

08003fac <__multiply>:
 8003fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003fb0:	4614      	mov	r4, r2
 8003fb2:	690a      	ldr	r2, [r1, #16]
 8003fb4:	6923      	ldr	r3, [r4, #16]
 8003fb6:	460f      	mov	r7, r1
 8003fb8:	429a      	cmp	r2, r3
 8003fba:	bfa2      	ittt	ge
 8003fbc:	4623      	movge	r3, r4
 8003fbe:	460c      	movge	r4, r1
 8003fc0:	461f      	movge	r7, r3
 8003fc2:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003fc6:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003fca:	68a3      	ldr	r3, [r4, #8]
 8003fcc:	6861      	ldr	r1, [r4, #4]
 8003fce:	eb0a 0609 	add.w	r6, sl, r9
 8003fd2:	42b3      	cmp	r3, r6
 8003fd4:	b085      	sub	sp, #20
 8003fd6:	bfb8      	it	lt
 8003fd8:	3101      	addlt	r1, #1
 8003fda:	f7ff fe93 	bl	8003d04 <_Balloc>
 8003fde:	b930      	cbnz	r0, 8003fee <__multiply+0x42>
 8003fe0:	4602      	mov	r2, r0
 8003fe2:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003fe6:	4b43      	ldr	r3, [pc, #268]	@ (80040f4 <__multiply+0x148>)
 8003fe8:	4843      	ldr	r0, [pc, #268]	@ (80040f8 <__multiply+0x14c>)
 8003fea:	f001 fbff 	bl	80057ec <__assert_func>
 8003fee:	f100 0514 	add.w	r5, r0, #20
 8003ff2:	462b      	mov	r3, r5
 8003ff4:	2200      	movs	r2, #0
 8003ff6:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003ffa:	4543      	cmp	r3, r8
 8003ffc:	d321      	bcc.n	8004042 <__multiply+0x96>
 8003ffe:	f107 0114 	add.w	r1, r7, #20
 8004002:	f104 0214 	add.w	r2, r4, #20
 8004006:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 800400a:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800400e:	9302      	str	r3, [sp, #8]
 8004010:	1b13      	subs	r3, r2, r4
 8004012:	3b15      	subs	r3, #21
 8004014:	f023 0303 	bic.w	r3, r3, #3
 8004018:	3304      	adds	r3, #4
 800401a:	f104 0715 	add.w	r7, r4, #21
 800401e:	42ba      	cmp	r2, r7
 8004020:	bf38      	it	cc
 8004022:	2304      	movcc	r3, #4
 8004024:	9301      	str	r3, [sp, #4]
 8004026:	9b02      	ldr	r3, [sp, #8]
 8004028:	9103      	str	r1, [sp, #12]
 800402a:	428b      	cmp	r3, r1
 800402c:	d80c      	bhi.n	8004048 <__multiply+0x9c>
 800402e:	2e00      	cmp	r6, #0
 8004030:	dd03      	ble.n	800403a <__multiply+0x8e>
 8004032:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8004036:	2b00      	cmp	r3, #0
 8004038:	d05a      	beq.n	80040f0 <__multiply+0x144>
 800403a:	6106      	str	r6, [r0, #16]
 800403c:	b005      	add	sp, #20
 800403e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004042:	f843 2b04 	str.w	r2, [r3], #4
 8004046:	e7d8      	b.n	8003ffa <__multiply+0x4e>
 8004048:	f8b1 a000 	ldrh.w	sl, [r1]
 800404c:	f1ba 0f00 	cmp.w	sl, #0
 8004050:	d023      	beq.n	800409a <__multiply+0xee>
 8004052:	46a9      	mov	r9, r5
 8004054:	f04f 0c00 	mov.w	ip, #0
 8004058:	f104 0e14 	add.w	lr, r4, #20
 800405c:	f85e 7b04 	ldr.w	r7, [lr], #4
 8004060:	f8d9 3000 	ldr.w	r3, [r9]
 8004064:	fa1f fb87 	uxth.w	fp, r7
 8004068:	b29b      	uxth	r3, r3
 800406a:	fb0a 330b 	mla	r3, sl, fp, r3
 800406e:	4463      	add	r3, ip
 8004070:	f8d9 c000 	ldr.w	ip, [r9]
 8004074:	0c3f      	lsrs	r7, r7, #16
 8004076:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800407a:	fb0a c707 	mla	r7, sl, r7, ip
 800407e:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8004082:	b29b      	uxth	r3, r3
 8004084:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8004088:	4572      	cmp	r2, lr
 800408a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800408e:	f849 3b04 	str.w	r3, [r9], #4
 8004092:	d8e3      	bhi.n	800405c <__multiply+0xb0>
 8004094:	9b01      	ldr	r3, [sp, #4]
 8004096:	f845 c003 	str.w	ip, [r5, r3]
 800409a:	9b03      	ldr	r3, [sp, #12]
 800409c:	3104      	adds	r1, #4
 800409e:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80040a2:	f1b9 0f00 	cmp.w	r9, #0
 80040a6:	d021      	beq.n	80040ec <__multiply+0x140>
 80040a8:	46ae      	mov	lr, r5
 80040aa:	f04f 0a00 	mov.w	sl, #0
 80040ae:	682b      	ldr	r3, [r5, #0]
 80040b0:	f104 0c14 	add.w	ip, r4, #20
 80040b4:	f8bc b000 	ldrh.w	fp, [ip]
 80040b8:	f8be 7002 	ldrh.w	r7, [lr, #2]
 80040bc:	b29b      	uxth	r3, r3
 80040be:	fb09 770b 	mla	r7, r9, fp, r7
 80040c2:	4457      	add	r7, sl
 80040c4:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80040c8:	f84e 3b04 	str.w	r3, [lr], #4
 80040cc:	f85c 3b04 	ldr.w	r3, [ip], #4
 80040d0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80040d4:	f8be 3000 	ldrh.w	r3, [lr]
 80040d8:	4562      	cmp	r2, ip
 80040da:	fb09 330a 	mla	r3, r9, sl, r3
 80040de:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 80040e2:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80040e6:	d8e5      	bhi.n	80040b4 <__multiply+0x108>
 80040e8:	9f01      	ldr	r7, [sp, #4]
 80040ea:	51eb      	str	r3, [r5, r7]
 80040ec:	3504      	adds	r5, #4
 80040ee:	e79a      	b.n	8004026 <__multiply+0x7a>
 80040f0:	3e01      	subs	r6, #1
 80040f2:	e79c      	b.n	800402e <__multiply+0x82>
 80040f4:	080065c7 	.word	0x080065c7
 80040f8:	080065d8 	.word	0x080065d8

080040fc <__pow5mult>:
 80040fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004100:	4615      	mov	r5, r2
 8004102:	f012 0203 	ands.w	r2, r2, #3
 8004106:	4607      	mov	r7, r0
 8004108:	460e      	mov	r6, r1
 800410a:	d007      	beq.n	800411c <__pow5mult+0x20>
 800410c:	4c25      	ldr	r4, [pc, #148]	@ (80041a4 <__pow5mult+0xa8>)
 800410e:	3a01      	subs	r2, #1
 8004110:	2300      	movs	r3, #0
 8004112:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004116:	f7ff fe57 	bl	8003dc8 <__multadd>
 800411a:	4606      	mov	r6, r0
 800411c:	10ad      	asrs	r5, r5, #2
 800411e:	d03d      	beq.n	800419c <__pow5mult+0xa0>
 8004120:	69fc      	ldr	r4, [r7, #28]
 8004122:	b97c      	cbnz	r4, 8004144 <__pow5mult+0x48>
 8004124:	2010      	movs	r0, #16
 8004126:	f7ff fd37 	bl	8003b98 <malloc>
 800412a:	4602      	mov	r2, r0
 800412c:	61f8      	str	r0, [r7, #28]
 800412e:	b928      	cbnz	r0, 800413c <__pow5mult+0x40>
 8004130:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8004134:	4b1c      	ldr	r3, [pc, #112]	@ (80041a8 <__pow5mult+0xac>)
 8004136:	481d      	ldr	r0, [pc, #116]	@ (80041ac <__pow5mult+0xb0>)
 8004138:	f001 fb58 	bl	80057ec <__assert_func>
 800413c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004140:	6004      	str	r4, [r0, #0]
 8004142:	60c4      	str	r4, [r0, #12]
 8004144:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8004148:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800414c:	b94c      	cbnz	r4, 8004162 <__pow5mult+0x66>
 800414e:	f240 2171 	movw	r1, #625	@ 0x271
 8004152:	4638      	mov	r0, r7
 8004154:	f7ff ff14 	bl	8003f80 <__i2b>
 8004158:	2300      	movs	r3, #0
 800415a:	4604      	mov	r4, r0
 800415c:	f8c8 0008 	str.w	r0, [r8, #8]
 8004160:	6003      	str	r3, [r0, #0]
 8004162:	f04f 0900 	mov.w	r9, #0
 8004166:	07eb      	lsls	r3, r5, #31
 8004168:	d50a      	bpl.n	8004180 <__pow5mult+0x84>
 800416a:	4631      	mov	r1, r6
 800416c:	4622      	mov	r2, r4
 800416e:	4638      	mov	r0, r7
 8004170:	f7ff ff1c 	bl	8003fac <__multiply>
 8004174:	4680      	mov	r8, r0
 8004176:	4631      	mov	r1, r6
 8004178:	4638      	mov	r0, r7
 800417a:	f7ff fe03 	bl	8003d84 <_Bfree>
 800417e:	4646      	mov	r6, r8
 8004180:	106d      	asrs	r5, r5, #1
 8004182:	d00b      	beq.n	800419c <__pow5mult+0xa0>
 8004184:	6820      	ldr	r0, [r4, #0]
 8004186:	b938      	cbnz	r0, 8004198 <__pow5mult+0x9c>
 8004188:	4622      	mov	r2, r4
 800418a:	4621      	mov	r1, r4
 800418c:	4638      	mov	r0, r7
 800418e:	f7ff ff0d 	bl	8003fac <__multiply>
 8004192:	6020      	str	r0, [r4, #0]
 8004194:	f8c0 9000 	str.w	r9, [r0]
 8004198:	4604      	mov	r4, r0
 800419a:	e7e4      	b.n	8004166 <__pow5mult+0x6a>
 800419c:	4630      	mov	r0, r6
 800419e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80041a2:	bf00      	nop
 80041a4:	08006634 	.word	0x08006634
 80041a8:	08006558 	.word	0x08006558
 80041ac:	080065d8 	.word	0x080065d8

080041b0 <__lshift>:
 80041b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80041b4:	460c      	mov	r4, r1
 80041b6:	4607      	mov	r7, r0
 80041b8:	4691      	mov	r9, r2
 80041ba:	6923      	ldr	r3, [r4, #16]
 80041bc:	6849      	ldr	r1, [r1, #4]
 80041be:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80041c2:	68a3      	ldr	r3, [r4, #8]
 80041c4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80041c8:	f108 0601 	add.w	r6, r8, #1
 80041cc:	42b3      	cmp	r3, r6
 80041ce:	db0b      	blt.n	80041e8 <__lshift+0x38>
 80041d0:	4638      	mov	r0, r7
 80041d2:	f7ff fd97 	bl	8003d04 <_Balloc>
 80041d6:	4605      	mov	r5, r0
 80041d8:	b948      	cbnz	r0, 80041ee <__lshift+0x3e>
 80041da:	4602      	mov	r2, r0
 80041dc:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80041e0:	4b27      	ldr	r3, [pc, #156]	@ (8004280 <__lshift+0xd0>)
 80041e2:	4828      	ldr	r0, [pc, #160]	@ (8004284 <__lshift+0xd4>)
 80041e4:	f001 fb02 	bl	80057ec <__assert_func>
 80041e8:	3101      	adds	r1, #1
 80041ea:	005b      	lsls	r3, r3, #1
 80041ec:	e7ee      	b.n	80041cc <__lshift+0x1c>
 80041ee:	2300      	movs	r3, #0
 80041f0:	f100 0114 	add.w	r1, r0, #20
 80041f4:	f100 0210 	add.w	r2, r0, #16
 80041f8:	4618      	mov	r0, r3
 80041fa:	4553      	cmp	r3, sl
 80041fc:	db33      	blt.n	8004266 <__lshift+0xb6>
 80041fe:	6920      	ldr	r0, [r4, #16]
 8004200:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004204:	f104 0314 	add.w	r3, r4, #20
 8004208:	f019 091f 	ands.w	r9, r9, #31
 800420c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004210:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8004214:	d02b      	beq.n	800426e <__lshift+0xbe>
 8004216:	468a      	mov	sl, r1
 8004218:	2200      	movs	r2, #0
 800421a:	f1c9 0e20 	rsb	lr, r9, #32
 800421e:	6818      	ldr	r0, [r3, #0]
 8004220:	fa00 f009 	lsl.w	r0, r0, r9
 8004224:	4310      	orrs	r0, r2
 8004226:	f84a 0b04 	str.w	r0, [sl], #4
 800422a:	f853 2b04 	ldr.w	r2, [r3], #4
 800422e:	459c      	cmp	ip, r3
 8004230:	fa22 f20e 	lsr.w	r2, r2, lr
 8004234:	d8f3      	bhi.n	800421e <__lshift+0x6e>
 8004236:	ebac 0304 	sub.w	r3, ip, r4
 800423a:	3b15      	subs	r3, #21
 800423c:	f023 0303 	bic.w	r3, r3, #3
 8004240:	3304      	adds	r3, #4
 8004242:	f104 0015 	add.w	r0, r4, #21
 8004246:	4584      	cmp	ip, r0
 8004248:	bf38      	it	cc
 800424a:	2304      	movcc	r3, #4
 800424c:	50ca      	str	r2, [r1, r3]
 800424e:	b10a      	cbz	r2, 8004254 <__lshift+0xa4>
 8004250:	f108 0602 	add.w	r6, r8, #2
 8004254:	3e01      	subs	r6, #1
 8004256:	4638      	mov	r0, r7
 8004258:	4621      	mov	r1, r4
 800425a:	612e      	str	r6, [r5, #16]
 800425c:	f7ff fd92 	bl	8003d84 <_Bfree>
 8004260:	4628      	mov	r0, r5
 8004262:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004266:	f842 0f04 	str.w	r0, [r2, #4]!
 800426a:	3301      	adds	r3, #1
 800426c:	e7c5      	b.n	80041fa <__lshift+0x4a>
 800426e:	3904      	subs	r1, #4
 8004270:	f853 2b04 	ldr.w	r2, [r3], #4
 8004274:	459c      	cmp	ip, r3
 8004276:	f841 2f04 	str.w	r2, [r1, #4]!
 800427a:	d8f9      	bhi.n	8004270 <__lshift+0xc0>
 800427c:	e7ea      	b.n	8004254 <__lshift+0xa4>
 800427e:	bf00      	nop
 8004280:	080065c7 	.word	0x080065c7
 8004284:	080065d8 	.word	0x080065d8

08004288 <__mcmp>:
 8004288:	4603      	mov	r3, r0
 800428a:	690a      	ldr	r2, [r1, #16]
 800428c:	6900      	ldr	r0, [r0, #16]
 800428e:	b530      	push	{r4, r5, lr}
 8004290:	1a80      	subs	r0, r0, r2
 8004292:	d10e      	bne.n	80042b2 <__mcmp+0x2a>
 8004294:	3314      	adds	r3, #20
 8004296:	3114      	adds	r1, #20
 8004298:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800429c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80042a0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80042a4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80042a8:	4295      	cmp	r5, r2
 80042aa:	d003      	beq.n	80042b4 <__mcmp+0x2c>
 80042ac:	d205      	bcs.n	80042ba <__mcmp+0x32>
 80042ae:	f04f 30ff 	mov.w	r0, #4294967295
 80042b2:	bd30      	pop	{r4, r5, pc}
 80042b4:	42a3      	cmp	r3, r4
 80042b6:	d3f3      	bcc.n	80042a0 <__mcmp+0x18>
 80042b8:	e7fb      	b.n	80042b2 <__mcmp+0x2a>
 80042ba:	2001      	movs	r0, #1
 80042bc:	e7f9      	b.n	80042b2 <__mcmp+0x2a>
	...

080042c0 <__mdiff>:
 80042c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80042c4:	4689      	mov	r9, r1
 80042c6:	4606      	mov	r6, r0
 80042c8:	4611      	mov	r1, r2
 80042ca:	4648      	mov	r0, r9
 80042cc:	4614      	mov	r4, r2
 80042ce:	f7ff ffdb 	bl	8004288 <__mcmp>
 80042d2:	1e05      	subs	r5, r0, #0
 80042d4:	d112      	bne.n	80042fc <__mdiff+0x3c>
 80042d6:	4629      	mov	r1, r5
 80042d8:	4630      	mov	r0, r6
 80042da:	f7ff fd13 	bl	8003d04 <_Balloc>
 80042de:	4602      	mov	r2, r0
 80042e0:	b928      	cbnz	r0, 80042ee <__mdiff+0x2e>
 80042e2:	f240 2137 	movw	r1, #567	@ 0x237
 80042e6:	4b3e      	ldr	r3, [pc, #248]	@ (80043e0 <__mdiff+0x120>)
 80042e8:	483e      	ldr	r0, [pc, #248]	@ (80043e4 <__mdiff+0x124>)
 80042ea:	f001 fa7f 	bl	80057ec <__assert_func>
 80042ee:	2301      	movs	r3, #1
 80042f0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80042f4:	4610      	mov	r0, r2
 80042f6:	b003      	add	sp, #12
 80042f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042fc:	bfbc      	itt	lt
 80042fe:	464b      	movlt	r3, r9
 8004300:	46a1      	movlt	r9, r4
 8004302:	4630      	mov	r0, r6
 8004304:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8004308:	bfba      	itte	lt
 800430a:	461c      	movlt	r4, r3
 800430c:	2501      	movlt	r5, #1
 800430e:	2500      	movge	r5, #0
 8004310:	f7ff fcf8 	bl	8003d04 <_Balloc>
 8004314:	4602      	mov	r2, r0
 8004316:	b918      	cbnz	r0, 8004320 <__mdiff+0x60>
 8004318:	f240 2145 	movw	r1, #581	@ 0x245
 800431c:	4b30      	ldr	r3, [pc, #192]	@ (80043e0 <__mdiff+0x120>)
 800431e:	e7e3      	b.n	80042e8 <__mdiff+0x28>
 8004320:	f100 0b14 	add.w	fp, r0, #20
 8004324:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8004328:	f109 0310 	add.w	r3, r9, #16
 800432c:	60c5      	str	r5, [r0, #12]
 800432e:	f04f 0c00 	mov.w	ip, #0
 8004332:	f109 0514 	add.w	r5, r9, #20
 8004336:	46d9      	mov	r9, fp
 8004338:	6926      	ldr	r6, [r4, #16]
 800433a:	f104 0e14 	add.w	lr, r4, #20
 800433e:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8004342:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8004346:	9301      	str	r3, [sp, #4]
 8004348:	9b01      	ldr	r3, [sp, #4]
 800434a:	f85e 0b04 	ldr.w	r0, [lr], #4
 800434e:	f853 af04 	ldr.w	sl, [r3, #4]!
 8004352:	b281      	uxth	r1, r0
 8004354:	9301      	str	r3, [sp, #4]
 8004356:	fa1f f38a 	uxth.w	r3, sl
 800435a:	1a5b      	subs	r3, r3, r1
 800435c:	0c00      	lsrs	r0, r0, #16
 800435e:	4463      	add	r3, ip
 8004360:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8004364:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8004368:	b29b      	uxth	r3, r3
 800436a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800436e:	4576      	cmp	r6, lr
 8004370:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004374:	f849 3b04 	str.w	r3, [r9], #4
 8004378:	d8e6      	bhi.n	8004348 <__mdiff+0x88>
 800437a:	1b33      	subs	r3, r6, r4
 800437c:	3b15      	subs	r3, #21
 800437e:	f023 0303 	bic.w	r3, r3, #3
 8004382:	3415      	adds	r4, #21
 8004384:	3304      	adds	r3, #4
 8004386:	42a6      	cmp	r6, r4
 8004388:	bf38      	it	cc
 800438a:	2304      	movcc	r3, #4
 800438c:	441d      	add	r5, r3
 800438e:	445b      	add	r3, fp
 8004390:	461e      	mov	r6, r3
 8004392:	462c      	mov	r4, r5
 8004394:	4544      	cmp	r4, r8
 8004396:	d30e      	bcc.n	80043b6 <__mdiff+0xf6>
 8004398:	f108 0103 	add.w	r1, r8, #3
 800439c:	1b49      	subs	r1, r1, r5
 800439e:	f021 0103 	bic.w	r1, r1, #3
 80043a2:	3d03      	subs	r5, #3
 80043a4:	45a8      	cmp	r8, r5
 80043a6:	bf38      	it	cc
 80043a8:	2100      	movcc	r1, #0
 80043aa:	440b      	add	r3, r1
 80043ac:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80043b0:	b199      	cbz	r1, 80043da <__mdiff+0x11a>
 80043b2:	6117      	str	r7, [r2, #16]
 80043b4:	e79e      	b.n	80042f4 <__mdiff+0x34>
 80043b6:	46e6      	mov	lr, ip
 80043b8:	f854 1b04 	ldr.w	r1, [r4], #4
 80043bc:	fa1f fc81 	uxth.w	ip, r1
 80043c0:	44f4      	add	ip, lr
 80043c2:	0c08      	lsrs	r0, r1, #16
 80043c4:	4471      	add	r1, lr
 80043c6:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80043ca:	b289      	uxth	r1, r1
 80043cc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80043d0:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80043d4:	f846 1b04 	str.w	r1, [r6], #4
 80043d8:	e7dc      	b.n	8004394 <__mdiff+0xd4>
 80043da:	3f01      	subs	r7, #1
 80043dc:	e7e6      	b.n	80043ac <__mdiff+0xec>
 80043de:	bf00      	nop
 80043e0:	080065c7 	.word	0x080065c7
 80043e4:	080065d8 	.word	0x080065d8

080043e8 <__ulp>:
 80043e8:	4b0e      	ldr	r3, [pc, #56]	@ (8004424 <__ulp+0x3c>)
 80043ea:	400b      	ands	r3, r1
 80043ec:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 80043f0:	2b00      	cmp	r3, #0
 80043f2:	dc08      	bgt.n	8004406 <__ulp+0x1e>
 80043f4:	425b      	negs	r3, r3
 80043f6:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 80043fa:	ea4f 5223 	mov.w	r2, r3, asr #20
 80043fe:	da04      	bge.n	800440a <__ulp+0x22>
 8004400:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 8004404:	4113      	asrs	r3, r2
 8004406:	2200      	movs	r2, #0
 8004408:	e008      	b.n	800441c <__ulp+0x34>
 800440a:	f1a2 0314 	sub.w	r3, r2, #20
 800440e:	2b1e      	cmp	r3, #30
 8004410:	bfd6      	itet	le
 8004412:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 8004416:	2201      	movgt	r2, #1
 8004418:	40da      	lsrle	r2, r3
 800441a:	2300      	movs	r3, #0
 800441c:	4619      	mov	r1, r3
 800441e:	4610      	mov	r0, r2
 8004420:	4770      	bx	lr
 8004422:	bf00      	nop
 8004424:	7ff00000 	.word	0x7ff00000

08004428 <__b2d>:
 8004428:	6902      	ldr	r2, [r0, #16]
 800442a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800442c:	f100 0614 	add.w	r6, r0, #20
 8004430:	eb06 0282 	add.w	r2, r6, r2, lsl #2
 8004434:	f852 4c04 	ldr.w	r4, [r2, #-4]
 8004438:	4f1e      	ldr	r7, [pc, #120]	@ (80044b4 <__b2d+0x8c>)
 800443a:	4620      	mov	r0, r4
 800443c:	f7ff fd54 	bl	8003ee8 <__hi0bits>
 8004440:	4603      	mov	r3, r0
 8004442:	f1c0 0020 	rsb	r0, r0, #32
 8004446:	2b0a      	cmp	r3, #10
 8004448:	f1a2 0504 	sub.w	r5, r2, #4
 800444c:	6008      	str	r0, [r1, #0]
 800444e:	dc12      	bgt.n	8004476 <__b2d+0x4e>
 8004450:	42ae      	cmp	r6, r5
 8004452:	bf2c      	ite	cs
 8004454:	2200      	movcs	r2, #0
 8004456:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 800445a:	f1c3 0c0b 	rsb	ip, r3, #11
 800445e:	3315      	adds	r3, #21
 8004460:	fa24 fe0c 	lsr.w	lr, r4, ip
 8004464:	fa04 f303 	lsl.w	r3, r4, r3
 8004468:	fa22 f20c 	lsr.w	r2, r2, ip
 800446c:	ea4e 0107 	orr.w	r1, lr, r7
 8004470:	431a      	orrs	r2, r3
 8004472:	4610      	mov	r0, r2
 8004474:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004476:	42ae      	cmp	r6, r5
 8004478:	bf36      	itet	cc
 800447a:	f1a2 0508 	subcc.w	r5, r2, #8
 800447e:	2200      	movcs	r2, #0
 8004480:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
 8004484:	3b0b      	subs	r3, #11
 8004486:	d012      	beq.n	80044ae <__b2d+0x86>
 8004488:	f1c3 0720 	rsb	r7, r3, #32
 800448c:	fa22 f107 	lsr.w	r1, r2, r7
 8004490:	409c      	lsls	r4, r3
 8004492:	430c      	orrs	r4, r1
 8004494:	42b5      	cmp	r5, r6
 8004496:	f044 517f 	orr.w	r1, r4, #1069547520	@ 0x3fc00000
 800449a:	bf94      	ite	ls
 800449c:	2400      	movls	r4, #0
 800449e:	f855 4c04 	ldrhi.w	r4, [r5, #-4]
 80044a2:	409a      	lsls	r2, r3
 80044a4:	40fc      	lsrs	r4, r7
 80044a6:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 80044aa:	4322      	orrs	r2, r4
 80044ac:	e7e1      	b.n	8004472 <__b2d+0x4a>
 80044ae:	ea44 0107 	orr.w	r1, r4, r7
 80044b2:	e7de      	b.n	8004472 <__b2d+0x4a>
 80044b4:	3ff00000 	.word	0x3ff00000

080044b8 <__d2b>:
 80044b8:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 80044bc:	2101      	movs	r1, #1
 80044be:	4690      	mov	r8, r2
 80044c0:	4699      	mov	r9, r3
 80044c2:	9e08      	ldr	r6, [sp, #32]
 80044c4:	f7ff fc1e 	bl	8003d04 <_Balloc>
 80044c8:	4604      	mov	r4, r0
 80044ca:	b930      	cbnz	r0, 80044da <__d2b+0x22>
 80044cc:	4602      	mov	r2, r0
 80044ce:	f240 310f 	movw	r1, #783	@ 0x30f
 80044d2:	4b23      	ldr	r3, [pc, #140]	@ (8004560 <__d2b+0xa8>)
 80044d4:	4823      	ldr	r0, [pc, #140]	@ (8004564 <__d2b+0xac>)
 80044d6:	f001 f989 	bl	80057ec <__assert_func>
 80044da:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80044de:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80044e2:	b10d      	cbz	r5, 80044e8 <__d2b+0x30>
 80044e4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80044e8:	9301      	str	r3, [sp, #4]
 80044ea:	f1b8 0300 	subs.w	r3, r8, #0
 80044ee:	d024      	beq.n	800453a <__d2b+0x82>
 80044f0:	4668      	mov	r0, sp
 80044f2:	9300      	str	r3, [sp, #0]
 80044f4:	f7ff fd17 	bl	8003f26 <__lo0bits>
 80044f8:	e9dd 1200 	ldrd	r1, r2, [sp]
 80044fc:	b1d8      	cbz	r0, 8004536 <__d2b+0x7e>
 80044fe:	f1c0 0320 	rsb	r3, r0, #32
 8004502:	fa02 f303 	lsl.w	r3, r2, r3
 8004506:	430b      	orrs	r3, r1
 8004508:	40c2      	lsrs	r2, r0
 800450a:	6163      	str	r3, [r4, #20]
 800450c:	9201      	str	r2, [sp, #4]
 800450e:	9b01      	ldr	r3, [sp, #4]
 8004510:	2b00      	cmp	r3, #0
 8004512:	bf0c      	ite	eq
 8004514:	2201      	moveq	r2, #1
 8004516:	2202      	movne	r2, #2
 8004518:	61a3      	str	r3, [r4, #24]
 800451a:	6122      	str	r2, [r4, #16]
 800451c:	b1ad      	cbz	r5, 800454a <__d2b+0x92>
 800451e:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8004522:	4405      	add	r5, r0
 8004524:	6035      	str	r5, [r6, #0]
 8004526:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800452a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800452c:	6018      	str	r0, [r3, #0]
 800452e:	4620      	mov	r0, r4
 8004530:	b002      	add	sp, #8
 8004532:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8004536:	6161      	str	r1, [r4, #20]
 8004538:	e7e9      	b.n	800450e <__d2b+0x56>
 800453a:	a801      	add	r0, sp, #4
 800453c:	f7ff fcf3 	bl	8003f26 <__lo0bits>
 8004540:	9b01      	ldr	r3, [sp, #4]
 8004542:	2201      	movs	r2, #1
 8004544:	6163      	str	r3, [r4, #20]
 8004546:	3020      	adds	r0, #32
 8004548:	e7e7      	b.n	800451a <__d2b+0x62>
 800454a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800454e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004552:	6030      	str	r0, [r6, #0]
 8004554:	6918      	ldr	r0, [r3, #16]
 8004556:	f7ff fcc7 	bl	8003ee8 <__hi0bits>
 800455a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800455e:	e7e4      	b.n	800452a <__d2b+0x72>
 8004560:	080065c7 	.word	0x080065c7
 8004564:	080065d8 	.word	0x080065d8

08004568 <__ratio>:
 8004568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800456c:	b085      	sub	sp, #20
 800456e:	e9cd 1000 	strd	r1, r0, [sp]
 8004572:	a902      	add	r1, sp, #8
 8004574:	f7ff ff58 	bl	8004428 <__b2d>
 8004578:	468b      	mov	fp, r1
 800457a:	4606      	mov	r6, r0
 800457c:	460f      	mov	r7, r1
 800457e:	9800      	ldr	r0, [sp, #0]
 8004580:	a903      	add	r1, sp, #12
 8004582:	f7ff ff51 	bl	8004428 <__b2d>
 8004586:	460d      	mov	r5, r1
 8004588:	9b01      	ldr	r3, [sp, #4]
 800458a:	4689      	mov	r9, r1
 800458c:	6919      	ldr	r1, [r3, #16]
 800458e:	9b00      	ldr	r3, [sp, #0]
 8004590:	4604      	mov	r4, r0
 8004592:	691b      	ldr	r3, [r3, #16]
 8004594:	4630      	mov	r0, r6
 8004596:	1ac9      	subs	r1, r1, r3
 8004598:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800459c:	1a9b      	subs	r3, r3, r2
 800459e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 80045a2:	2b00      	cmp	r3, #0
 80045a4:	bfcd      	iteet	gt
 80045a6:	463a      	movgt	r2, r7
 80045a8:	462a      	movle	r2, r5
 80045aa:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80045ae:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 80045b2:	bfd8      	it	le
 80045b4:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 80045b8:	464b      	mov	r3, r9
 80045ba:	4622      	mov	r2, r4
 80045bc:	4659      	mov	r1, fp
 80045be:	f7fc f8b5 	bl	800072c <__aeabi_ddiv>
 80045c2:	b005      	add	sp, #20
 80045c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080045c8 <__copybits>:
 80045c8:	3901      	subs	r1, #1
 80045ca:	b570      	push	{r4, r5, r6, lr}
 80045cc:	1149      	asrs	r1, r1, #5
 80045ce:	6914      	ldr	r4, [r2, #16]
 80045d0:	3101      	adds	r1, #1
 80045d2:	f102 0314 	add.w	r3, r2, #20
 80045d6:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80045da:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80045de:	1f05      	subs	r5, r0, #4
 80045e0:	42a3      	cmp	r3, r4
 80045e2:	d30c      	bcc.n	80045fe <__copybits+0x36>
 80045e4:	1aa3      	subs	r3, r4, r2
 80045e6:	3b11      	subs	r3, #17
 80045e8:	f023 0303 	bic.w	r3, r3, #3
 80045ec:	3211      	adds	r2, #17
 80045ee:	42a2      	cmp	r2, r4
 80045f0:	bf88      	it	hi
 80045f2:	2300      	movhi	r3, #0
 80045f4:	4418      	add	r0, r3
 80045f6:	2300      	movs	r3, #0
 80045f8:	4288      	cmp	r0, r1
 80045fa:	d305      	bcc.n	8004608 <__copybits+0x40>
 80045fc:	bd70      	pop	{r4, r5, r6, pc}
 80045fe:	f853 6b04 	ldr.w	r6, [r3], #4
 8004602:	f845 6f04 	str.w	r6, [r5, #4]!
 8004606:	e7eb      	b.n	80045e0 <__copybits+0x18>
 8004608:	f840 3b04 	str.w	r3, [r0], #4
 800460c:	e7f4      	b.n	80045f8 <__copybits+0x30>

0800460e <__any_on>:
 800460e:	f100 0214 	add.w	r2, r0, #20
 8004612:	6900      	ldr	r0, [r0, #16]
 8004614:	114b      	asrs	r3, r1, #5
 8004616:	4298      	cmp	r0, r3
 8004618:	b510      	push	{r4, lr}
 800461a:	db11      	blt.n	8004640 <__any_on+0x32>
 800461c:	dd0a      	ble.n	8004634 <__any_on+0x26>
 800461e:	f011 011f 	ands.w	r1, r1, #31
 8004622:	d007      	beq.n	8004634 <__any_on+0x26>
 8004624:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8004628:	fa24 f001 	lsr.w	r0, r4, r1
 800462c:	fa00 f101 	lsl.w	r1, r0, r1
 8004630:	428c      	cmp	r4, r1
 8004632:	d10b      	bne.n	800464c <__any_on+0x3e>
 8004634:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8004638:	4293      	cmp	r3, r2
 800463a:	d803      	bhi.n	8004644 <__any_on+0x36>
 800463c:	2000      	movs	r0, #0
 800463e:	bd10      	pop	{r4, pc}
 8004640:	4603      	mov	r3, r0
 8004642:	e7f7      	b.n	8004634 <__any_on+0x26>
 8004644:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004648:	2900      	cmp	r1, #0
 800464a:	d0f5      	beq.n	8004638 <__any_on+0x2a>
 800464c:	2001      	movs	r0, #1
 800464e:	e7f6      	b.n	800463e <__any_on+0x30>

08004650 <sulp>:
 8004650:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004654:	460f      	mov	r7, r1
 8004656:	4690      	mov	r8, r2
 8004658:	f7ff fec6 	bl	80043e8 <__ulp>
 800465c:	4604      	mov	r4, r0
 800465e:	460d      	mov	r5, r1
 8004660:	f1b8 0f00 	cmp.w	r8, #0
 8004664:	d011      	beq.n	800468a <sulp+0x3a>
 8004666:	f3c7 530a 	ubfx	r3, r7, #20, #11
 800466a:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800466e:	2b00      	cmp	r3, #0
 8004670:	dd0b      	ble.n	800468a <sulp+0x3a>
 8004672:	2400      	movs	r4, #0
 8004674:	051b      	lsls	r3, r3, #20
 8004676:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 800467a:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 800467e:	4622      	mov	r2, r4
 8004680:	462b      	mov	r3, r5
 8004682:	f7fb ff29 	bl	80004d8 <__aeabi_dmul>
 8004686:	4604      	mov	r4, r0
 8004688:	460d      	mov	r5, r1
 800468a:	4620      	mov	r0, r4
 800468c:	4629      	mov	r1, r5
 800468e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004692:	0000      	movs	r0, r0
 8004694:	0000      	movs	r0, r0
	...

08004698 <_strtod_l>:
 8004698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800469c:	b09f      	sub	sp, #124	@ 0x7c
 800469e:	9217      	str	r2, [sp, #92]	@ 0x5c
 80046a0:	2200      	movs	r2, #0
 80046a2:	460c      	mov	r4, r1
 80046a4:	921a      	str	r2, [sp, #104]	@ 0x68
 80046a6:	f04f 0a00 	mov.w	sl, #0
 80046aa:	f04f 0b00 	mov.w	fp, #0
 80046ae:	460a      	mov	r2, r1
 80046b0:	9005      	str	r0, [sp, #20]
 80046b2:	9219      	str	r2, [sp, #100]	@ 0x64
 80046b4:	7811      	ldrb	r1, [r2, #0]
 80046b6:	292b      	cmp	r1, #43	@ 0x2b
 80046b8:	d048      	beq.n	800474c <_strtod_l+0xb4>
 80046ba:	d836      	bhi.n	800472a <_strtod_l+0x92>
 80046bc:	290d      	cmp	r1, #13
 80046be:	d830      	bhi.n	8004722 <_strtod_l+0x8a>
 80046c0:	2908      	cmp	r1, #8
 80046c2:	d830      	bhi.n	8004726 <_strtod_l+0x8e>
 80046c4:	2900      	cmp	r1, #0
 80046c6:	d039      	beq.n	800473c <_strtod_l+0xa4>
 80046c8:	2200      	movs	r2, #0
 80046ca:	920b      	str	r2, [sp, #44]	@ 0x2c
 80046cc:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 80046ce:	782a      	ldrb	r2, [r5, #0]
 80046d0:	2a30      	cmp	r2, #48	@ 0x30
 80046d2:	f040 80b1 	bne.w	8004838 <_strtod_l+0x1a0>
 80046d6:	786a      	ldrb	r2, [r5, #1]
 80046d8:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 80046dc:	2a58      	cmp	r2, #88	@ 0x58
 80046de:	d16c      	bne.n	80047ba <_strtod_l+0x122>
 80046e0:	9302      	str	r3, [sp, #8]
 80046e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80046e4:	4a8e      	ldr	r2, [pc, #568]	@ (8004920 <_strtod_l+0x288>)
 80046e6:	9301      	str	r3, [sp, #4]
 80046e8:	ab1a      	add	r3, sp, #104	@ 0x68
 80046ea:	9300      	str	r3, [sp, #0]
 80046ec:	9805      	ldr	r0, [sp, #20]
 80046ee:	ab1b      	add	r3, sp, #108	@ 0x6c
 80046f0:	a919      	add	r1, sp, #100	@ 0x64
 80046f2:	f001 f915 	bl	8005920 <__gethex>
 80046f6:	f010 060f 	ands.w	r6, r0, #15
 80046fa:	4604      	mov	r4, r0
 80046fc:	d005      	beq.n	800470a <_strtod_l+0x72>
 80046fe:	2e06      	cmp	r6, #6
 8004700:	d126      	bne.n	8004750 <_strtod_l+0xb8>
 8004702:	2300      	movs	r3, #0
 8004704:	3501      	adds	r5, #1
 8004706:	9519      	str	r5, [sp, #100]	@ 0x64
 8004708:	930b      	str	r3, [sp, #44]	@ 0x2c
 800470a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800470c:	2b00      	cmp	r3, #0
 800470e:	f040 8584 	bne.w	800521a <_strtod_l+0xb82>
 8004712:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8004714:	b1bb      	cbz	r3, 8004746 <_strtod_l+0xae>
 8004716:	4650      	mov	r0, sl
 8004718:	f10b 4100 	add.w	r1, fp, #2147483648	@ 0x80000000
 800471c:	b01f      	add	sp, #124	@ 0x7c
 800471e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004722:	2920      	cmp	r1, #32
 8004724:	d1d0      	bne.n	80046c8 <_strtod_l+0x30>
 8004726:	3201      	adds	r2, #1
 8004728:	e7c3      	b.n	80046b2 <_strtod_l+0x1a>
 800472a:	292d      	cmp	r1, #45	@ 0x2d
 800472c:	d1cc      	bne.n	80046c8 <_strtod_l+0x30>
 800472e:	2101      	movs	r1, #1
 8004730:	910b      	str	r1, [sp, #44]	@ 0x2c
 8004732:	1c51      	adds	r1, r2, #1
 8004734:	9119      	str	r1, [sp, #100]	@ 0x64
 8004736:	7852      	ldrb	r2, [r2, #1]
 8004738:	2a00      	cmp	r2, #0
 800473a:	d1c7      	bne.n	80046cc <_strtod_l+0x34>
 800473c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800473e:	9419      	str	r4, [sp, #100]	@ 0x64
 8004740:	2b00      	cmp	r3, #0
 8004742:	f040 8568 	bne.w	8005216 <_strtod_l+0xb7e>
 8004746:	4650      	mov	r0, sl
 8004748:	4659      	mov	r1, fp
 800474a:	e7e7      	b.n	800471c <_strtod_l+0x84>
 800474c:	2100      	movs	r1, #0
 800474e:	e7ef      	b.n	8004730 <_strtod_l+0x98>
 8004750:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004752:	b13a      	cbz	r2, 8004764 <_strtod_l+0xcc>
 8004754:	2135      	movs	r1, #53	@ 0x35
 8004756:	a81c      	add	r0, sp, #112	@ 0x70
 8004758:	f7ff ff36 	bl	80045c8 <__copybits>
 800475c:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800475e:	9805      	ldr	r0, [sp, #20]
 8004760:	f7ff fb10 	bl	8003d84 <_Bfree>
 8004764:	3e01      	subs	r6, #1
 8004766:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8004768:	2e04      	cmp	r6, #4
 800476a:	d806      	bhi.n	800477a <_strtod_l+0xe2>
 800476c:	e8df f006 	tbb	[pc, r6]
 8004770:	201d0314 	.word	0x201d0314
 8004774:	14          	.byte	0x14
 8004775:	00          	.byte	0x00
 8004776:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 800477a:	05e1      	lsls	r1, r4, #23
 800477c:	bf48      	it	mi
 800477e:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 8004782:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004786:	0d1b      	lsrs	r3, r3, #20
 8004788:	051b      	lsls	r3, r3, #20
 800478a:	2b00      	cmp	r3, #0
 800478c:	d1bd      	bne.n	800470a <_strtod_l+0x72>
 800478e:	f7fe fb2b 	bl	8002de8 <__errno>
 8004792:	2322      	movs	r3, #34	@ 0x22
 8004794:	6003      	str	r3, [r0, #0]
 8004796:	e7b8      	b.n	800470a <_strtod_l+0x72>
 8004798:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 800479c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 80047a0:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 80047a4:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80047a8:	e7e7      	b.n	800477a <_strtod_l+0xe2>
 80047aa:	f8df b178 	ldr.w	fp, [pc, #376]	@ 8004924 <_strtod_l+0x28c>
 80047ae:	e7e4      	b.n	800477a <_strtod_l+0xe2>
 80047b0:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 80047b4:	f04f 3aff 	mov.w	sl, #4294967295
 80047b8:	e7df      	b.n	800477a <_strtod_l+0xe2>
 80047ba:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80047bc:	1c5a      	adds	r2, r3, #1
 80047be:	9219      	str	r2, [sp, #100]	@ 0x64
 80047c0:	785b      	ldrb	r3, [r3, #1]
 80047c2:	2b30      	cmp	r3, #48	@ 0x30
 80047c4:	d0f9      	beq.n	80047ba <_strtod_l+0x122>
 80047c6:	2b00      	cmp	r3, #0
 80047c8:	d09f      	beq.n	800470a <_strtod_l+0x72>
 80047ca:	2301      	movs	r3, #1
 80047cc:	9309      	str	r3, [sp, #36]	@ 0x24
 80047ce:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80047d0:	220a      	movs	r2, #10
 80047d2:	930c      	str	r3, [sp, #48]	@ 0x30
 80047d4:	2300      	movs	r3, #0
 80047d6:	461f      	mov	r7, r3
 80047d8:	9308      	str	r3, [sp, #32]
 80047da:	930a      	str	r3, [sp, #40]	@ 0x28
 80047dc:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80047de:	7805      	ldrb	r5, [r0, #0]
 80047e0:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 80047e4:	b2d9      	uxtb	r1, r3
 80047e6:	2909      	cmp	r1, #9
 80047e8:	d928      	bls.n	800483c <_strtod_l+0x1a4>
 80047ea:	2201      	movs	r2, #1
 80047ec:	494e      	ldr	r1, [pc, #312]	@ (8004928 <_strtod_l+0x290>)
 80047ee:	f000 ffc7 	bl	8005780 <strncmp>
 80047f2:	2800      	cmp	r0, #0
 80047f4:	d032      	beq.n	800485c <_strtod_l+0x1c4>
 80047f6:	2000      	movs	r0, #0
 80047f8:	462a      	mov	r2, r5
 80047fa:	4681      	mov	r9, r0
 80047fc:	463d      	mov	r5, r7
 80047fe:	4603      	mov	r3, r0
 8004800:	2a65      	cmp	r2, #101	@ 0x65
 8004802:	d001      	beq.n	8004808 <_strtod_l+0x170>
 8004804:	2a45      	cmp	r2, #69	@ 0x45
 8004806:	d114      	bne.n	8004832 <_strtod_l+0x19a>
 8004808:	b91d      	cbnz	r5, 8004812 <_strtod_l+0x17a>
 800480a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800480c:	4302      	orrs	r2, r0
 800480e:	d095      	beq.n	800473c <_strtod_l+0xa4>
 8004810:	2500      	movs	r5, #0
 8004812:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 8004814:	1c62      	adds	r2, r4, #1
 8004816:	9219      	str	r2, [sp, #100]	@ 0x64
 8004818:	7862      	ldrb	r2, [r4, #1]
 800481a:	2a2b      	cmp	r2, #43	@ 0x2b
 800481c:	d077      	beq.n	800490e <_strtod_l+0x276>
 800481e:	2a2d      	cmp	r2, #45	@ 0x2d
 8004820:	d07b      	beq.n	800491a <_strtod_l+0x282>
 8004822:	f04f 0c00 	mov.w	ip, #0
 8004826:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 800482a:	2909      	cmp	r1, #9
 800482c:	f240 8082 	bls.w	8004934 <_strtod_l+0x29c>
 8004830:	9419      	str	r4, [sp, #100]	@ 0x64
 8004832:	f04f 0800 	mov.w	r8, #0
 8004836:	e0a2      	b.n	800497e <_strtod_l+0x2e6>
 8004838:	2300      	movs	r3, #0
 800483a:	e7c7      	b.n	80047cc <_strtod_l+0x134>
 800483c:	2f08      	cmp	r7, #8
 800483e:	bfd5      	itete	le
 8004840:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 8004842:	9908      	ldrgt	r1, [sp, #32]
 8004844:	fb02 3301 	mlale	r3, r2, r1, r3
 8004848:	fb02 3301 	mlagt	r3, r2, r1, r3
 800484c:	f100 0001 	add.w	r0, r0, #1
 8004850:	bfd4      	ite	le
 8004852:	930a      	strle	r3, [sp, #40]	@ 0x28
 8004854:	9308      	strgt	r3, [sp, #32]
 8004856:	3701      	adds	r7, #1
 8004858:	9019      	str	r0, [sp, #100]	@ 0x64
 800485a:	e7bf      	b.n	80047dc <_strtod_l+0x144>
 800485c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800485e:	1c5a      	adds	r2, r3, #1
 8004860:	9219      	str	r2, [sp, #100]	@ 0x64
 8004862:	785a      	ldrb	r2, [r3, #1]
 8004864:	b37f      	cbz	r7, 80048c6 <_strtod_l+0x22e>
 8004866:	4681      	mov	r9, r0
 8004868:	463d      	mov	r5, r7
 800486a:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 800486e:	2b09      	cmp	r3, #9
 8004870:	d912      	bls.n	8004898 <_strtod_l+0x200>
 8004872:	2301      	movs	r3, #1
 8004874:	e7c4      	b.n	8004800 <_strtod_l+0x168>
 8004876:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004878:	3001      	adds	r0, #1
 800487a:	1c5a      	adds	r2, r3, #1
 800487c:	9219      	str	r2, [sp, #100]	@ 0x64
 800487e:	785a      	ldrb	r2, [r3, #1]
 8004880:	2a30      	cmp	r2, #48	@ 0x30
 8004882:	d0f8      	beq.n	8004876 <_strtod_l+0x1de>
 8004884:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 8004888:	2b08      	cmp	r3, #8
 800488a:	f200 84cb 	bhi.w	8005224 <_strtod_l+0xb8c>
 800488e:	4681      	mov	r9, r0
 8004890:	2000      	movs	r0, #0
 8004892:	4605      	mov	r5, r0
 8004894:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004896:	930c      	str	r3, [sp, #48]	@ 0x30
 8004898:	3a30      	subs	r2, #48	@ 0x30
 800489a:	f100 0301 	add.w	r3, r0, #1
 800489e:	d02a      	beq.n	80048f6 <_strtod_l+0x25e>
 80048a0:	4499      	add	r9, r3
 80048a2:	210a      	movs	r1, #10
 80048a4:	462b      	mov	r3, r5
 80048a6:	eb00 0c05 	add.w	ip, r0, r5
 80048aa:	4563      	cmp	r3, ip
 80048ac:	d10d      	bne.n	80048ca <_strtod_l+0x232>
 80048ae:	1c69      	adds	r1, r5, #1
 80048b0:	4401      	add	r1, r0
 80048b2:	4428      	add	r0, r5
 80048b4:	2808      	cmp	r0, #8
 80048b6:	dc16      	bgt.n	80048e6 <_strtod_l+0x24e>
 80048b8:	230a      	movs	r3, #10
 80048ba:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80048bc:	fb03 2300 	mla	r3, r3, r0, r2
 80048c0:	930a      	str	r3, [sp, #40]	@ 0x28
 80048c2:	2300      	movs	r3, #0
 80048c4:	e018      	b.n	80048f8 <_strtod_l+0x260>
 80048c6:	4638      	mov	r0, r7
 80048c8:	e7da      	b.n	8004880 <_strtod_l+0x1e8>
 80048ca:	2b08      	cmp	r3, #8
 80048cc:	f103 0301 	add.w	r3, r3, #1
 80048d0:	dc03      	bgt.n	80048da <_strtod_l+0x242>
 80048d2:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 80048d4:	434e      	muls	r6, r1
 80048d6:	960a      	str	r6, [sp, #40]	@ 0x28
 80048d8:	e7e7      	b.n	80048aa <_strtod_l+0x212>
 80048da:	2b10      	cmp	r3, #16
 80048dc:	bfde      	ittt	le
 80048de:	9e08      	ldrle	r6, [sp, #32]
 80048e0:	434e      	mulle	r6, r1
 80048e2:	9608      	strle	r6, [sp, #32]
 80048e4:	e7e1      	b.n	80048aa <_strtod_l+0x212>
 80048e6:	280f      	cmp	r0, #15
 80048e8:	dceb      	bgt.n	80048c2 <_strtod_l+0x22a>
 80048ea:	230a      	movs	r3, #10
 80048ec:	9808      	ldr	r0, [sp, #32]
 80048ee:	fb03 2300 	mla	r3, r3, r0, r2
 80048f2:	9308      	str	r3, [sp, #32]
 80048f4:	e7e5      	b.n	80048c2 <_strtod_l+0x22a>
 80048f6:	4629      	mov	r1, r5
 80048f8:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80048fa:	460d      	mov	r5, r1
 80048fc:	1c50      	adds	r0, r2, #1
 80048fe:	9019      	str	r0, [sp, #100]	@ 0x64
 8004900:	7852      	ldrb	r2, [r2, #1]
 8004902:	4618      	mov	r0, r3
 8004904:	e7b1      	b.n	800486a <_strtod_l+0x1d2>
 8004906:	f04f 0900 	mov.w	r9, #0
 800490a:	2301      	movs	r3, #1
 800490c:	e77d      	b.n	800480a <_strtod_l+0x172>
 800490e:	f04f 0c00 	mov.w	ip, #0
 8004912:	1ca2      	adds	r2, r4, #2
 8004914:	9219      	str	r2, [sp, #100]	@ 0x64
 8004916:	78a2      	ldrb	r2, [r4, #2]
 8004918:	e785      	b.n	8004826 <_strtod_l+0x18e>
 800491a:	f04f 0c01 	mov.w	ip, #1
 800491e:	e7f8      	b.n	8004912 <_strtod_l+0x27a>
 8004920:	08006748 	.word	0x08006748
 8004924:	7ff00000 	.word	0x7ff00000
 8004928:	08006730 	.word	0x08006730
 800492c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800492e:	1c51      	adds	r1, r2, #1
 8004930:	9119      	str	r1, [sp, #100]	@ 0x64
 8004932:	7852      	ldrb	r2, [r2, #1]
 8004934:	2a30      	cmp	r2, #48	@ 0x30
 8004936:	d0f9      	beq.n	800492c <_strtod_l+0x294>
 8004938:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 800493c:	2908      	cmp	r1, #8
 800493e:	f63f af78 	bhi.w	8004832 <_strtod_l+0x19a>
 8004942:	f04f 080a 	mov.w	r8, #10
 8004946:	3a30      	subs	r2, #48	@ 0x30
 8004948:	920e      	str	r2, [sp, #56]	@ 0x38
 800494a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800494c:	920f      	str	r2, [sp, #60]	@ 0x3c
 800494e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8004950:	1c56      	adds	r6, r2, #1
 8004952:	9619      	str	r6, [sp, #100]	@ 0x64
 8004954:	7852      	ldrb	r2, [r2, #1]
 8004956:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 800495a:	f1be 0f09 	cmp.w	lr, #9
 800495e:	d939      	bls.n	80049d4 <_strtod_l+0x33c>
 8004960:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8004962:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 8004966:	1a76      	subs	r6, r6, r1
 8004968:	2e08      	cmp	r6, #8
 800496a:	dc03      	bgt.n	8004974 <_strtod_l+0x2dc>
 800496c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800496e:	4588      	cmp	r8, r1
 8004970:	bfa8      	it	ge
 8004972:	4688      	movge	r8, r1
 8004974:	f1bc 0f00 	cmp.w	ip, #0
 8004978:	d001      	beq.n	800497e <_strtod_l+0x2e6>
 800497a:	f1c8 0800 	rsb	r8, r8, #0
 800497e:	2d00      	cmp	r5, #0
 8004980:	d14e      	bne.n	8004a20 <_strtod_l+0x388>
 8004982:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8004984:	4308      	orrs	r0, r1
 8004986:	f47f aec0 	bne.w	800470a <_strtod_l+0x72>
 800498a:	2b00      	cmp	r3, #0
 800498c:	f47f aed6 	bne.w	800473c <_strtod_l+0xa4>
 8004990:	2a69      	cmp	r2, #105	@ 0x69
 8004992:	d028      	beq.n	80049e6 <_strtod_l+0x34e>
 8004994:	dc25      	bgt.n	80049e2 <_strtod_l+0x34a>
 8004996:	2a49      	cmp	r2, #73	@ 0x49
 8004998:	d025      	beq.n	80049e6 <_strtod_l+0x34e>
 800499a:	2a4e      	cmp	r2, #78	@ 0x4e
 800499c:	f47f aece 	bne.w	800473c <_strtod_l+0xa4>
 80049a0:	499a      	ldr	r1, [pc, #616]	@ (8004c0c <_strtod_l+0x574>)
 80049a2:	a819      	add	r0, sp, #100	@ 0x64
 80049a4:	f001 f9de 	bl	8005d64 <__match>
 80049a8:	2800      	cmp	r0, #0
 80049aa:	f43f aec7 	beq.w	800473c <_strtod_l+0xa4>
 80049ae:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80049b0:	781b      	ldrb	r3, [r3, #0]
 80049b2:	2b28      	cmp	r3, #40	@ 0x28
 80049b4:	d12e      	bne.n	8004a14 <_strtod_l+0x37c>
 80049b6:	4996      	ldr	r1, [pc, #600]	@ (8004c10 <_strtod_l+0x578>)
 80049b8:	aa1c      	add	r2, sp, #112	@ 0x70
 80049ba:	a819      	add	r0, sp, #100	@ 0x64
 80049bc:	f001 f9e6 	bl	8005d8c <__hexnan>
 80049c0:	2805      	cmp	r0, #5
 80049c2:	d127      	bne.n	8004a14 <_strtod_l+0x37c>
 80049c4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80049c6:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 80049ca:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 80049ce:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 80049d2:	e69a      	b.n	800470a <_strtod_l+0x72>
 80049d4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80049d6:	fb08 2101 	mla	r1, r8, r1, r2
 80049da:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 80049de:	920e      	str	r2, [sp, #56]	@ 0x38
 80049e0:	e7b5      	b.n	800494e <_strtod_l+0x2b6>
 80049e2:	2a6e      	cmp	r2, #110	@ 0x6e
 80049e4:	e7da      	b.n	800499c <_strtod_l+0x304>
 80049e6:	498b      	ldr	r1, [pc, #556]	@ (8004c14 <_strtod_l+0x57c>)
 80049e8:	a819      	add	r0, sp, #100	@ 0x64
 80049ea:	f001 f9bb 	bl	8005d64 <__match>
 80049ee:	2800      	cmp	r0, #0
 80049f0:	f43f aea4 	beq.w	800473c <_strtod_l+0xa4>
 80049f4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80049f6:	4988      	ldr	r1, [pc, #544]	@ (8004c18 <_strtod_l+0x580>)
 80049f8:	3b01      	subs	r3, #1
 80049fa:	a819      	add	r0, sp, #100	@ 0x64
 80049fc:	9319      	str	r3, [sp, #100]	@ 0x64
 80049fe:	f001 f9b1 	bl	8005d64 <__match>
 8004a02:	b910      	cbnz	r0, 8004a0a <_strtod_l+0x372>
 8004a04:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8004a06:	3301      	adds	r3, #1
 8004a08:	9319      	str	r3, [sp, #100]	@ 0x64
 8004a0a:	f04f 0a00 	mov.w	sl, #0
 8004a0e:	f8df b20c 	ldr.w	fp, [pc, #524]	@ 8004c1c <_strtod_l+0x584>
 8004a12:	e67a      	b.n	800470a <_strtod_l+0x72>
 8004a14:	4882      	ldr	r0, [pc, #520]	@ (8004c20 <_strtod_l+0x588>)
 8004a16:	f000 fee3 	bl	80057e0 <nan>
 8004a1a:	4682      	mov	sl, r0
 8004a1c:	468b      	mov	fp, r1
 8004a1e:	e674      	b.n	800470a <_strtod_l+0x72>
 8004a20:	eba8 0309 	sub.w	r3, r8, r9
 8004a24:	2f00      	cmp	r7, #0
 8004a26:	bf08      	it	eq
 8004a28:	462f      	moveq	r7, r5
 8004a2a:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8004a2c:	2d10      	cmp	r5, #16
 8004a2e:	462c      	mov	r4, r5
 8004a30:	9309      	str	r3, [sp, #36]	@ 0x24
 8004a32:	bfa8      	it	ge
 8004a34:	2410      	movge	r4, #16
 8004a36:	f7fb fcd5 	bl	80003e4 <__aeabi_ui2d>
 8004a3a:	2d09      	cmp	r5, #9
 8004a3c:	4682      	mov	sl, r0
 8004a3e:	468b      	mov	fp, r1
 8004a40:	dc11      	bgt.n	8004a66 <_strtod_l+0x3ce>
 8004a42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004a44:	2b00      	cmp	r3, #0
 8004a46:	f43f ae60 	beq.w	800470a <_strtod_l+0x72>
 8004a4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004a4c:	dd76      	ble.n	8004b3c <_strtod_l+0x4a4>
 8004a4e:	2b16      	cmp	r3, #22
 8004a50:	dc5d      	bgt.n	8004b0e <_strtod_l+0x476>
 8004a52:	4974      	ldr	r1, [pc, #464]	@ (8004c24 <_strtod_l+0x58c>)
 8004a54:	4652      	mov	r2, sl
 8004a56:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004a5a:	465b      	mov	r3, fp
 8004a5c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004a60:	f7fb fd3a 	bl	80004d8 <__aeabi_dmul>
 8004a64:	e7d9      	b.n	8004a1a <_strtod_l+0x382>
 8004a66:	4b6f      	ldr	r3, [pc, #444]	@ (8004c24 <_strtod_l+0x58c>)
 8004a68:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8004a6c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 8004a70:	f7fb fd32 	bl	80004d8 <__aeabi_dmul>
 8004a74:	4682      	mov	sl, r0
 8004a76:	9808      	ldr	r0, [sp, #32]
 8004a78:	468b      	mov	fp, r1
 8004a7a:	f7fb fcb3 	bl	80003e4 <__aeabi_ui2d>
 8004a7e:	4602      	mov	r2, r0
 8004a80:	460b      	mov	r3, r1
 8004a82:	4650      	mov	r0, sl
 8004a84:	4659      	mov	r1, fp
 8004a86:	f7fb fb71 	bl	800016c <__adddf3>
 8004a8a:	2d0f      	cmp	r5, #15
 8004a8c:	4682      	mov	sl, r0
 8004a8e:	468b      	mov	fp, r1
 8004a90:	ddd7      	ble.n	8004a42 <_strtod_l+0x3aa>
 8004a92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004a94:	1b2c      	subs	r4, r5, r4
 8004a96:	441c      	add	r4, r3
 8004a98:	2c00      	cmp	r4, #0
 8004a9a:	f340 8096 	ble.w	8004bca <_strtod_l+0x532>
 8004a9e:	f014 030f 	ands.w	r3, r4, #15
 8004aa2:	d00a      	beq.n	8004aba <_strtod_l+0x422>
 8004aa4:	495f      	ldr	r1, [pc, #380]	@ (8004c24 <_strtod_l+0x58c>)
 8004aa6:	4652      	mov	r2, sl
 8004aa8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004aac:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004ab0:	465b      	mov	r3, fp
 8004ab2:	f7fb fd11 	bl	80004d8 <__aeabi_dmul>
 8004ab6:	4682      	mov	sl, r0
 8004ab8:	468b      	mov	fp, r1
 8004aba:	f034 040f 	bics.w	r4, r4, #15
 8004abe:	d073      	beq.n	8004ba8 <_strtod_l+0x510>
 8004ac0:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 8004ac4:	dd48      	ble.n	8004b58 <_strtod_l+0x4c0>
 8004ac6:	2400      	movs	r4, #0
 8004ac8:	46a0      	mov	r8, r4
 8004aca:	46a1      	mov	r9, r4
 8004acc:	940a      	str	r4, [sp, #40]	@ 0x28
 8004ace:	2322      	movs	r3, #34	@ 0x22
 8004ad0:	f04f 0a00 	mov.w	sl, #0
 8004ad4:	9a05      	ldr	r2, [sp, #20]
 8004ad6:	f8df b144 	ldr.w	fp, [pc, #324]	@ 8004c1c <_strtod_l+0x584>
 8004ada:	6013      	str	r3, [r2, #0]
 8004adc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	f43f ae13 	beq.w	800470a <_strtod_l+0x72>
 8004ae4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004ae6:	9805      	ldr	r0, [sp, #20]
 8004ae8:	f7ff f94c 	bl	8003d84 <_Bfree>
 8004aec:	4649      	mov	r1, r9
 8004aee:	9805      	ldr	r0, [sp, #20]
 8004af0:	f7ff f948 	bl	8003d84 <_Bfree>
 8004af4:	4641      	mov	r1, r8
 8004af6:	9805      	ldr	r0, [sp, #20]
 8004af8:	f7ff f944 	bl	8003d84 <_Bfree>
 8004afc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8004afe:	9805      	ldr	r0, [sp, #20]
 8004b00:	f7ff f940 	bl	8003d84 <_Bfree>
 8004b04:	4621      	mov	r1, r4
 8004b06:	9805      	ldr	r0, [sp, #20]
 8004b08:	f7ff f93c 	bl	8003d84 <_Bfree>
 8004b0c:	e5fd      	b.n	800470a <_strtod_l+0x72>
 8004b0e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004b10:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 8004b14:	4293      	cmp	r3, r2
 8004b16:	dbbc      	blt.n	8004a92 <_strtod_l+0x3fa>
 8004b18:	4c42      	ldr	r4, [pc, #264]	@ (8004c24 <_strtod_l+0x58c>)
 8004b1a:	f1c5 050f 	rsb	r5, r5, #15
 8004b1e:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 8004b22:	4652      	mov	r2, sl
 8004b24:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004b28:	465b      	mov	r3, fp
 8004b2a:	f7fb fcd5 	bl	80004d8 <__aeabi_dmul>
 8004b2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004b30:	1b5d      	subs	r5, r3, r5
 8004b32:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 8004b36:	e9d4 2300 	ldrd	r2, r3, [r4]
 8004b3a:	e791      	b.n	8004a60 <_strtod_l+0x3c8>
 8004b3c:	3316      	adds	r3, #22
 8004b3e:	dba8      	blt.n	8004a92 <_strtod_l+0x3fa>
 8004b40:	4b38      	ldr	r3, [pc, #224]	@ (8004c24 <_strtod_l+0x58c>)
 8004b42:	eba9 0808 	sub.w	r8, r9, r8
 8004b46:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 8004b4a:	4650      	mov	r0, sl
 8004b4c:	e9d8 2300 	ldrd	r2, r3, [r8]
 8004b50:	4659      	mov	r1, fp
 8004b52:	f7fb fdeb 	bl	800072c <__aeabi_ddiv>
 8004b56:	e760      	b.n	8004a1a <_strtod_l+0x382>
 8004b58:	4b33      	ldr	r3, [pc, #204]	@ (8004c28 <_strtod_l+0x590>)
 8004b5a:	4650      	mov	r0, sl
 8004b5c:	9308      	str	r3, [sp, #32]
 8004b5e:	2300      	movs	r3, #0
 8004b60:	4659      	mov	r1, fp
 8004b62:	461e      	mov	r6, r3
 8004b64:	1124      	asrs	r4, r4, #4
 8004b66:	2c01      	cmp	r4, #1
 8004b68:	dc21      	bgt.n	8004bae <_strtod_l+0x516>
 8004b6a:	b10b      	cbz	r3, 8004b70 <_strtod_l+0x4d8>
 8004b6c:	4682      	mov	sl, r0
 8004b6e:	468b      	mov	fp, r1
 8004b70:	492d      	ldr	r1, [pc, #180]	@ (8004c28 <_strtod_l+0x590>)
 8004b72:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 8004b76:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8004b7a:	4652      	mov	r2, sl
 8004b7c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004b80:	465b      	mov	r3, fp
 8004b82:	f7fb fca9 	bl	80004d8 <__aeabi_dmul>
 8004b86:	4b25      	ldr	r3, [pc, #148]	@ (8004c1c <_strtod_l+0x584>)
 8004b88:	460a      	mov	r2, r1
 8004b8a:	400b      	ands	r3, r1
 8004b8c:	4927      	ldr	r1, [pc, #156]	@ (8004c2c <_strtod_l+0x594>)
 8004b8e:	4682      	mov	sl, r0
 8004b90:	428b      	cmp	r3, r1
 8004b92:	d898      	bhi.n	8004ac6 <_strtod_l+0x42e>
 8004b94:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 8004b98:	428b      	cmp	r3, r1
 8004b9a:	bf86      	itte	hi
 8004b9c:	f04f 3aff 	movhi.w	sl, #4294967295
 8004ba0:	f8df b08c 	ldrhi.w	fp, [pc, #140]	@ 8004c30 <_strtod_l+0x598>
 8004ba4:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 8004ba8:	2300      	movs	r3, #0
 8004baa:	9308      	str	r3, [sp, #32]
 8004bac:	e07a      	b.n	8004ca4 <_strtod_l+0x60c>
 8004bae:	07e2      	lsls	r2, r4, #31
 8004bb0:	d505      	bpl.n	8004bbe <_strtod_l+0x526>
 8004bb2:	9b08      	ldr	r3, [sp, #32]
 8004bb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004bb8:	f7fb fc8e 	bl	80004d8 <__aeabi_dmul>
 8004bbc:	2301      	movs	r3, #1
 8004bbe:	9a08      	ldr	r2, [sp, #32]
 8004bc0:	3601      	adds	r6, #1
 8004bc2:	3208      	adds	r2, #8
 8004bc4:	1064      	asrs	r4, r4, #1
 8004bc6:	9208      	str	r2, [sp, #32]
 8004bc8:	e7cd      	b.n	8004b66 <_strtod_l+0x4ce>
 8004bca:	d0ed      	beq.n	8004ba8 <_strtod_l+0x510>
 8004bcc:	4264      	negs	r4, r4
 8004bce:	f014 020f 	ands.w	r2, r4, #15
 8004bd2:	d00a      	beq.n	8004bea <_strtod_l+0x552>
 8004bd4:	4b13      	ldr	r3, [pc, #76]	@ (8004c24 <_strtod_l+0x58c>)
 8004bd6:	4650      	mov	r0, sl
 8004bd8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004bdc:	4659      	mov	r1, fp
 8004bde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004be2:	f7fb fda3 	bl	800072c <__aeabi_ddiv>
 8004be6:	4682      	mov	sl, r0
 8004be8:	468b      	mov	fp, r1
 8004bea:	1124      	asrs	r4, r4, #4
 8004bec:	d0dc      	beq.n	8004ba8 <_strtod_l+0x510>
 8004bee:	2c1f      	cmp	r4, #31
 8004bf0:	dd20      	ble.n	8004c34 <_strtod_l+0x59c>
 8004bf2:	2400      	movs	r4, #0
 8004bf4:	46a0      	mov	r8, r4
 8004bf6:	46a1      	mov	r9, r4
 8004bf8:	940a      	str	r4, [sp, #40]	@ 0x28
 8004bfa:	2322      	movs	r3, #34	@ 0x22
 8004bfc:	9a05      	ldr	r2, [sp, #20]
 8004bfe:	f04f 0a00 	mov.w	sl, #0
 8004c02:	f04f 0b00 	mov.w	fp, #0
 8004c06:	6013      	str	r3, [r2, #0]
 8004c08:	e768      	b.n	8004adc <_strtod_l+0x444>
 8004c0a:	bf00      	nop
 8004c0c:	0800651f 	.word	0x0800651f
 8004c10:	08006734 	.word	0x08006734
 8004c14:	08006517 	.word	0x08006517
 8004c18:	0800654e 	.word	0x0800654e
 8004c1c:	7ff00000 	.word	0x7ff00000
 8004c20:	080068dd 	.word	0x080068dd
 8004c24:	08006668 	.word	0x08006668
 8004c28:	08006640 	.word	0x08006640
 8004c2c:	7ca00000 	.word	0x7ca00000
 8004c30:	7fefffff 	.word	0x7fefffff
 8004c34:	f014 0310 	ands.w	r3, r4, #16
 8004c38:	bf18      	it	ne
 8004c3a:	236a      	movne	r3, #106	@ 0x6a
 8004c3c:	4650      	mov	r0, sl
 8004c3e:	9308      	str	r3, [sp, #32]
 8004c40:	4659      	mov	r1, fp
 8004c42:	2300      	movs	r3, #0
 8004c44:	4ea9      	ldr	r6, [pc, #676]	@ (8004eec <_strtod_l+0x854>)
 8004c46:	07e2      	lsls	r2, r4, #31
 8004c48:	d504      	bpl.n	8004c54 <_strtod_l+0x5bc>
 8004c4a:	e9d6 2300 	ldrd	r2, r3, [r6]
 8004c4e:	f7fb fc43 	bl	80004d8 <__aeabi_dmul>
 8004c52:	2301      	movs	r3, #1
 8004c54:	1064      	asrs	r4, r4, #1
 8004c56:	f106 0608 	add.w	r6, r6, #8
 8004c5a:	d1f4      	bne.n	8004c46 <_strtod_l+0x5ae>
 8004c5c:	b10b      	cbz	r3, 8004c62 <_strtod_l+0x5ca>
 8004c5e:	4682      	mov	sl, r0
 8004c60:	468b      	mov	fp, r1
 8004c62:	9b08      	ldr	r3, [sp, #32]
 8004c64:	b1b3      	cbz	r3, 8004c94 <_strtod_l+0x5fc>
 8004c66:	f3cb 520a 	ubfx	r2, fp, #20, #11
 8004c6a:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	4659      	mov	r1, fp
 8004c72:	dd0f      	ble.n	8004c94 <_strtod_l+0x5fc>
 8004c74:	2b1f      	cmp	r3, #31
 8004c76:	dd57      	ble.n	8004d28 <_strtod_l+0x690>
 8004c78:	2b34      	cmp	r3, #52	@ 0x34
 8004c7a:	bfd8      	it	le
 8004c7c:	f04f 33ff 	movle.w	r3, #4294967295
 8004c80:	f04f 0a00 	mov.w	sl, #0
 8004c84:	bfcf      	iteee	gt
 8004c86:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 8004c8a:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 8004c8e:	4093      	lslle	r3, r2
 8004c90:	ea03 0b01 	andle.w	fp, r3, r1
 8004c94:	2200      	movs	r2, #0
 8004c96:	2300      	movs	r3, #0
 8004c98:	4650      	mov	r0, sl
 8004c9a:	4659      	mov	r1, fp
 8004c9c:	f7fb fe84 	bl	80009a8 <__aeabi_dcmpeq>
 8004ca0:	2800      	cmp	r0, #0
 8004ca2:	d1a6      	bne.n	8004bf2 <_strtod_l+0x55a>
 8004ca4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004ca6:	463a      	mov	r2, r7
 8004ca8:	9300      	str	r3, [sp, #0]
 8004caa:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8004cac:	462b      	mov	r3, r5
 8004cae:	9805      	ldr	r0, [sp, #20]
 8004cb0:	f7ff f8d0 	bl	8003e54 <__s2b>
 8004cb4:	900a      	str	r0, [sp, #40]	@ 0x28
 8004cb6:	2800      	cmp	r0, #0
 8004cb8:	f43f af05 	beq.w	8004ac6 <_strtod_l+0x42e>
 8004cbc:	2400      	movs	r4, #0
 8004cbe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004cc0:	eba9 0308 	sub.w	r3, r9, r8
 8004cc4:	2a00      	cmp	r2, #0
 8004cc6:	bfa8      	it	ge
 8004cc8:	2300      	movge	r3, #0
 8004cca:	46a0      	mov	r8, r4
 8004ccc:	9312      	str	r3, [sp, #72]	@ 0x48
 8004cce:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8004cd2:	9316      	str	r3, [sp, #88]	@ 0x58
 8004cd4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004cd6:	9805      	ldr	r0, [sp, #20]
 8004cd8:	6859      	ldr	r1, [r3, #4]
 8004cda:	f7ff f813 	bl	8003d04 <_Balloc>
 8004cde:	4681      	mov	r9, r0
 8004ce0:	2800      	cmp	r0, #0
 8004ce2:	f43f aef4 	beq.w	8004ace <_strtod_l+0x436>
 8004ce6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8004ce8:	300c      	adds	r0, #12
 8004cea:	691a      	ldr	r2, [r3, #16]
 8004cec:	f103 010c 	add.w	r1, r3, #12
 8004cf0:	3202      	adds	r2, #2
 8004cf2:	0092      	lsls	r2, r2, #2
 8004cf4:	f000 fd66 	bl	80057c4 <memcpy>
 8004cf8:	ab1c      	add	r3, sp, #112	@ 0x70
 8004cfa:	9301      	str	r3, [sp, #4]
 8004cfc:	ab1b      	add	r3, sp, #108	@ 0x6c
 8004cfe:	9300      	str	r3, [sp, #0]
 8004d00:	4652      	mov	r2, sl
 8004d02:	465b      	mov	r3, fp
 8004d04:	9805      	ldr	r0, [sp, #20]
 8004d06:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 8004d0a:	f7ff fbd5 	bl	80044b8 <__d2b>
 8004d0e:	901a      	str	r0, [sp, #104]	@ 0x68
 8004d10:	2800      	cmp	r0, #0
 8004d12:	f43f aedc 	beq.w	8004ace <_strtod_l+0x436>
 8004d16:	2101      	movs	r1, #1
 8004d18:	9805      	ldr	r0, [sp, #20]
 8004d1a:	f7ff f931 	bl	8003f80 <__i2b>
 8004d1e:	4680      	mov	r8, r0
 8004d20:	b948      	cbnz	r0, 8004d36 <_strtod_l+0x69e>
 8004d22:	f04f 0800 	mov.w	r8, #0
 8004d26:	e6d2      	b.n	8004ace <_strtod_l+0x436>
 8004d28:	f04f 32ff 	mov.w	r2, #4294967295
 8004d2c:	fa02 f303 	lsl.w	r3, r2, r3
 8004d30:	ea03 0a0a 	and.w	sl, r3, sl
 8004d34:	e7ae      	b.n	8004c94 <_strtod_l+0x5fc>
 8004d36:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 8004d38:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8004d3a:	2d00      	cmp	r5, #0
 8004d3c:	bfab      	itete	ge
 8004d3e:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 8004d40:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 8004d42:	18ef      	addge	r7, r5, r3
 8004d44:	1b5e      	sublt	r6, r3, r5
 8004d46:	9b08      	ldr	r3, [sp, #32]
 8004d48:	bfa8      	it	ge
 8004d4a:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 8004d4c:	eba5 0503 	sub.w	r5, r5, r3
 8004d50:	4415      	add	r5, r2
 8004d52:	4b67      	ldr	r3, [pc, #412]	@ (8004ef0 <_strtod_l+0x858>)
 8004d54:	f105 35ff 	add.w	r5, r5, #4294967295
 8004d58:	bfb8      	it	lt
 8004d5a:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 8004d5c:	429d      	cmp	r5, r3
 8004d5e:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 8004d62:	da50      	bge.n	8004e06 <_strtod_l+0x76e>
 8004d64:	1b5b      	subs	r3, r3, r5
 8004d66:	2b1f      	cmp	r3, #31
 8004d68:	f04f 0101 	mov.w	r1, #1
 8004d6c:	eba2 0203 	sub.w	r2, r2, r3
 8004d70:	dc3d      	bgt.n	8004dee <_strtod_l+0x756>
 8004d72:	fa01 f303 	lsl.w	r3, r1, r3
 8004d76:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004d78:	2300      	movs	r3, #0
 8004d7a:	9310      	str	r3, [sp, #64]	@ 0x40
 8004d7c:	18bd      	adds	r5, r7, r2
 8004d7e:	9b08      	ldr	r3, [sp, #32]
 8004d80:	42af      	cmp	r7, r5
 8004d82:	4416      	add	r6, r2
 8004d84:	441e      	add	r6, r3
 8004d86:	463b      	mov	r3, r7
 8004d88:	bfa8      	it	ge
 8004d8a:	462b      	movge	r3, r5
 8004d8c:	42b3      	cmp	r3, r6
 8004d8e:	bfa8      	it	ge
 8004d90:	4633      	movge	r3, r6
 8004d92:	2b00      	cmp	r3, #0
 8004d94:	bfc2      	ittt	gt
 8004d96:	1aed      	subgt	r5, r5, r3
 8004d98:	1af6      	subgt	r6, r6, r3
 8004d9a:	1aff      	subgt	r7, r7, r3
 8004d9c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8004d9e:	2b00      	cmp	r3, #0
 8004da0:	dd16      	ble.n	8004dd0 <_strtod_l+0x738>
 8004da2:	4641      	mov	r1, r8
 8004da4:	461a      	mov	r2, r3
 8004da6:	9805      	ldr	r0, [sp, #20]
 8004da8:	f7ff f9a8 	bl	80040fc <__pow5mult>
 8004dac:	4680      	mov	r8, r0
 8004dae:	2800      	cmp	r0, #0
 8004db0:	d0b7      	beq.n	8004d22 <_strtod_l+0x68a>
 8004db2:	4601      	mov	r1, r0
 8004db4:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8004db6:	9805      	ldr	r0, [sp, #20]
 8004db8:	f7ff f8f8 	bl	8003fac <__multiply>
 8004dbc:	900e      	str	r0, [sp, #56]	@ 0x38
 8004dbe:	2800      	cmp	r0, #0
 8004dc0:	f43f ae85 	beq.w	8004ace <_strtod_l+0x436>
 8004dc4:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004dc6:	9805      	ldr	r0, [sp, #20]
 8004dc8:	f7fe ffdc 	bl	8003d84 <_Bfree>
 8004dcc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004dce:	931a      	str	r3, [sp, #104]	@ 0x68
 8004dd0:	2d00      	cmp	r5, #0
 8004dd2:	dc1d      	bgt.n	8004e10 <_strtod_l+0x778>
 8004dd4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004dd6:	2b00      	cmp	r3, #0
 8004dd8:	dd23      	ble.n	8004e22 <_strtod_l+0x78a>
 8004dda:	4649      	mov	r1, r9
 8004ddc:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8004dde:	9805      	ldr	r0, [sp, #20]
 8004de0:	f7ff f98c 	bl	80040fc <__pow5mult>
 8004de4:	4681      	mov	r9, r0
 8004de6:	b9e0      	cbnz	r0, 8004e22 <_strtod_l+0x78a>
 8004de8:	f04f 0900 	mov.w	r9, #0
 8004dec:	e66f      	b.n	8004ace <_strtod_l+0x436>
 8004dee:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 8004df2:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 8004df6:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 8004dfa:	35e2      	adds	r5, #226	@ 0xe2
 8004dfc:	fa01 f305 	lsl.w	r3, r1, r5
 8004e00:	9310      	str	r3, [sp, #64]	@ 0x40
 8004e02:	9113      	str	r1, [sp, #76]	@ 0x4c
 8004e04:	e7ba      	b.n	8004d7c <_strtod_l+0x6e4>
 8004e06:	2300      	movs	r3, #0
 8004e08:	9310      	str	r3, [sp, #64]	@ 0x40
 8004e0a:	2301      	movs	r3, #1
 8004e0c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8004e0e:	e7b5      	b.n	8004d7c <_strtod_l+0x6e4>
 8004e10:	462a      	mov	r2, r5
 8004e12:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004e14:	9805      	ldr	r0, [sp, #20]
 8004e16:	f7ff f9cb 	bl	80041b0 <__lshift>
 8004e1a:	901a      	str	r0, [sp, #104]	@ 0x68
 8004e1c:	2800      	cmp	r0, #0
 8004e1e:	d1d9      	bne.n	8004dd4 <_strtod_l+0x73c>
 8004e20:	e655      	b.n	8004ace <_strtod_l+0x436>
 8004e22:	2e00      	cmp	r6, #0
 8004e24:	dd07      	ble.n	8004e36 <_strtod_l+0x79e>
 8004e26:	4649      	mov	r1, r9
 8004e28:	4632      	mov	r2, r6
 8004e2a:	9805      	ldr	r0, [sp, #20]
 8004e2c:	f7ff f9c0 	bl	80041b0 <__lshift>
 8004e30:	4681      	mov	r9, r0
 8004e32:	2800      	cmp	r0, #0
 8004e34:	d0d8      	beq.n	8004de8 <_strtod_l+0x750>
 8004e36:	2f00      	cmp	r7, #0
 8004e38:	dd08      	ble.n	8004e4c <_strtod_l+0x7b4>
 8004e3a:	4641      	mov	r1, r8
 8004e3c:	463a      	mov	r2, r7
 8004e3e:	9805      	ldr	r0, [sp, #20]
 8004e40:	f7ff f9b6 	bl	80041b0 <__lshift>
 8004e44:	4680      	mov	r8, r0
 8004e46:	2800      	cmp	r0, #0
 8004e48:	f43f ae41 	beq.w	8004ace <_strtod_l+0x436>
 8004e4c:	464a      	mov	r2, r9
 8004e4e:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8004e50:	9805      	ldr	r0, [sp, #20]
 8004e52:	f7ff fa35 	bl	80042c0 <__mdiff>
 8004e56:	4604      	mov	r4, r0
 8004e58:	2800      	cmp	r0, #0
 8004e5a:	f43f ae38 	beq.w	8004ace <_strtod_l+0x436>
 8004e5e:	68c3      	ldr	r3, [r0, #12]
 8004e60:	4641      	mov	r1, r8
 8004e62:	930f      	str	r3, [sp, #60]	@ 0x3c
 8004e64:	2300      	movs	r3, #0
 8004e66:	60c3      	str	r3, [r0, #12]
 8004e68:	f7ff fa0e 	bl	8004288 <__mcmp>
 8004e6c:	2800      	cmp	r0, #0
 8004e6e:	da45      	bge.n	8004efc <_strtod_l+0x864>
 8004e70:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004e72:	ea53 030a 	orrs.w	r3, r3, sl
 8004e76:	d16b      	bne.n	8004f50 <_strtod_l+0x8b8>
 8004e78:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004e7c:	2b00      	cmp	r3, #0
 8004e7e:	d167      	bne.n	8004f50 <_strtod_l+0x8b8>
 8004e80:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004e84:	0d1b      	lsrs	r3, r3, #20
 8004e86:	051b      	lsls	r3, r3, #20
 8004e88:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004e8c:	d960      	bls.n	8004f50 <_strtod_l+0x8b8>
 8004e8e:	6963      	ldr	r3, [r4, #20]
 8004e90:	b913      	cbnz	r3, 8004e98 <_strtod_l+0x800>
 8004e92:	6923      	ldr	r3, [r4, #16]
 8004e94:	2b01      	cmp	r3, #1
 8004e96:	dd5b      	ble.n	8004f50 <_strtod_l+0x8b8>
 8004e98:	4621      	mov	r1, r4
 8004e9a:	2201      	movs	r2, #1
 8004e9c:	9805      	ldr	r0, [sp, #20]
 8004e9e:	f7ff f987 	bl	80041b0 <__lshift>
 8004ea2:	4641      	mov	r1, r8
 8004ea4:	4604      	mov	r4, r0
 8004ea6:	f7ff f9ef 	bl	8004288 <__mcmp>
 8004eaa:	2800      	cmp	r0, #0
 8004eac:	dd50      	ble.n	8004f50 <_strtod_l+0x8b8>
 8004eae:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8004eb2:	9a08      	ldr	r2, [sp, #32]
 8004eb4:	0d1b      	lsrs	r3, r3, #20
 8004eb6:	051b      	lsls	r3, r3, #20
 8004eb8:	2a00      	cmp	r2, #0
 8004eba:	d06a      	beq.n	8004f92 <_strtod_l+0x8fa>
 8004ebc:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 8004ec0:	d867      	bhi.n	8004f92 <_strtod_l+0x8fa>
 8004ec2:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 8004ec6:	f67f ae98 	bls.w	8004bfa <_strtod_l+0x562>
 8004eca:	4650      	mov	r0, sl
 8004ecc:	4659      	mov	r1, fp
 8004ece:	4b09      	ldr	r3, [pc, #36]	@ (8004ef4 <_strtod_l+0x85c>)
 8004ed0:	2200      	movs	r2, #0
 8004ed2:	f7fb fb01 	bl	80004d8 <__aeabi_dmul>
 8004ed6:	4b08      	ldr	r3, [pc, #32]	@ (8004ef8 <_strtod_l+0x860>)
 8004ed8:	4682      	mov	sl, r0
 8004eda:	400b      	ands	r3, r1
 8004edc:	468b      	mov	fp, r1
 8004ede:	2b00      	cmp	r3, #0
 8004ee0:	f47f ae00 	bne.w	8004ae4 <_strtod_l+0x44c>
 8004ee4:	2322      	movs	r3, #34	@ 0x22
 8004ee6:	9a05      	ldr	r2, [sp, #20]
 8004ee8:	6013      	str	r3, [r2, #0]
 8004eea:	e5fb      	b.n	8004ae4 <_strtod_l+0x44c>
 8004eec:	08006760 	.word	0x08006760
 8004ef0:	fffffc02 	.word	0xfffffc02
 8004ef4:	39500000 	.word	0x39500000
 8004ef8:	7ff00000 	.word	0x7ff00000
 8004efc:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 8004f00:	d165      	bne.n	8004fce <_strtod_l+0x936>
 8004f02:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8004f04:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8004f08:	b35a      	cbz	r2, 8004f62 <_strtod_l+0x8ca>
 8004f0a:	4a99      	ldr	r2, [pc, #612]	@ (8005170 <_strtod_l+0xad8>)
 8004f0c:	4293      	cmp	r3, r2
 8004f0e:	d12b      	bne.n	8004f68 <_strtod_l+0x8d0>
 8004f10:	9b08      	ldr	r3, [sp, #32]
 8004f12:	4651      	mov	r1, sl
 8004f14:	b303      	cbz	r3, 8004f58 <_strtod_l+0x8c0>
 8004f16:	465a      	mov	r2, fp
 8004f18:	4b96      	ldr	r3, [pc, #600]	@ (8005174 <_strtod_l+0xadc>)
 8004f1a:	4013      	ands	r3, r2
 8004f1c:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 8004f20:	f04f 32ff 	mov.w	r2, #4294967295
 8004f24:	d81b      	bhi.n	8004f5e <_strtod_l+0x8c6>
 8004f26:	0d1b      	lsrs	r3, r3, #20
 8004f28:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 8004f2c:	fa02 f303 	lsl.w	r3, r2, r3
 8004f30:	4299      	cmp	r1, r3
 8004f32:	d119      	bne.n	8004f68 <_strtod_l+0x8d0>
 8004f34:	4b90      	ldr	r3, [pc, #576]	@ (8005178 <_strtod_l+0xae0>)
 8004f36:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004f38:	429a      	cmp	r2, r3
 8004f3a:	d102      	bne.n	8004f42 <_strtod_l+0x8aa>
 8004f3c:	3101      	adds	r1, #1
 8004f3e:	f43f adc6 	beq.w	8004ace <_strtod_l+0x436>
 8004f42:	f04f 0a00 	mov.w	sl, #0
 8004f46:	4b8b      	ldr	r3, [pc, #556]	@ (8005174 <_strtod_l+0xadc>)
 8004f48:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004f4a:	401a      	ands	r2, r3
 8004f4c:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 8004f50:	9b08      	ldr	r3, [sp, #32]
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d1b9      	bne.n	8004eca <_strtod_l+0x832>
 8004f56:	e5c5      	b.n	8004ae4 <_strtod_l+0x44c>
 8004f58:	f04f 33ff 	mov.w	r3, #4294967295
 8004f5c:	e7e8      	b.n	8004f30 <_strtod_l+0x898>
 8004f5e:	4613      	mov	r3, r2
 8004f60:	e7e6      	b.n	8004f30 <_strtod_l+0x898>
 8004f62:	ea53 030a 	orrs.w	r3, r3, sl
 8004f66:	d0a2      	beq.n	8004eae <_strtod_l+0x816>
 8004f68:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8004f6a:	b1db      	cbz	r3, 8004fa4 <_strtod_l+0x90c>
 8004f6c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8004f6e:	4213      	tst	r3, r2
 8004f70:	d0ee      	beq.n	8004f50 <_strtod_l+0x8b8>
 8004f72:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004f74:	4650      	mov	r0, sl
 8004f76:	4659      	mov	r1, fp
 8004f78:	9a08      	ldr	r2, [sp, #32]
 8004f7a:	b1bb      	cbz	r3, 8004fac <_strtod_l+0x914>
 8004f7c:	f7ff fb68 	bl	8004650 <sulp>
 8004f80:	4602      	mov	r2, r0
 8004f82:	460b      	mov	r3, r1
 8004f84:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004f88:	f7fb f8f0 	bl	800016c <__adddf3>
 8004f8c:	4682      	mov	sl, r0
 8004f8e:	468b      	mov	fp, r1
 8004f90:	e7de      	b.n	8004f50 <_strtod_l+0x8b8>
 8004f92:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 8004f96:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8004f9a:	f04f 3aff 	mov.w	sl, #4294967295
 8004f9e:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8004fa2:	e7d5      	b.n	8004f50 <_strtod_l+0x8b8>
 8004fa4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8004fa6:	ea13 0f0a 	tst.w	r3, sl
 8004faa:	e7e1      	b.n	8004f70 <_strtod_l+0x8d8>
 8004fac:	f7ff fb50 	bl	8004650 <sulp>
 8004fb0:	4602      	mov	r2, r0
 8004fb2:	460b      	mov	r3, r1
 8004fb4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8004fb8:	f7fb f8d6 	bl	8000168 <__aeabi_dsub>
 8004fbc:	2200      	movs	r2, #0
 8004fbe:	2300      	movs	r3, #0
 8004fc0:	4682      	mov	sl, r0
 8004fc2:	468b      	mov	fp, r1
 8004fc4:	f7fb fcf0 	bl	80009a8 <__aeabi_dcmpeq>
 8004fc8:	2800      	cmp	r0, #0
 8004fca:	d0c1      	beq.n	8004f50 <_strtod_l+0x8b8>
 8004fcc:	e615      	b.n	8004bfa <_strtod_l+0x562>
 8004fce:	4641      	mov	r1, r8
 8004fd0:	4620      	mov	r0, r4
 8004fd2:	f7ff fac9 	bl	8004568 <__ratio>
 8004fd6:	2200      	movs	r2, #0
 8004fd8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8004fdc:	4606      	mov	r6, r0
 8004fde:	460f      	mov	r7, r1
 8004fe0:	f7fb fcf6 	bl	80009d0 <__aeabi_dcmple>
 8004fe4:	2800      	cmp	r0, #0
 8004fe6:	d06d      	beq.n	80050c4 <_strtod_l+0xa2c>
 8004fe8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	d178      	bne.n	80050e0 <_strtod_l+0xa48>
 8004fee:	f1ba 0f00 	cmp.w	sl, #0
 8004ff2:	d156      	bne.n	80050a2 <_strtod_l+0xa0a>
 8004ff4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8004ff6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004ffa:	2b00      	cmp	r3, #0
 8004ffc:	d158      	bne.n	80050b0 <_strtod_l+0xa18>
 8004ffe:	2200      	movs	r2, #0
 8005000:	4630      	mov	r0, r6
 8005002:	4639      	mov	r1, r7
 8005004:	4b5d      	ldr	r3, [pc, #372]	@ (800517c <_strtod_l+0xae4>)
 8005006:	f7fb fcd9 	bl	80009bc <__aeabi_dcmplt>
 800500a:	2800      	cmp	r0, #0
 800500c:	d157      	bne.n	80050be <_strtod_l+0xa26>
 800500e:	4630      	mov	r0, r6
 8005010:	4639      	mov	r1, r7
 8005012:	2200      	movs	r2, #0
 8005014:	4b5a      	ldr	r3, [pc, #360]	@ (8005180 <_strtod_l+0xae8>)
 8005016:	f7fb fa5f 	bl	80004d8 <__aeabi_dmul>
 800501a:	4606      	mov	r6, r0
 800501c:	460f      	mov	r7, r1
 800501e:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 8005022:	9606      	str	r6, [sp, #24]
 8005024:	9307      	str	r3, [sp, #28]
 8005026:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800502a:	4d52      	ldr	r5, [pc, #328]	@ (8005174 <_strtod_l+0xadc>)
 800502c:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 8005030:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005032:	401d      	ands	r5, r3
 8005034:	4b53      	ldr	r3, [pc, #332]	@ (8005184 <_strtod_l+0xaec>)
 8005036:	429d      	cmp	r5, r3
 8005038:	f040 80aa 	bne.w	8005190 <_strtod_l+0xaf8>
 800503c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800503e:	4650      	mov	r0, sl
 8005040:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 8005044:	4659      	mov	r1, fp
 8005046:	f7ff f9cf 	bl	80043e8 <__ulp>
 800504a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800504e:	f7fb fa43 	bl	80004d8 <__aeabi_dmul>
 8005052:	4652      	mov	r2, sl
 8005054:	465b      	mov	r3, fp
 8005056:	f7fb f889 	bl	800016c <__adddf3>
 800505a:	460b      	mov	r3, r1
 800505c:	4945      	ldr	r1, [pc, #276]	@ (8005174 <_strtod_l+0xadc>)
 800505e:	4a4a      	ldr	r2, [pc, #296]	@ (8005188 <_strtod_l+0xaf0>)
 8005060:	4019      	ands	r1, r3
 8005062:	4291      	cmp	r1, r2
 8005064:	4682      	mov	sl, r0
 8005066:	d942      	bls.n	80050ee <_strtod_l+0xa56>
 8005068:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800506a:	4b43      	ldr	r3, [pc, #268]	@ (8005178 <_strtod_l+0xae0>)
 800506c:	429a      	cmp	r2, r3
 800506e:	d103      	bne.n	8005078 <_strtod_l+0x9e0>
 8005070:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005072:	3301      	adds	r3, #1
 8005074:	f43f ad2b 	beq.w	8004ace <_strtod_l+0x436>
 8005078:	f04f 3aff 	mov.w	sl, #4294967295
 800507c:	f8df b0f8 	ldr.w	fp, [pc, #248]	@ 8005178 <_strtod_l+0xae0>
 8005080:	991a      	ldr	r1, [sp, #104]	@ 0x68
 8005082:	9805      	ldr	r0, [sp, #20]
 8005084:	f7fe fe7e 	bl	8003d84 <_Bfree>
 8005088:	4649      	mov	r1, r9
 800508a:	9805      	ldr	r0, [sp, #20]
 800508c:	f7fe fe7a 	bl	8003d84 <_Bfree>
 8005090:	4641      	mov	r1, r8
 8005092:	9805      	ldr	r0, [sp, #20]
 8005094:	f7fe fe76 	bl	8003d84 <_Bfree>
 8005098:	4621      	mov	r1, r4
 800509a:	9805      	ldr	r0, [sp, #20]
 800509c:	f7fe fe72 	bl	8003d84 <_Bfree>
 80050a0:	e618      	b.n	8004cd4 <_strtod_l+0x63c>
 80050a2:	f1ba 0f01 	cmp.w	sl, #1
 80050a6:	d103      	bne.n	80050b0 <_strtod_l+0xa18>
 80050a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80050aa:	2b00      	cmp	r3, #0
 80050ac:	f43f ada5 	beq.w	8004bfa <_strtod_l+0x562>
 80050b0:	2200      	movs	r2, #0
 80050b2:	4b36      	ldr	r3, [pc, #216]	@ (800518c <_strtod_l+0xaf4>)
 80050b4:	2600      	movs	r6, #0
 80050b6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80050ba:	4f30      	ldr	r7, [pc, #192]	@ (800517c <_strtod_l+0xae4>)
 80050bc:	e7b3      	b.n	8005026 <_strtod_l+0x98e>
 80050be:	2600      	movs	r6, #0
 80050c0:	4f2f      	ldr	r7, [pc, #188]	@ (8005180 <_strtod_l+0xae8>)
 80050c2:	e7ac      	b.n	800501e <_strtod_l+0x986>
 80050c4:	4630      	mov	r0, r6
 80050c6:	4639      	mov	r1, r7
 80050c8:	4b2d      	ldr	r3, [pc, #180]	@ (8005180 <_strtod_l+0xae8>)
 80050ca:	2200      	movs	r2, #0
 80050cc:	f7fb fa04 	bl	80004d8 <__aeabi_dmul>
 80050d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80050d2:	4606      	mov	r6, r0
 80050d4:	460f      	mov	r7, r1
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d0a1      	beq.n	800501e <_strtod_l+0x986>
 80050da:	e9cd 6706 	strd	r6, r7, [sp, #24]
 80050de:	e7a2      	b.n	8005026 <_strtod_l+0x98e>
 80050e0:	2200      	movs	r2, #0
 80050e2:	4b26      	ldr	r3, [pc, #152]	@ (800517c <_strtod_l+0xae4>)
 80050e4:	4616      	mov	r6, r2
 80050e6:	461f      	mov	r7, r3
 80050e8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80050ec:	e79b      	b.n	8005026 <_strtod_l+0x98e>
 80050ee:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 80050f2:	9b08      	ldr	r3, [sp, #32]
 80050f4:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 80050f8:	2b00      	cmp	r3, #0
 80050fa:	d1c1      	bne.n	8005080 <_strtod_l+0x9e8>
 80050fc:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 8005100:	0d1b      	lsrs	r3, r3, #20
 8005102:	051b      	lsls	r3, r3, #20
 8005104:	429d      	cmp	r5, r3
 8005106:	d1bb      	bne.n	8005080 <_strtod_l+0x9e8>
 8005108:	4630      	mov	r0, r6
 800510a:	4639      	mov	r1, r7
 800510c:	f7fb fd2c 	bl	8000b68 <__aeabi_d2lz>
 8005110:	f7fb f9b4 	bl	800047c <__aeabi_l2d>
 8005114:	4602      	mov	r2, r0
 8005116:	460b      	mov	r3, r1
 8005118:	4630      	mov	r0, r6
 800511a:	4639      	mov	r1, r7
 800511c:	f7fb f824 	bl	8000168 <__aeabi_dsub>
 8005120:	460b      	mov	r3, r1
 8005122:	4602      	mov	r2, r0
 8005124:	f3cb 0613 	ubfx	r6, fp, #0, #20
 8005128:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800512c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800512e:	ea46 060a 	orr.w	r6, r6, sl
 8005132:	431e      	orrs	r6, r3
 8005134:	d069      	beq.n	800520a <_strtod_l+0xb72>
 8005136:	a30a      	add	r3, pc, #40	@ (adr r3, 8005160 <_strtod_l+0xac8>)
 8005138:	e9d3 2300 	ldrd	r2, r3, [r3]
 800513c:	f7fb fc3e 	bl	80009bc <__aeabi_dcmplt>
 8005140:	2800      	cmp	r0, #0
 8005142:	f47f accf 	bne.w	8004ae4 <_strtod_l+0x44c>
 8005146:	a308      	add	r3, pc, #32	@ (adr r3, 8005168 <_strtod_l+0xad0>)
 8005148:	e9d3 2300 	ldrd	r2, r3, [r3]
 800514c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8005150:	f7fb fc52 	bl	80009f8 <__aeabi_dcmpgt>
 8005154:	2800      	cmp	r0, #0
 8005156:	d093      	beq.n	8005080 <_strtod_l+0x9e8>
 8005158:	e4c4      	b.n	8004ae4 <_strtod_l+0x44c>
 800515a:	bf00      	nop
 800515c:	f3af 8000 	nop.w
 8005160:	94a03595 	.word	0x94a03595
 8005164:	3fdfffff 	.word	0x3fdfffff
 8005168:	35afe535 	.word	0x35afe535
 800516c:	3fe00000 	.word	0x3fe00000
 8005170:	000fffff 	.word	0x000fffff
 8005174:	7ff00000 	.word	0x7ff00000
 8005178:	7fefffff 	.word	0x7fefffff
 800517c:	3ff00000 	.word	0x3ff00000
 8005180:	3fe00000 	.word	0x3fe00000
 8005184:	7fe00000 	.word	0x7fe00000
 8005188:	7c9fffff 	.word	0x7c9fffff
 800518c:	bff00000 	.word	0xbff00000
 8005190:	9b08      	ldr	r3, [sp, #32]
 8005192:	b323      	cbz	r3, 80051de <_strtod_l+0xb46>
 8005194:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 8005198:	d821      	bhi.n	80051de <_strtod_l+0xb46>
 800519a:	a327      	add	r3, pc, #156	@ (adr r3, 8005238 <_strtod_l+0xba0>)
 800519c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80051a0:	4630      	mov	r0, r6
 80051a2:	4639      	mov	r1, r7
 80051a4:	f7fb fc14 	bl	80009d0 <__aeabi_dcmple>
 80051a8:	b1a0      	cbz	r0, 80051d4 <_strtod_l+0xb3c>
 80051aa:	4639      	mov	r1, r7
 80051ac:	4630      	mov	r0, r6
 80051ae:	f7fb fc6b 	bl	8000a88 <__aeabi_d2uiz>
 80051b2:	2801      	cmp	r0, #1
 80051b4:	bf38      	it	cc
 80051b6:	2001      	movcc	r0, #1
 80051b8:	f7fb f914 	bl	80003e4 <__aeabi_ui2d>
 80051bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80051be:	4606      	mov	r6, r0
 80051c0:	460f      	mov	r7, r1
 80051c2:	b9fb      	cbnz	r3, 8005204 <_strtod_l+0xb6c>
 80051c4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 80051c8:	9014      	str	r0, [sp, #80]	@ 0x50
 80051ca:	9315      	str	r3, [sp, #84]	@ 0x54
 80051cc:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 80051d0:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 80051d4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80051d6:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 80051da:	1b5b      	subs	r3, r3, r5
 80051dc:	9311      	str	r3, [sp, #68]	@ 0x44
 80051de:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80051e2:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 80051e6:	f7ff f8ff 	bl	80043e8 <__ulp>
 80051ea:	4602      	mov	r2, r0
 80051ec:	460b      	mov	r3, r1
 80051ee:	4650      	mov	r0, sl
 80051f0:	4659      	mov	r1, fp
 80051f2:	f7fb f971 	bl	80004d8 <__aeabi_dmul>
 80051f6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 80051fa:	f7fa ffb7 	bl	800016c <__adddf3>
 80051fe:	4682      	mov	sl, r0
 8005200:	468b      	mov	fp, r1
 8005202:	e776      	b.n	80050f2 <_strtod_l+0xa5a>
 8005204:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 8005208:	e7e0      	b.n	80051cc <_strtod_l+0xb34>
 800520a:	a30d      	add	r3, pc, #52	@ (adr r3, 8005240 <_strtod_l+0xba8>)
 800520c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005210:	f7fb fbd4 	bl	80009bc <__aeabi_dcmplt>
 8005214:	e79e      	b.n	8005154 <_strtod_l+0xabc>
 8005216:	2300      	movs	r3, #0
 8005218:	930b      	str	r3, [sp, #44]	@ 0x2c
 800521a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800521c:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 800521e:	6013      	str	r3, [r2, #0]
 8005220:	f7ff ba77 	b.w	8004712 <_strtod_l+0x7a>
 8005224:	2a65      	cmp	r2, #101	@ 0x65
 8005226:	f43f ab6e 	beq.w	8004906 <_strtod_l+0x26e>
 800522a:	2a45      	cmp	r2, #69	@ 0x45
 800522c:	f43f ab6b 	beq.w	8004906 <_strtod_l+0x26e>
 8005230:	2301      	movs	r3, #1
 8005232:	f7ff bba6 	b.w	8004982 <_strtod_l+0x2ea>
 8005236:	bf00      	nop
 8005238:	ffc00000 	.word	0xffc00000
 800523c:	41dfffff 	.word	0x41dfffff
 8005240:	94a03595 	.word	0x94a03595
 8005244:	3fcfffff 	.word	0x3fcfffff

08005248 <_strtod_r>:
 8005248:	4b01      	ldr	r3, [pc, #4]	@ (8005250 <_strtod_r+0x8>)
 800524a:	f7ff ba25 	b.w	8004698 <_strtod_l>
 800524e:	bf00      	nop
 8005250:	20000068 	.word	0x20000068

08005254 <_strtol_l.constprop.0>:
 8005254:	2b24      	cmp	r3, #36	@ 0x24
 8005256:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800525a:	4686      	mov	lr, r0
 800525c:	4690      	mov	r8, r2
 800525e:	d801      	bhi.n	8005264 <_strtol_l.constprop.0+0x10>
 8005260:	2b01      	cmp	r3, #1
 8005262:	d106      	bne.n	8005272 <_strtol_l.constprop.0+0x1e>
 8005264:	f7fd fdc0 	bl	8002de8 <__errno>
 8005268:	2316      	movs	r3, #22
 800526a:	6003      	str	r3, [r0, #0]
 800526c:	2000      	movs	r0, #0
 800526e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005272:	460d      	mov	r5, r1
 8005274:	4833      	ldr	r0, [pc, #204]	@ (8005344 <_strtol_l.constprop.0+0xf0>)
 8005276:	462a      	mov	r2, r5
 8005278:	f815 4b01 	ldrb.w	r4, [r5], #1
 800527c:	5d06      	ldrb	r6, [r0, r4]
 800527e:	f016 0608 	ands.w	r6, r6, #8
 8005282:	d1f8      	bne.n	8005276 <_strtol_l.constprop.0+0x22>
 8005284:	2c2d      	cmp	r4, #45	@ 0x2d
 8005286:	d12d      	bne.n	80052e4 <_strtol_l.constprop.0+0x90>
 8005288:	2601      	movs	r6, #1
 800528a:	782c      	ldrb	r4, [r5, #0]
 800528c:	1c95      	adds	r5, r2, #2
 800528e:	f033 0210 	bics.w	r2, r3, #16
 8005292:	d109      	bne.n	80052a8 <_strtol_l.constprop.0+0x54>
 8005294:	2c30      	cmp	r4, #48	@ 0x30
 8005296:	d12a      	bne.n	80052ee <_strtol_l.constprop.0+0x9a>
 8005298:	782a      	ldrb	r2, [r5, #0]
 800529a:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800529e:	2a58      	cmp	r2, #88	@ 0x58
 80052a0:	d125      	bne.n	80052ee <_strtol_l.constprop.0+0x9a>
 80052a2:	2310      	movs	r3, #16
 80052a4:	786c      	ldrb	r4, [r5, #1]
 80052a6:	3502      	adds	r5, #2
 80052a8:	2200      	movs	r2, #0
 80052aa:	f106 4c00 	add.w	ip, r6, #2147483648	@ 0x80000000
 80052ae:	f10c 3cff 	add.w	ip, ip, #4294967295
 80052b2:	fbbc f9f3 	udiv	r9, ip, r3
 80052b6:	4610      	mov	r0, r2
 80052b8:	fb03 ca19 	mls	sl, r3, r9, ip
 80052bc:	f1a4 0730 	sub.w	r7, r4, #48	@ 0x30
 80052c0:	2f09      	cmp	r7, #9
 80052c2:	d81b      	bhi.n	80052fc <_strtol_l.constprop.0+0xa8>
 80052c4:	463c      	mov	r4, r7
 80052c6:	42a3      	cmp	r3, r4
 80052c8:	dd27      	ble.n	800531a <_strtol_l.constprop.0+0xc6>
 80052ca:	1c57      	adds	r7, r2, #1
 80052cc:	d007      	beq.n	80052de <_strtol_l.constprop.0+0x8a>
 80052ce:	4581      	cmp	r9, r0
 80052d0:	d320      	bcc.n	8005314 <_strtol_l.constprop.0+0xc0>
 80052d2:	d101      	bne.n	80052d8 <_strtol_l.constprop.0+0x84>
 80052d4:	45a2      	cmp	sl, r4
 80052d6:	db1d      	blt.n	8005314 <_strtol_l.constprop.0+0xc0>
 80052d8:	2201      	movs	r2, #1
 80052da:	fb00 4003 	mla	r0, r0, r3, r4
 80052de:	f815 4b01 	ldrb.w	r4, [r5], #1
 80052e2:	e7eb      	b.n	80052bc <_strtol_l.constprop.0+0x68>
 80052e4:	2c2b      	cmp	r4, #43	@ 0x2b
 80052e6:	bf04      	itt	eq
 80052e8:	782c      	ldrbeq	r4, [r5, #0]
 80052ea:	1c95      	addeq	r5, r2, #2
 80052ec:	e7cf      	b.n	800528e <_strtol_l.constprop.0+0x3a>
 80052ee:	2b00      	cmp	r3, #0
 80052f0:	d1da      	bne.n	80052a8 <_strtol_l.constprop.0+0x54>
 80052f2:	2c30      	cmp	r4, #48	@ 0x30
 80052f4:	bf0c      	ite	eq
 80052f6:	2308      	moveq	r3, #8
 80052f8:	230a      	movne	r3, #10
 80052fa:	e7d5      	b.n	80052a8 <_strtol_l.constprop.0+0x54>
 80052fc:	f1a4 0741 	sub.w	r7, r4, #65	@ 0x41
 8005300:	2f19      	cmp	r7, #25
 8005302:	d801      	bhi.n	8005308 <_strtol_l.constprop.0+0xb4>
 8005304:	3c37      	subs	r4, #55	@ 0x37
 8005306:	e7de      	b.n	80052c6 <_strtol_l.constprop.0+0x72>
 8005308:	f1a4 0761 	sub.w	r7, r4, #97	@ 0x61
 800530c:	2f19      	cmp	r7, #25
 800530e:	d804      	bhi.n	800531a <_strtol_l.constprop.0+0xc6>
 8005310:	3c57      	subs	r4, #87	@ 0x57
 8005312:	e7d8      	b.n	80052c6 <_strtol_l.constprop.0+0x72>
 8005314:	f04f 32ff 	mov.w	r2, #4294967295
 8005318:	e7e1      	b.n	80052de <_strtol_l.constprop.0+0x8a>
 800531a:	1c53      	adds	r3, r2, #1
 800531c:	d108      	bne.n	8005330 <_strtol_l.constprop.0+0xdc>
 800531e:	2322      	movs	r3, #34	@ 0x22
 8005320:	4660      	mov	r0, ip
 8005322:	f8ce 3000 	str.w	r3, [lr]
 8005326:	f1b8 0f00 	cmp.w	r8, #0
 800532a:	d0a0      	beq.n	800526e <_strtol_l.constprop.0+0x1a>
 800532c:	1e69      	subs	r1, r5, #1
 800532e:	e006      	b.n	800533e <_strtol_l.constprop.0+0xea>
 8005330:	b106      	cbz	r6, 8005334 <_strtol_l.constprop.0+0xe0>
 8005332:	4240      	negs	r0, r0
 8005334:	f1b8 0f00 	cmp.w	r8, #0
 8005338:	d099      	beq.n	800526e <_strtol_l.constprop.0+0x1a>
 800533a:	2a00      	cmp	r2, #0
 800533c:	d1f6      	bne.n	800532c <_strtol_l.constprop.0+0xd8>
 800533e:	f8c8 1000 	str.w	r1, [r8]
 8005342:	e794      	b.n	800526e <_strtol_l.constprop.0+0x1a>
 8005344:	08006789 	.word	0x08006789

08005348 <_strtol_r>:
 8005348:	f7ff bf84 	b.w	8005254 <_strtol_l.constprop.0>

0800534c <__ssputs_r>:
 800534c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005350:	461f      	mov	r7, r3
 8005352:	688e      	ldr	r6, [r1, #8]
 8005354:	4682      	mov	sl, r0
 8005356:	42be      	cmp	r6, r7
 8005358:	460c      	mov	r4, r1
 800535a:	4690      	mov	r8, r2
 800535c:	680b      	ldr	r3, [r1, #0]
 800535e:	d82d      	bhi.n	80053bc <__ssputs_r+0x70>
 8005360:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005364:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8005368:	d026      	beq.n	80053b8 <__ssputs_r+0x6c>
 800536a:	6965      	ldr	r5, [r4, #20]
 800536c:	6909      	ldr	r1, [r1, #16]
 800536e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005372:	eba3 0901 	sub.w	r9, r3, r1
 8005376:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800537a:	1c7b      	adds	r3, r7, #1
 800537c:	444b      	add	r3, r9
 800537e:	106d      	asrs	r5, r5, #1
 8005380:	429d      	cmp	r5, r3
 8005382:	bf38      	it	cc
 8005384:	461d      	movcc	r5, r3
 8005386:	0553      	lsls	r3, r2, #21
 8005388:	d527      	bpl.n	80053da <__ssputs_r+0x8e>
 800538a:	4629      	mov	r1, r5
 800538c:	f7fe fc2e 	bl	8003bec <_malloc_r>
 8005390:	4606      	mov	r6, r0
 8005392:	b360      	cbz	r0, 80053ee <__ssputs_r+0xa2>
 8005394:	464a      	mov	r2, r9
 8005396:	6921      	ldr	r1, [r4, #16]
 8005398:	f000 fa14 	bl	80057c4 <memcpy>
 800539c:	89a3      	ldrh	r3, [r4, #12]
 800539e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80053a2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80053a6:	81a3      	strh	r3, [r4, #12]
 80053a8:	6126      	str	r6, [r4, #16]
 80053aa:	444e      	add	r6, r9
 80053ac:	6026      	str	r6, [r4, #0]
 80053ae:	463e      	mov	r6, r7
 80053b0:	6165      	str	r5, [r4, #20]
 80053b2:	eba5 0509 	sub.w	r5, r5, r9
 80053b6:	60a5      	str	r5, [r4, #8]
 80053b8:	42be      	cmp	r6, r7
 80053ba:	d900      	bls.n	80053be <__ssputs_r+0x72>
 80053bc:	463e      	mov	r6, r7
 80053be:	4632      	mov	r2, r6
 80053c0:	4641      	mov	r1, r8
 80053c2:	6820      	ldr	r0, [r4, #0]
 80053c4:	f000 f9c2 	bl	800574c <memmove>
 80053c8:	2000      	movs	r0, #0
 80053ca:	68a3      	ldr	r3, [r4, #8]
 80053cc:	1b9b      	subs	r3, r3, r6
 80053ce:	60a3      	str	r3, [r4, #8]
 80053d0:	6823      	ldr	r3, [r4, #0]
 80053d2:	4433      	add	r3, r6
 80053d4:	6023      	str	r3, [r4, #0]
 80053d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80053da:	462a      	mov	r2, r5
 80053dc:	f000 fd83 	bl	8005ee6 <_realloc_r>
 80053e0:	4606      	mov	r6, r0
 80053e2:	2800      	cmp	r0, #0
 80053e4:	d1e0      	bne.n	80053a8 <__ssputs_r+0x5c>
 80053e6:	4650      	mov	r0, sl
 80053e8:	6921      	ldr	r1, [r4, #16]
 80053ea:	f7fe fb8d 	bl	8003b08 <_free_r>
 80053ee:	230c      	movs	r3, #12
 80053f0:	f8ca 3000 	str.w	r3, [sl]
 80053f4:	89a3      	ldrh	r3, [r4, #12]
 80053f6:	f04f 30ff 	mov.w	r0, #4294967295
 80053fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80053fe:	81a3      	strh	r3, [r4, #12]
 8005400:	e7e9      	b.n	80053d6 <__ssputs_r+0x8a>
	...

08005404 <_svfiprintf_r>:
 8005404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005408:	4698      	mov	r8, r3
 800540a:	898b      	ldrh	r3, [r1, #12]
 800540c:	4607      	mov	r7, r0
 800540e:	061b      	lsls	r3, r3, #24
 8005410:	460d      	mov	r5, r1
 8005412:	4614      	mov	r4, r2
 8005414:	b09d      	sub	sp, #116	@ 0x74
 8005416:	d510      	bpl.n	800543a <_svfiprintf_r+0x36>
 8005418:	690b      	ldr	r3, [r1, #16]
 800541a:	b973      	cbnz	r3, 800543a <_svfiprintf_r+0x36>
 800541c:	2140      	movs	r1, #64	@ 0x40
 800541e:	f7fe fbe5 	bl	8003bec <_malloc_r>
 8005422:	6028      	str	r0, [r5, #0]
 8005424:	6128      	str	r0, [r5, #16]
 8005426:	b930      	cbnz	r0, 8005436 <_svfiprintf_r+0x32>
 8005428:	230c      	movs	r3, #12
 800542a:	603b      	str	r3, [r7, #0]
 800542c:	f04f 30ff 	mov.w	r0, #4294967295
 8005430:	b01d      	add	sp, #116	@ 0x74
 8005432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005436:	2340      	movs	r3, #64	@ 0x40
 8005438:	616b      	str	r3, [r5, #20]
 800543a:	2300      	movs	r3, #0
 800543c:	9309      	str	r3, [sp, #36]	@ 0x24
 800543e:	2320      	movs	r3, #32
 8005440:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005444:	2330      	movs	r3, #48	@ 0x30
 8005446:	f04f 0901 	mov.w	r9, #1
 800544a:	f8cd 800c 	str.w	r8, [sp, #12]
 800544e:	f8df 8198 	ldr.w	r8, [pc, #408]	@ 80055e8 <_svfiprintf_r+0x1e4>
 8005452:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005456:	4623      	mov	r3, r4
 8005458:	469a      	mov	sl, r3
 800545a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800545e:	b10a      	cbz	r2, 8005464 <_svfiprintf_r+0x60>
 8005460:	2a25      	cmp	r2, #37	@ 0x25
 8005462:	d1f9      	bne.n	8005458 <_svfiprintf_r+0x54>
 8005464:	ebba 0b04 	subs.w	fp, sl, r4
 8005468:	d00b      	beq.n	8005482 <_svfiprintf_r+0x7e>
 800546a:	465b      	mov	r3, fp
 800546c:	4622      	mov	r2, r4
 800546e:	4629      	mov	r1, r5
 8005470:	4638      	mov	r0, r7
 8005472:	f7ff ff6b 	bl	800534c <__ssputs_r>
 8005476:	3001      	adds	r0, #1
 8005478:	f000 80a7 	beq.w	80055ca <_svfiprintf_r+0x1c6>
 800547c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800547e:	445a      	add	r2, fp
 8005480:	9209      	str	r2, [sp, #36]	@ 0x24
 8005482:	f89a 3000 	ldrb.w	r3, [sl]
 8005486:	2b00      	cmp	r3, #0
 8005488:	f000 809f 	beq.w	80055ca <_svfiprintf_r+0x1c6>
 800548c:	2300      	movs	r3, #0
 800548e:	f04f 32ff 	mov.w	r2, #4294967295
 8005492:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005496:	f10a 0a01 	add.w	sl, sl, #1
 800549a:	9304      	str	r3, [sp, #16]
 800549c:	9307      	str	r3, [sp, #28]
 800549e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80054a2:	931a      	str	r3, [sp, #104]	@ 0x68
 80054a4:	4654      	mov	r4, sl
 80054a6:	2205      	movs	r2, #5
 80054a8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80054ac:	484e      	ldr	r0, [pc, #312]	@ (80055e8 <_svfiprintf_r+0x1e4>)
 80054ae:	f7fd fcc8 	bl	8002e42 <memchr>
 80054b2:	9a04      	ldr	r2, [sp, #16]
 80054b4:	b9d8      	cbnz	r0, 80054ee <_svfiprintf_r+0xea>
 80054b6:	06d0      	lsls	r0, r2, #27
 80054b8:	bf44      	itt	mi
 80054ba:	2320      	movmi	r3, #32
 80054bc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80054c0:	0711      	lsls	r1, r2, #28
 80054c2:	bf44      	itt	mi
 80054c4:	232b      	movmi	r3, #43	@ 0x2b
 80054c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80054ca:	f89a 3000 	ldrb.w	r3, [sl]
 80054ce:	2b2a      	cmp	r3, #42	@ 0x2a
 80054d0:	d015      	beq.n	80054fe <_svfiprintf_r+0xfa>
 80054d2:	4654      	mov	r4, sl
 80054d4:	2000      	movs	r0, #0
 80054d6:	f04f 0c0a 	mov.w	ip, #10
 80054da:	9a07      	ldr	r2, [sp, #28]
 80054dc:	4621      	mov	r1, r4
 80054de:	f811 3b01 	ldrb.w	r3, [r1], #1
 80054e2:	3b30      	subs	r3, #48	@ 0x30
 80054e4:	2b09      	cmp	r3, #9
 80054e6:	d94b      	bls.n	8005580 <_svfiprintf_r+0x17c>
 80054e8:	b1b0      	cbz	r0, 8005518 <_svfiprintf_r+0x114>
 80054ea:	9207      	str	r2, [sp, #28]
 80054ec:	e014      	b.n	8005518 <_svfiprintf_r+0x114>
 80054ee:	eba0 0308 	sub.w	r3, r0, r8
 80054f2:	fa09 f303 	lsl.w	r3, r9, r3
 80054f6:	4313      	orrs	r3, r2
 80054f8:	46a2      	mov	sl, r4
 80054fa:	9304      	str	r3, [sp, #16]
 80054fc:	e7d2      	b.n	80054a4 <_svfiprintf_r+0xa0>
 80054fe:	9b03      	ldr	r3, [sp, #12]
 8005500:	1d19      	adds	r1, r3, #4
 8005502:	681b      	ldr	r3, [r3, #0]
 8005504:	9103      	str	r1, [sp, #12]
 8005506:	2b00      	cmp	r3, #0
 8005508:	bfbb      	ittet	lt
 800550a:	425b      	neglt	r3, r3
 800550c:	f042 0202 	orrlt.w	r2, r2, #2
 8005510:	9307      	strge	r3, [sp, #28]
 8005512:	9307      	strlt	r3, [sp, #28]
 8005514:	bfb8      	it	lt
 8005516:	9204      	strlt	r2, [sp, #16]
 8005518:	7823      	ldrb	r3, [r4, #0]
 800551a:	2b2e      	cmp	r3, #46	@ 0x2e
 800551c:	d10a      	bne.n	8005534 <_svfiprintf_r+0x130>
 800551e:	7863      	ldrb	r3, [r4, #1]
 8005520:	2b2a      	cmp	r3, #42	@ 0x2a
 8005522:	d132      	bne.n	800558a <_svfiprintf_r+0x186>
 8005524:	9b03      	ldr	r3, [sp, #12]
 8005526:	3402      	adds	r4, #2
 8005528:	1d1a      	adds	r2, r3, #4
 800552a:	681b      	ldr	r3, [r3, #0]
 800552c:	9203      	str	r2, [sp, #12]
 800552e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005532:	9305      	str	r3, [sp, #20]
 8005534:	f8df a0b4 	ldr.w	sl, [pc, #180]	@ 80055ec <_svfiprintf_r+0x1e8>
 8005538:	2203      	movs	r2, #3
 800553a:	4650      	mov	r0, sl
 800553c:	7821      	ldrb	r1, [r4, #0]
 800553e:	f7fd fc80 	bl	8002e42 <memchr>
 8005542:	b138      	cbz	r0, 8005554 <_svfiprintf_r+0x150>
 8005544:	2240      	movs	r2, #64	@ 0x40
 8005546:	9b04      	ldr	r3, [sp, #16]
 8005548:	eba0 000a 	sub.w	r0, r0, sl
 800554c:	4082      	lsls	r2, r0
 800554e:	4313      	orrs	r3, r2
 8005550:	3401      	adds	r4, #1
 8005552:	9304      	str	r3, [sp, #16]
 8005554:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005558:	2206      	movs	r2, #6
 800555a:	4825      	ldr	r0, [pc, #148]	@ (80055f0 <_svfiprintf_r+0x1ec>)
 800555c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005560:	f7fd fc6f 	bl	8002e42 <memchr>
 8005564:	2800      	cmp	r0, #0
 8005566:	d036      	beq.n	80055d6 <_svfiprintf_r+0x1d2>
 8005568:	4b22      	ldr	r3, [pc, #136]	@ (80055f4 <_svfiprintf_r+0x1f0>)
 800556a:	bb1b      	cbnz	r3, 80055b4 <_svfiprintf_r+0x1b0>
 800556c:	9b03      	ldr	r3, [sp, #12]
 800556e:	3307      	adds	r3, #7
 8005570:	f023 0307 	bic.w	r3, r3, #7
 8005574:	3308      	adds	r3, #8
 8005576:	9303      	str	r3, [sp, #12]
 8005578:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800557a:	4433      	add	r3, r6
 800557c:	9309      	str	r3, [sp, #36]	@ 0x24
 800557e:	e76a      	b.n	8005456 <_svfiprintf_r+0x52>
 8005580:	460c      	mov	r4, r1
 8005582:	2001      	movs	r0, #1
 8005584:	fb0c 3202 	mla	r2, ip, r2, r3
 8005588:	e7a8      	b.n	80054dc <_svfiprintf_r+0xd8>
 800558a:	2300      	movs	r3, #0
 800558c:	f04f 0c0a 	mov.w	ip, #10
 8005590:	4619      	mov	r1, r3
 8005592:	3401      	adds	r4, #1
 8005594:	9305      	str	r3, [sp, #20]
 8005596:	4620      	mov	r0, r4
 8005598:	f810 2b01 	ldrb.w	r2, [r0], #1
 800559c:	3a30      	subs	r2, #48	@ 0x30
 800559e:	2a09      	cmp	r2, #9
 80055a0:	d903      	bls.n	80055aa <_svfiprintf_r+0x1a6>
 80055a2:	2b00      	cmp	r3, #0
 80055a4:	d0c6      	beq.n	8005534 <_svfiprintf_r+0x130>
 80055a6:	9105      	str	r1, [sp, #20]
 80055a8:	e7c4      	b.n	8005534 <_svfiprintf_r+0x130>
 80055aa:	4604      	mov	r4, r0
 80055ac:	2301      	movs	r3, #1
 80055ae:	fb0c 2101 	mla	r1, ip, r1, r2
 80055b2:	e7f0      	b.n	8005596 <_svfiprintf_r+0x192>
 80055b4:	ab03      	add	r3, sp, #12
 80055b6:	9300      	str	r3, [sp, #0]
 80055b8:	462a      	mov	r2, r5
 80055ba:	4638      	mov	r0, r7
 80055bc:	4b0e      	ldr	r3, [pc, #56]	@ (80055f8 <_svfiprintf_r+0x1f4>)
 80055be:	a904      	add	r1, sp, #16
 80055c0:	f7fc fccc 	bl	8001f5c <_printf_float>
 80055c4:	1c42      	adds	r2, r0, #1
 80055c6:	4606      	mov	r6, r0
 80055c8:	d1d6      	bne.n	8005578 <_svfiprintf_r+0x174>
 80055ca:	89ab      	ldrh	r3, [r5, #12]
 80055cc:	065b      	lsls	r3, r3, #25
 80055ce:	f53f af2d 	bmi.w	800542c <_svfiprintf_r+0x28>
 80055d2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80055d4:	e72c      	b.n	8005430 <_svfiprintf_r+0x2c>
 80055d6:	ab03      	add	r3, sp, #12
 80055d8:	9300      	str	r3, [sp, #0]
 80055da:	462a      	mov	r2, r5
 80055dc:	4638      	mov	r0, r7
 80055de:	4b06      	ldr	r3, [pc, #24]	@ (80055f8 <_svfiprintf_r+0x1f4>)
 80055e0:	a904      	add	r1, sp, #16
 80055e2:	f7fc ff59 	bl	8002498 <_printf_i>
 80055e6:	e7ed      	b.n	80055c4 <_svfiprintf_r+0x1c0>
 80055e8:	08006889 	.word	0x08006889
 80055ec:	0800688f 	.word	0x0800688f
 80055f0:	08006893 	.word	0x08006893
 80055f4:	08001f5d 	.word	0x08001f5d
 80055f8:	0800534d 	.word	0x0800534d

080055fc <__sflush_r>:
 80055fc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005602:	0716      	lsls	r6, r2, #28
 8005604:	4605      	mov	r5, r0
 8005606:	460c      	mov	r4, r1
 8005608:	d454      	bmi.n	80056b4 <__sflush_r+0xb8>
 800560a:	684b      	ldr	r3, [r1, #4]
 800560c:	2b00      	cmp	r3, #0
 800560e:	dc02      	bgt.n	8005616 <__sflush_r+0x1a>
 8005610:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8005612:	2b00      	cmp	r3, #0
 8005614:	dd48      	ble.n	80056a8 <__sflush_r+0xac>
 8005616:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005618:	2e00      	cmp	r6, #0
 800561a:	d045      	beq.n	80056a8 <__sflush_r+0xac>
 800561c:	2300      	movs	r3, #0
 800561e:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8005622:	682f      	ldr	r7, [r5, #0]
 8005624:	6a21      	ldr	r1, [r4, #32]
 8005626:	602b      	str	r3, [r5, #0]
 8005628:	d030      	beq.n	800568c <__sflush_r+0x90>
 800562a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800562c:	89a3      	ldrh	r3, [r4, #12]
 800562e:	0759      	lsls	r1, r3, #29
 8005630:	d505      	bpl.n	800563e <__sflush_r+0x42>
 8005632:	6863      	ldr	r3, [r4, #4]
 8005634:	1ad2      	subs	r2, r2, r3
 8005636:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005638:	b10b      	cbz	r3, 800563e <__sflush_r+0x42>
 800563a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800563c:	1ad2      	subs	r2, r2, r3
 800563e:	2300      	movs	r3, #0
 8005640:	4628      	mov	r0, r5
 8005642:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005644:	6a21      	ldr	r1, [r4, #32]
 8005646:	47b0      	blx	r6
 8005648:	1c43      	adds	r3, r0, #1
 800564a:	89a3      	ldrh	r3, [r4, #12]
 800564c:	d106      	bne.n	800565c <__sflush_r+0x60>
 800564e:	6829      	ldr	r1, [r5, #0]
 8005650:	291d      	cmp	r1, #29
 8005652:	d82b      	bhi.n	80056ac <__sflush_r+0xb0>
 8005654:	4a28      	ldr	r2, [pc, #160]	@ (80056f8 <__sflush_r+0xfc>)
 8005656:	410a      	asrs	r2, r1
 8005658:	07d6      	lsls	r6, r2, #31
 800565a:	d427      	bmi.n	80056ac <__sflush_r+0xb0>
 800565c:	2200      	movs	r2, #0
 800565e:	6062      	str	r2, [r4, #4]
 8005660:	6922      	ldr	r2, [r4, #16]
 8005662:	04d9      	lsls	r1, r3, #19
 8005664:	6022      	str	r2, [r4, #0]
 8005666:	d504      	bpl.n	8005672 <__sflush_r+0x76>
 8005668:	1c42      	adds	r2, r0, #1
 800566a:	d101      	bne.n	8005670 <__sflush_r+0x74>
 800566c:	682b      	ldr	r3, [r5, #0]
 800566e:	b903      	cbnz	r3, 8005672 <__sflush_r+0x76>
 8005670:	6560      	str	r0, [r4, #84]	@ 0x54
 8005672:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005674:	602f      	str	r7, [r5, #0]
 8005676:	b1b9      	cbz	r1, 80056a8 <__sflush_r+0xac>
 8005678:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800567c:	4299      	cmp	r1, r3
 800567e:	d002      	beq.n	8005686 <__sflush_r+0x8a>
 8005680:	4628      	mov	r0, r5
 8005682:	f7fe fa41 	bl	8003b08 <_free_r>
 8005686:	2300      	movs	r3, #0
 8005688:	6363      	str	r3, [r4, #52]	@ 0x34
 800568a:	e00d      	b.n	80056a8 <__sflush_r+0xac>
 800568c:	2301      	movs	r3, #1
 800568e:	4628      	mov	r0, r5
 8005690:	47b0      	blx	r6
 8005692:	4602      	mov	r2, r0
 8005694:	1c50      	adds	r0, r2, #1
 8005696:	d1c9      	bne.n	800562c <__sflush_r+0x30>
 8005698:	682b      	ldr	r3, [r5, #0]
 800569a:	2b00      	cmp	r3, #0
 800569c:	d0c6      	beq.n	800562c <__sflush_r+0x30>
 800569e:	2b1d      	cmp	r3, #29
 80056a0:	d001      	beq.n	80056a6 <__sflush_r+0xaa>
 80056a2:	2b16      	cmp	r3, #22
 80056a4:	d11d      	bne.n	80056e2 <__sflush_r+0xe6>
 80056a6:	602f      	str	r7, [r5, #0]
 80056a8:	2000      	movs	r0, #0
 80056aa:	e021      	b.n	80056f0 <__sflush_r+0xf4>
 80056ac:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80056b0:	b21b      	sxth	r3, r3
 80056b2:	e01a      	b.n	80056ea <__sflush_r+0xee>
 80056b4:	690f      	ldr	r7, [r1, #16]
 80056b6:	2f00      	cmp	r7, #0
 80056b8:	d0f6      	beq.n	80056a8 <__sflush_r+0xac>
 80056ba:	0793      	lsls	r3, r2, #30
 80056bc:	bf18      	it	ne
 80056be:	2300      	movne	r3, #0
 80056c0:	680e      	ldr	r6, [r1, #0]
 80056c2:	bf08      	it	eq
 80056c4:	694b      	ldreq	r3, [r1, #20]
 80056c6:	1bf6      	subs	r6, r6, r7
 80056c8:	600f      	str	r7, [r1, #0]
 80056ca:	608b      	str	r3, [r1, #8]
 80056cc:	2e00      	cmp	r6, #0
 80056ce:	ddeb      	ble.n	80056a8 <__sflush_r+0xac>
 80056d0:	4633      	mov	r3, r6
 80056d2:	463a      	mov	r2, r7
 80056d4:	4628      	mov	r0, r5
 80056d6:	6a21      	ldr	r1, [r4, #32]
 80056d8:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80056dc:	47e0      	blx	ip
 80056de:	2800      	cmp	r0, #0
 80056e0:	dc07      	bgt.n	80056f2 <__sflush_r+0xf6>
 80056e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80056e6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80056ea:	f04f 30ff 	mov.w	r0, #4294967295
 80056ee:	81a3      	strh	r3, [r4, #12]
 80056f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80056f2:	4407      	add	r7, r0
 80056f4:	1a36      	subs	r6, r6, r0
 80056f6:	e7e9      	b.n	80056cc <__sflush_r+0xd0>
 80056f8:	dfbffffe 	.word	0xdfbffffe

080056fc <_fflush_r>:
 80056fc:	b538      	push	{r3, r4, r5, lr}
 80056fe:	690b      	ldr	r3, [r1, #16]
 8005700:	4605      	mov	r5, r0
 8005702:	460c      	mov	r4, r1
 8005704:	b913      	cbnz	r3, 800570c <_fflush_r+0x10>
 8005706:	2500      	movs	r5, #0
 8005708:	4628      	mov	r0, r5
 800570a:	bd38      	pop	{r3, r4, r5, pc}
 800570c:	b118      	cbz	r0, 8005716 <_fflush_r+0x1a>
 800570e:	6a03      	ldr	r3, [r0, #32]
 8005710:	b90b      	cbnz	r3, 8005716 <_fflush_r+0x1a>
 8005712:	f7fd fa7d 	bl	8002c10 <__sinit>
 8005716:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800571a:	2b00      	cmp	r3, #0
 800571c:	d0f3      	beq.n	8005706 <_fflush_r+0xa>
 800571e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8005720:	07d0      	lsls	r0, r2, #31
 8005722:	d404      	bmi.n	800572e <_fflush_r+0x32>
 8005724:	0599      	lsls	r1, r3, #22
 8005726:	d402      	bmi.n	800572e <_fflush_r+0x32>
 8005728:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800572a:	f7fd fb88 	bl	8002e3e <__retarget_lock_acquire_recursive>
 800572e:	4628      	mov	r0, r5
 8005730:	4621      	mov	r1, r4
 8005732:	f7ff ff63 	bl	80055fc <__sflush_r>
 8005736:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8005738:	4605      	mov	r5, r0
 800573a:	07da      	lsls	r2, r3, #31
 800573c:	d4e4      	bmi.n	8005708 <_fflush_r+0xc>
 800573e:	89a3      	ldrh	r3, [r4, #12]
 8005740:	059b      	lsls	r3, r3, #22
 8005742:	d4e1      	bmi.n	8005708 <_fflush_r+0xc>
 8005744:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8005746:	f7fd fb7b 	bl	8002e40 <__retarget_lock_release_recursive>
 800574a:	e7dd      	b.n	8005708 <_fflush_r+0xc>

0800574c <memmove>:
 800574c:	4288      	cmp	r0, r1
 800574e:	b510      	push	{r4, lr}
 8005750:	eb01 0402 	add.w	r4, r1, r2
 8005754:	d902      	bls.n	800575c <memmove+0x10>
 8005756:	4284      	cmp	r4, r0
 8005758:	4623      	mov	r3, r4
 800575a:	d807      	bhi.n	800576c <memmove+0x20>
 800575c:	1e43      	subs	r3, r0, #1
 800575e:	42a1      	cmp	r1, r4
 8005760:	d008      	beq.n	8005774 <memmove+0x28>
 8005762:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005766:	f803 2f01 	strb.w	r2, [r3, #1]!
 800576a:	e7f8      	b.n	800575e <memmove+0x12>
 800576c:	4601      	mov	r1, r0
 800576e:	4402      	add	r2, r0
 8005770:	428a      	cmp	r2, r1
 8005772:	d100      	bne.n	8005776 <memmove+0x2a>
 8005774:	bd10      	pop	{r4, pc}
 8005776:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800577a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800577e:	e7f7      	b.n	8005770 <memmove+0x24>

08005780 <strncmp>:
 8005780:	b510      	push	{r4, lr}
 8005782:	b16a      	cbz	r2, 80057a0 <strncmp+0x20>
 8005784:	3901      	subs	r1, #1
 8005786:	1884      	adds	r4, r0, r2
 8005788:	f810 2b01 	ldrb.w	r2, [r0], #1
 800578c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8005790:	429a      	cmp	r2, r3
 8005792:	d103      	bne.n	800579c <strncmp+0x1c>
 8005794:	42a0      	cmp	r0, r4
 8005796:	d001      	beq.n	800579c <strncmp+0x1c>
 8005798:	2a00      	cmp	r2, #0
 800579a:	d1f5      	bne.n	8005788 <strncmp+0x8>
 800579c:	1ad0      	subs	r0, r2, r3
 800579e:	bd10      	pop	{r4, pc}
 80057a0:	4610      	mov	r0, r2
 80057a2:	e7fc      	b.n	800579e <strncmp+0x1e>

080057a4 <_sbrk_r>:
 80057a4:	b538      	push	{r3, r4, r5, lr}
 80057a6:	2300      	movs	r3, #0
 80057a8:	4d05      	ldr	r5, [pc, #20]	@ (80057c0 <_sbrk_r+0x1c>)
 80057aa:	4604      	mov	r4, r0
 80057ac:	4608      	mov	r0, r1
 80057ae:	602b      	str	r3, [r5, #0]
 80057b0:	f7fb fbc0 	bl	8000f34 <_sbrk>
 80057b4:	1c43      	adds	r3, r0, #1
 80057b6:	d102      	bne.n	80057be <_sbrk_r+0x1a>
 80057b8:	682b      	ldr	r3, [r5, #0]
 80057ba:	b103      	cbz	r3, 80057be <_sbrk_r+0x1a>
 80057bc:	6023      	str	r3, [r4, #0]
 80057be:	bd38      	pop	{r3, r4, r5, pc}
 80057c0:	20000334 	.word	0x20000334

080057c4 <memcpy>:
 80057c4:	440a      	add	r2, r1
 80057c6:	4291      	cmp	r1, r2
 80057c8:	f100 33ff 	add.w	r3, r0, #4294967295
 80057cc:	d100      	bne.n	80057d0 <memcpy+0xc>
 80057ce:	4770      	bx	lr
 80057d0:	b510      	push	{r4, lr}
 80057d2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80057d6:	4291      	cmp	r1, r2
 80057d8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80057dc:	d1f9      	bne.n	80057d2 <memcpy+0xe>
 80057de:	bd10      	pop	{r4, pc}

080057e0 <nan>:
 80057e0:	2000      	movs	r0, #0
 80057e2:	4901      	ldr	r1, [pc, #4]	@ (80057e8 <nan+0x8>)
 80057e4:	4770      	bx	lr
 80057e6:	bf00      	nop
 80057e8:	7ff80000 	.word	0x7ff80000

080057ec <__assert_func>:
 80057ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80057ee:	4614      	mov	r4, r2
 80057f0:	461a      	mov	r2, r3
 80057f2:	4b09      	ldr	r3, [pc, #36]	@ (8005818 <__assert_func+0x2c>)
 80057f4:	4605      	mov	r5, r0
 80057f6:	681b      	ldr	r3, [r3, #0]
 80057f8:	68d8      	ldr	r0, [r3, #12]
 80057fa:	b954      	cbnz	r4, 8005812 <__assert_func+0x26>
 80057fc:	4b07      	ldr	r3, [pc, #28]	@ (800581c <__assert_func+0x30>)
 80057fe:	461c      	mov	r4, r3
 8005800:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005804:	9100      	str	r1, [sp, #0]
 8005806:	462b      	mov	r3, r5
 8005808:	4905      	ldr	r1, [pc, #20]	@ (8005820 <__assert_func+0x34>)
 800580a:	f000 fba7 	bl	8005f5c <fiprintf>
 800580e:	f000 fbb7 	bl	8005f80 <abort>
 8005812:	4b04      	ldr	r3, [pc, #16]	@ (8005824 <__assert_func+0x38>)
 8005814:	e7f4      	b.n	8005800 <__assert_func+0x14>
 8005816:	bf00      	nop
 8005818:	20000018 	.word	0x20000018
 800581c:	080068dd 	.word	0x080068dd
 8005820:	080068af 	.word	0x080068af
 8005824:	080068a2 	.word	0x080068a2

08005828 <_calloc_r>:
 8005828:	b570      	push	{r4, r5, r6, lr}
 800582a:	fba1 5402 	umull	r5, r4, r1, r2
 800582e:	b93c      	cbnz	r4, 8005840 <_calloc_r+0x18>
 8005830:	4629      	mov	r1, r5
 8005832:	f7fe f9db 	bl	8003bec <_malloc_r>
 8005836:	4606      	mov	r6, r0
 8005838:	b928      	cbnz	r0, 8005846 <_calloc_r+0x1e>
 800583a:	2600      	movs	r6, #0
 800583c:	4630      	mov	r0, r6
 800583e:	bd70      	pop	{r4, r5, r6, pc}
 8005840:	220c      	movs	r2, #12
 8005842:	6002      	str	r2, [r0, #0]
 8005844:	e7f9      	b.n	800583a <_calloc_r+0x12>
 8005846:	462a      	mov	r2, r5
 8005848:	4621      	mov	r1, r4
 800584a:	f7fd fa7a 	bl	8002d42 <memset>
 800584e:	e7f5      	b.n	800583c <_calloc_r+0x14>

08005850 <rshift>:
 8005850:	6903      	ldr	r3, [r0, #16]
 8005852:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005856:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800585a:	f100 0414 	add.w	r4, r0, #20
 800585e:	ea4f 1261 	mov.w	r2, r1, asr #5
 8005862:	dd46      	ble.n	80058f2 <rshift+0xa2>
 8005864:	f011 011f 	ands.w	r1, r1, #31
 8005868:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800586c:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 8005870:	d10c      	bne.n	800588c <rshift+0x3c>
 8005872:	4629      	mov	r1, r5
 8005874:	f100 0710 	add.w	r7, r0, #16
 8005878:	42b1      	cmp	r1, r6
 800587a:	d335      	bcc.n	80058e8 <rshift+0x98>
 800587c:	1a9b      	subs	r3, r3, r2
 800587e:	009b      	lsls	r3, r3, #2
 8005880:	1eea      	subs	r2, r5, #3
 8005882:	4296      	cmp	r6, r2
 8005884:	bf38      	it	cc
 8005886:	2300      	movcc	r3, #0
 8005888:	4423      	add	r3, r4
 800588a:	e015      	b.n	80058b8 <rshift+0x68>
 800588c:	46a1      	mov	r9, r4
 800588e:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8005892:	f1c1 0820 	rsb	r8, r1, #32
 8005896:	40cf      	lsrs	r7, r1
 8005898:	f105 0e04 	add.w	lr, r5, #4
 800589c:	4576      	cmp	r6, lr
 800589e:	46f4      	mov	ip, lr
 80058a0:	d816      	bhi.n	80058d0 <rshift+0x80>
 80058a2:	1a9a      	subs	r2, r3, r2
 80058a4:	0092      	lsls	r2, r2, #2
 80058a6:	3a04      	subs	r2, #4
 80058a8:	3501      	adds	r5, #1
 80058aa:	42ae      	cmp	r6, r5
 80058ac:	bf38      	it	cc
 80058ae:	2200      	movcc	r2, #0
 80058b0:	18a3      	adds	r3, r4, r2
 80058b2:	50a7      	str	r7, [r4, r2]
 80058b4:	b107      	cbz	r7, 80058b8 <rshift+0x68>
 80058b6:	3304      	adds	r3, #4
 80058b8:	42a3      	cmp	r3, r4
 80058ba:	eba3 0204 	sub.w	r2, r3, r4
 80058be:	bf08      	it	eq
 80058c0:	2300      	moveq	r3, #0
 80058c2:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80058c6:	6102      	str	r2, [r0, #16]
 80058c8:	bf08      	it	eq
 80058ca:	6143      	streq	r3, [r0, #20]
 80058cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80058d0:	f8dc c000 	ldr.w	ip, [ip]
 80058d4:	fa0c fc08 	lsl.w	ip, ip, r8
 80058d8:	ea4c 0707 	orr.w	r7, ip, r7
 80058dc:	f849 7b04 	str.w	r7, [r9], #4
 80058e0:	f85e 7b04 	ldr.w	r7, [lr], #4
 80058e4:	40cf      	lsrs	r7, r1
 80058e6:	e7d9      	b.n	800589c <rshift+0x4c>
 80058e8:	f851 cb04 	ldr.w	ip, [r1], #4
 80058ec:	f847 cf04 	str.w	ip, [r7, #4]!
 80058f0:	e7c2      	b.n	8005878 <rshift+0x28>
 80058f2:	4623      	mov	r3, r4
 80058f4:	e7e0      	b.n	80058b8 <rshift+0x68>

080058f6 <__hexdig_fun>:
 80058f6:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 80058fa:	2b09      	cmp	r3, #9
 80058fc:	d802      	bhi.n	8005904 <__hexdig_fun+0xe>
 80058fe:	3820      	subs	r0, #32
 8005900:	b2c0      	uxtb	r0, r0
 8005902:	4770      	bx	lr
 8005904:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 8005908:	2b05      	cmp	r3, #5
 800590a:	d801      	bhi.n	8005910 <__hexdig_fun+0x1a>
 800590c:	3847      	subs	r0, #71	@ 0x47
 800590e:	e7f7      	b.n	8005900 <__hexdig_fun+0xa>
 8005910:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 8005914:	2b05      	cmp	r3, #5
 8005916:	d801      	bhi.n	800591c <__hexdig_fun+0x26>
 8005918:	3827      	subs	r0, #39	@ 0x27
 800591a:	e7f1      	b.n	8005900 <__hexdig_fun+0xa>
 800591c:	2000      	movs	r0, #0
 800591e:	4770      	bx	lr

08005920 <__gethex>:
 8005920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005924:	468a      	mov	sl, r1
 8005926:	4690      	mov	r8, r2
 8005928:	b085      	sub	sp, #20
 800592a:	9302      	str	r3, [sp, #8]
 800592c:	680b      	ldr	r3, [r1, #0]
 800592e:	9001      	str	r0, [sp, #4]
 8005930:	1c9c      	adds	r4, r3, #2
 8005932:	46a1      	mov	r9, r4
 8005934:	f814 0b01 	ldrb.w	r0, [r4], #1
 8005938:	2830      	cmp	r0, #48	@ 0x30
 800593a:	d0fa      	beq.n	8005932 <__gethex+0x12>
 800593c:	eba9 0303 	sub.w	r3, r9, r3
 8005940:	f1a3 0b02 	sub.w	fp, r3, #2
 8005944:	f7ff ffd7 	bl	80058f6 <__hexdig_fun>
 8005948:	4605      	mov	r5, r0
 800594a:	2800      	cmp	r0, #0
 800594c:	d168      	bne.n	8005a20 <__gethex+0x100>
 800594e:	2201      	movs	r2, #1
 8005950:	4648      	mov	r0, r9
 8005952:	499f      	ldr	r1, [pc, #636]	@ (8005bd0 <__gethex+0x2b0>)
 8005954:	f7ff ff14 	bl	8005780 <strncmp>
 8005958:	4607      	mov	r7, r0
 800595a:	2800      	cmp	r0, #0
 800595c:	d167      	bne.n	8005a2e <__gethex+0x10e>
 800595e:	f899 0001 	ldrb.w	r0, [r9, #1]
 8005962:	4626      	mov	r6, r4
 8005964:	f7ff ffc7 	bl	80058f6 <__hexdig_fun>
 8005968:	2800      	cmp	r0, #0
 800596a:	d062      	beq.n	8005a32 <__gethex+0x112>
 800596c:	4623      	mov	r3, r4
 800596e:	7818      	ldrb	r0, [r3, #0]
 8005970:	4699      	mov	r9, r3
 8005972:	2830      	cmp	r0, #48	@ 0x30
 8005974:	f103 0301 	add.w	r3, r3, #1
 8005978:	d0f9      	beq.n	800596e <__gethex+0x4e>
 800597a:	f7ff ffbc 	bl	80058f6 <__hexdig_fun>
 800597e:	fab0 f580 	clz	r5, r0
 8005982:	f04f 0b01 	mov.w	fp, #1
 8005986:	096d      	lsrs	r5, r5, #5
 8005988:	464a      	mov	r2, r9
 800598a:	4616      	mov	r6, r2
 800598c:	7830      	ldrb	r0, [r6, #0]
 800598e:	3201      	adds	r2, #1
 8005990:	f7ff ffb1 	bl	80058f6 <__hexdig_fun>
 8005994:	2800      	cmp	r0, #0
 8005996:	d1f8      	bne.n	800598a <__gethex+0x6a>
 8005998:	2201      	movs	r2, #1
 800599a:	4630      	mov	r0, r6
 800599c:	498c      	ldr	r1, [pc, #560]	@ (8005bd0 <__gethex+0x2b0>)
 800599e:	f7ff feef 	bl	8005780 <strncmp>
 80059a2:	2800      	cmp	r0, #0
 80059a4:	d13f      	bne.n	8005a26 <__gethex+0x106>
 80059a6:	b944      	cbnz	r4, 80059ba <__gethex+0x9a>
 80059a8:	1c74      	adds	r4, r6, #1
 80059aa:	4622      	mov	r2, r4
 80059ac:	4616      	mov	r6, r2
 80059ae:	7830      	ldrb	r0, [r6, #0]
 80059b0:	3201      	adds	r2, #1
 80059b2:	f7ff ffa0 	bl	80058f6 <__hexdig_fun>
 80059b6:	2800      	cmp	r0, #0
 80059b8:	d1f8      	bne.n	80059ac <__gethex+0x8c>
 80059ba:	1ba4      	subs	r4, r4, r6
 80059bc:	00a7      	lsls	r7, r4, #2
 80059be:	7833      	ldrb	r3, [r6, #0]
 80059c0:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 80059c4:	2b50      	cmp	r3, #80	@ 0x50
 80059c6:	d13e      	bne.n	8005a46 <__gethex+0x126>
 80059c8:	7873      	ldrb	r3, [r6, #1]
 80059ca:	2b2b      	cmp	r3, #43	@ 0x2b
 80059cc:	d033      	beq.n	8005a36 <__gethex+0x116>
 80059ce:	2b2d      	cmp	r3, #45	@ 0x2d
 80059d0:	d034      	beq.n	8005a3c <__gethex+0x11c>
 80059d2:	2400      	movs	r4, #0
 80059d4:	1c71      	adds	r1, r6, #1
 80059d6:	7808      	ldrb	r0, [r1, #0]
 80059d8:	f7ff ff8d 	bl	80058f6 <__hexdig_fun>
 80059dc:	1e43      	subs	r3, r0, #1
 80059de:	b2db      	uxtb	r3, r3
 80059e0:	2b18      	cmp	r3, #24
 80059e2:	d830      	bhi.n	8005a46 <__gethex+0x126>
 80059e4:	f1a0 0210 	sub.w	r2, r0, #16
 80059e8:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80059ec:	f7ff ff83 	bl	80058f6 <__hexdig_fun>
 80059f0:	f100 3cff 	add.w	ip, r0, #4294967295
 80059f4:	fa5f fc8c 	uxtb.w	ip, ip
 80059f8:	f1bc 0f18 	cmp.w	ip, #24
 80059fc:	f04f 030a 	mov.w	r3, #10
 8005a00:	d91e      	bls.n	8005a40 <__gethex+0x120>
 8005a02:	b104      	cbz	r4, 8005a06 <__gethex+0xe6>
 8005a04:	4252      	negs	r2, r2
 8005a06:	4417      	add	r7, r2
 8005a08:	f8ca 1000 	str.w	r1, [sl]
 8005a0c:	b1ed      	cbz	r5, 8005a4a <__gethex+0x12a>
 8005a0e:	f1bb 0f00 	cmp.w	fp, #0
 8005a12:	bf0c      	ite	eq
 8005a14:	2506      	moveq	r5, #6
 8005a16:	2500      	movne	r5, #0
 8005a18:	4628      	mov	r0, r5
 8005a1a:	b005      	add	sp, #20
 8005a1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a20:	2500      	movs	r5, #0
 8005a22:	462c      	mov	r4, r5
 8005a24:	e7b0      	b.n	8005988 <__gethex+0x68>
 8005a26:	2c00      	cmp	r4, #0
 8005a28:	d1c7      	bne.n	80059ba <__gethex+0x9a>
 8005a2a:	4627      	mov	r7, r4
 8005a2c:	e7c7      	b.n	80059be <__gethex+0x9e>
 8005a2e:	464e      	mov	r6, r9
 8005a30:	462f      	mov	r7, r5
 8005a32:	2501      	movs	r5, #1
 8005a34:	e7c3      	b.n	80059be <__gethex+0x9e>
 8005a36:	2400      	movs	r4, #0
 8005a38:	1cb1      	adds	r1, r6, #2
 8005a3a:	e7cc      	b.n	80059d6 <__gethex+0xb6>
 8005a3c:	2401      	movs	r4, #1
 8005a3e:	e7fb      	b.n	8005a38 <__gethex+0x118>
 8005a40:	fb03 0002 	mla	r0, r3, r2, r0
 8005a44:	e7ce      	b.n	80059e4 <__gethex+0xc4>
 8005a46:	4631      	mov	r1, r6
 8005a48:	e7de      	b.n	8005a08 <__gethex+0xe8>
 8005a4a:	4629      	mov	r1, r5
 8005a4c:	eba6 0309 	sub.w	r3, r6, r9
 8005a50:	3b01      	subs	r3, #1
 8005a52:	2b07      	cmp	r3, #7
 8005a54:	dc0a      	bgt.n	8005a6c <__gethex+0x14c>
 8005a56:	9801      	ldr	r0, [sp, #4]
 8005a58:	f7fe f954 	bl	8003d04 <_Balloc>
 8005a5c:	4604      	mov	r4, r0
 8005a5e:	b940      	cbnz	r0, 8005a72 <__gethex+0x152>
 8005a60:	4602      	mov	r2, r0
 8005a62:	21e4      	movs	r1, #228	@ 0xe4
 8005a64:	4b5b      	ldr	r3, [pc, #364]	@ (8005bd4 <__gethex+0x2b4>)
 8005a66:	485c      	ldr	r0, [pc, #368]	@ (8005bd8 <__gethex+0x2b8>)
 8005a68:	f7ff fec0 	bl	80057ec <__assert_func>
 8005a6c:	3101      	adds	r1, #1
 8005a6e:	105b      	asrs	r3, r3, #1
 8005a70:	e7ef      	b.n	8005a52 <__gethex+0x132>
 8005a72:	2300      	movs	r3, #0
 8005a74:	f100 0a14 	add.w	sl, r0, #20
 8005a78:	4655      	mov	r5, sl
 8005a7a:	469b      	mov	fp, r3
 8005a7c:	45b1      	cmp	r9, r6
 8005a7e:	d337      	bcc.n	8005af0 <__gethex+0x1d0>
 8005a80:	f845 bb04 	str.w	fp, [r5], #4
 8005a84:	eba5 050a 	sub.w	r5, r5, sl
 8005a88:	10ad      	asrs	r5, r5, #2
 8005a8a:	6125      	str	r5, [r4, #16]
 8005a8c:	4658      	mov	r0, fp
 8005a8e:	f7fe fa2b 	bl	8003ee8 <__hi0bits>
 8005a92:	016d      	lsls	r5, r5, #5
 8005a94:	f8d8 6000 	ldr.w	r6, [r8]
 8005a98:	1a2d      	subs	r5, r5, r0
 8005a9a:	42b5      	cmp	r5, r6
 8005a9c:	dd54      	ble.n	8005b48 <__gethex+0x228>
 8005a9e:	1bad      	subs	r5, r5, r6
 8005aa0:	4629      	mov	r1, r5
 8005aa2:	4620      	mov	r0, r4
 8005aa4:	f7fe fdb3 	bl	800460e <__any_on>
 8005aa8:	4681      	mov	r9, r0
 8005aaa:	b178      	cbz	r0, 8005acc <__gethex+0x1ac>
 8005aac:	f04f 0901 	mov.w	r9, #1
 8005ab0:	1e6b      	subs	r3, r5, #1
 8005ab2:	1159      	asrs	r1, r3, #5
 8005ab4:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005ab8:	f003 021f 	and.w	r2, r3, #31
 8005abc:	fa09 f202 	lsl.w	r2, r9, r2
 8005ac0:	420a      	tst	r2, r1
 8005ac2:	d003      	beq.n	8005acc <__gethex+0x1ac>
 8005ac4:	454b      	cmp	r3, r9
 8005ac6:	dc36      	bgt.n	8005b36 <__gethex+0x216>
 8005ac8:	f04f 0902 	mov.w	r9, #2
 8005acc:	4629      	mov	r1, r5
 8005ace:	4620      	mov	r0, r4
 8005ad0:	f7ff febe 	bl	8005850 <rshift>
 8005ad4:	442f      	add	r7, r5
 8005ad6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005ada:	42bb      	cmp	r3, r7
 8005adc:	da42      	bge.n	8005b64 <__gethex+0x244>
 8005ade:	4621      	mov	r1, r4
 8005ae0:	9801      	ldr	r0, [sp, #4]
 8005ae2:	f7fe f94f 	bl	8003d84 <_Bfree>
 8005ae6:	2300      	movs	r3, #0
 8005ae8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005aea:	25a3      	movs	r5, #163	@ 0xa3
 8005aec:	6013      	str	r3, [r2, #0]
 8005aee:	e793      	b.n	8005a18 <__gethex+0xf8>
 8005af0:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 8005af4:	2a2e      	cmp	r2, #46	@ 0x2e
 8005af6:	d012      	beq.n	8005b1e <__gethex+0x1fe>
 8005af8:	2b20      	cmp	r3, #32
 8005afa:	d104      	bne.n	8005b06 <__gethex+0x1e6>
 8005afc:	f845 bb04 	str.w	fp, [r5], #4
 8005b00:	f04f 0b00 	mov.w	fp, #0
 8005b04:	465b      	mov	r3, fp
 8005b06:	7830      	ldrb	r0, [r6, #0]
 8005b08:	9303      	str	r3, [sp, #12]
 8005b0a:	f7ff fef4 	bl	80058f6 <__hexdig_fun>
 8005b0e:	9b03      	ldr	r3, [sp, #12]
 8005b10:	f000 000f 	and.w	r0, r0, #15
 8005b14:	4098      	lsls	r0, r3
 8005b16:	ea4b 0b00 	orr.w	fp, fp, r0
 8005b1a:	3304      	adds	r3, #4
 8005b1c:	e7ae      	b.n	8005a7c <__gethex+0x15c>
 8005b1e:	45b1      	cmp	r9, r6
 8005b20:	d8ea      	bhi.n	8005af8 <__gethex+0x1d8>
 8005b22:	2201      	movs	r2, #1
 8005b24:	4630      	mov	r0, r6
 8005b26:	492a      	ldr	r1, [pc, #168]	@ (8005bd0 <__gethex+0x2b0>)
 8005b28:	9303      	str	r3, [sp, #12]
 8005b2a:	f7ff fe29 	bl	8005780 <strncmp>
 8005b2e:	9b03      	ldr	r3, [sp, #12]
 8005b30:	2800      	cmp	r0, #0
 8005b32:	d1e1      	bne.n	8005af8 <__gethex+0x1d8>
 8005b34:	e7a2      	b.n	8005a7c <__gethex+0x15c>
 8005b36:	4620      	mov	r0, r4
 8005b38:	1ea9      	subs	r1, r5, #2
 8005b3a:	f7fe fd68 	bl	800460e <__any_on>
 8005b3e:	2800      	cmp	r0, #0
 8005b40:	d0c2      	beq.n	8005ac8 <__gethex+0x1a8>
 8005b42:	f04f 0903 	mov.w	r9, #3
 8005b46:	e7c1      	b.n	8005acc <__gethex+0x1ac>
 8005b48:	da09      	bge.n	8005b5e <__gethex+0x23e>
 8005b4a:	1b75      	subs	r5, r6, r5
 8005b4c:	4621      	mov	r1, r4
 8005b4e:	462a      	mov	r2, r5
 8005b50:	9801      	ldr	r0, [sp, #4]
 8005b52:	f7fe fb2d 	bl	80041b0 <__lshift>
 8005b56:	4604      	mov	r4, r0
 8005b58:	1b7f      	subs	r7, r7, r5
 8005b5a:	f100 0a14 	add.w	sl, r0, #20
 8005b5e:	f04f 0900 	mov.w	r9, #0
 8005b62:	e7b8      	b.n	8005ad6 <__gethex+0x1b6>
 8005b64:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8005b68:	42bd      	cmp	r5, r7
 8005b6a:	dd6f      	ble.n	8005c4c <__gethex+0x32c>
 8005b6c:	1bed      	subs	r5, r5, r7
 8005b6e:	42ae      	cmp	r6, r5
 8005b70:	dc34      	bgt.n	8005bdc <__gethex+0x2bc>
 8005b72:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005b76:	2b02      	cmp	r3, #2
 8005b78:	d022      	beq.n	8005bc0 <__gethex+0x2a0>
 8005b7a:	2b03      	cmp	r3, #3
 8005b7c:	d024      	beq.n	8005bc8 <__gethex+0x2a8>
 8005b7e:	2b01      	cmp	r3, #1
 8005b80:	d115      	bne.n	8005bae <__gethex+0x28e>
 8005b82:	42ae      	cmp	r6, r5
 8005b84:	d113      	bne.n	8005bae <__gethex+0x28e>
 8005b86:	2e01      	cmp	r6, #1
 8005b88:	d10b      	bne.n	8005ba2 <__gethex+0x282>
 8005b8a:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8005b8e:	9a02      	ldr	r2, [sp, #8]
 8005b90:	2562      	movs	r5, #98	@ 0x62
 8005b92:	6013      	str	r3, [r2, #0]
 8005b94:	2301      	movs	r3, #1
 8005b96:	6123      	str	r3, [r4, #16]
 8005b98:	f8ca 3000 	str.w	r3, [sl]
 8005b9c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005b9e:	601c      	str	r4, [r3, #0]
 8005ba0:	e73a      	b.n	8005a18 <__gethex+0xf8>
 8005ba2:	4620      	mov	r0, r4
 8005ba4:	1e71      	subs	r1, r6, #1
 8005ba6:	f7fe fd32 	bl	800460e <__any_on>
 8005baa:	2800      	cmp	r0, #0
 8005bac:	d1ed      	bne.n	8005b8a <__gethex+0x26a>
 8005bae:	4621      	mov	r1, r4
 8005bb0:	9801      	ldr	r0, [sp, #4]
 8005bb2:	f7fe f8e7 	bl	8003d84 <_Bfree>
 8005bb6:	2300      	movs	r3, #0
 8005bb8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005bba:	2550      	movs	r5, #80	@ 0x50
 8005bbc:	6013      	str	r3, [r2, #0]
 8005bbe:	e72b      	b.n	8005a18 <__gethex+0xf8>
 8005bc0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005bc2:	2b00      	cmp	r3, #0
 8005bc4:	d1f3      	bne.n	8005bae <__gethex+0x28e>
 8005bc6:	e7e0      	b.n	8005b8a <__gethex+0x26a>
 8005bc8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005bca:	2b00      	cmp	r3, #0
 8005bcc:	d1dd      	bne.n	8005b8a <__gethex+0x26a>
 8005bce:	e7ee      	b.n	8005bae <__gethex+0x28e>
 8005bd0:	08006730 	.word	0x08006730
 8005bd4:	080065c7 	.word	0x080065c7
 8005bd8:	080068de 	.word	0x080068de
 8005bdc:	1e6f      	subs	r7, r5, #1
 8005bde:	f1b9 0f00 	cmp.w	r9, #0
 8005be2:	d130      	bne.n	8005c46 <__gethex+0x326>
 8005be4:	b127      	cbz	r7, 8005bf0 <__gethex+0x2d0>
 8005be6:	4639      	mov	r1, r7
 8005be8:	4620      	mov	r0, r4
 8005bea:	f7fe fd10 	bl	800460e <__any_on>
 8005bee:	4681      	mov	r9, r0
 8005bf0:	2301      	movs	r3, #1
 8005bf2:	4629      	mov	r1, r5
 8005bf4:	1b76      	subs	r6, r6, r5
 8005bf6:	2502      	movs	r5, #2
 8005bf8:	117a      	asrs	r2, r7, #5
 8005bfa:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8005bfe:	f007 071f 	and.w	r7, r7, #31
 8005c02:	40bb      	lsls	r3, r7
 8005c04:	4213      	tst	r3, r2
 8005c06:	4620      	mov	r0, r4
 8005c08:	bf18      	it	ne
 8005c0a:	f049 0902 	orrne.w	r9, r9, #2
 8005c0e:	f7ff fe1f 	bl	8005850 <rshift>
 8005c12:	f8d8 7004 	ldr.w	r7, [r8, #4]
 8005c16:	f1b9 0f00 	cmp.w	r9, #0
 8005c1a:	d047      	beq.n	8005cac <__gethex+0x38c>
 8005c1c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005c20:	2b02      	cmp	r3, #2
 8005c22:	d015      	beq.n	8005c50 <__gethex+0x330>
 8005c24:	2b03      	cmp	r3, #3
 8005c26:	d017      	beq.n	8005c58 <__gethex+0x338>
 8005c28:	2b01      	cmp	r3, #1
 8005c2a:	d109      	bne.n	8005c40 <__gethex+0x320>
 8005c2c:	f019 0f02 	tst.w	r9, #2
 8005c30:	d006      	beq.n	8005c40 <__gethex+0x320>
 8005c32:	f8da 3000 	ldr.w	r3, [sl]
 8005c36:	ea49 0903 	orr.w	r9, r9, r3
 8005c3a:	f019 0f01 	tst.w	r9, #1
 8005c3e:	d10e      	bne.n	8005c5e <__gethex+0x33e>
 8005c40:	f045 0510 	orr.w	r5, r5, #16
 8005c44:	e032      	b.n	8005cac <__gethex+0x38c>
 8005c46:	f04f 0901 	mov.w	r9, #1
 8005c4a:	e7d1      	b.n	8005bf0 <__gethex+0x2d0>
 8005c4c:	2501      	movs	r5, #1
 8005c4e:	e7e2      	b.n	8005c16 <__gethex+0x2f6>
 8005c50:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005c52:	f1c3 0301 	rsb	r3, r3, #1
 8005c56:	930f      	str	r3, [sp, #60]	@ 0x3c
 8005c58:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005c5a:	2b00      	cmp	r3, #0
 8005c5c:	d0f0      	beq.n	8005c40 <__gethex+0x320>
 8005c5e:	f04f 0c00 	mov.w	ip, #0
 8005c62:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005c66:	f104 0314 	add.w	r3, r4, #20
 8005c6a:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8005c6e:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8005c72:	4618      	mov	r0, r3
 8005c74:	f853 2b04 	ldr.w	r2, [r3], #4
 8005c78:	f1b2 3fff 	cmp.w	r2, #4294967295
 8005c7c:	d01b      	beq.n	8005cb6 <__gethex+0x396>
 8005c7e:	3201      	adds	r2, #1
 8005c80:	6002      	str	r2, [r0, #0]
 8005c82:	2d02      	cmp	r5, #2
 8005c84:	f104 0314 	add.w	r3, r4, #20
 8005c88:	d13c      	bne.n	8005d04 <__gethex+0x3e4>
 8005c8a:	f8d8 2000 	ldr.w	r2, [r8]
 8005c8e:	3a01      	subs	r2, #1
 8005c90:	42b2      	cmp	r2, r6
 8005c92:	d109      	bne.n	8005ca8 <__gethex+0x388>
 8005c94:	2201      	movs	r2, #1
 8005c96:	1171      	asrs	r1, r6, #5
 8005c98:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005c9c:	f006 061f 	and.w	r6, r6, #31
 8005ca0:	fa02 f606 	lsl.w	r6, r2, r6
 8005ca4:	421e      	tst	r6, r3
 8005ca6:	d13a      	bne.n	8005d1e <__gethex+0x3fe>
 8005ca8:	f045 0520 	orr.w	r5, r5, #32
 8005cac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8005cae:	601c      	str	r4, [r3, #0]
 8005cb0:	9b02      	ldr	r3, [sp, #8]
 8005cb2:	601f      	str	r7, [r3, #0]
 8005cb4:	e6b0      	b.n	8005a18 <__gethex+0xf8>
 8005cb6:	4299      	cmp	r1, r3
 8005cb8:	f843 cc04 	str.w	ip, [r3, #-4]
 8005cbc:	d8d9      	bhi.n	8005c72 <__gethex+0x352>
 8005cbe:	68a3      	ldr	r3, [r4, #8]
 8005cc0:	459b      	cmp	fp, r3
 8005cc2:	db17      	blt.n	8005cf4 <__gethex+0x3d4>
 8005cc4:	6861      	ldr	r1, [r4, #4]
 8005cc6:	9801      	ldr	r0, [sp, #4]
 8005cc8:	3101      	adds	r1, #1
 8005cca:	f7fe f81b 	bl	8003d04 <_Balloc>
 8005cce:	4681      	mov	r9, r0
 8005cd0:	b918      	cbnz	r0, 8005cda <__gethex+0x3ba>
 8005cd2:	4602      	mov	r2, r0
 8005cd4:	2184      	movs	r1, #132	@ 0x84
 8005cd6:	4b19      	ldr	r3, [pc, #100]	@ (8005d3c <__gethex+0x41c>)
 8005cd8:	e6c5      	b.n	8005a66 <__gethex+0x146>
 8005cda:	6922      	ldr	r2, [r4, #16]
 8005cdc:	f104 010c 	add.w	r1, r4, #12
 8005ce0:	3202      	adds	r2, #2
 8005ce2:	0092      	lsls	r2, r2, #2
 8005ce4:	300c      	adds	r0, #12
 8005ce6:	f7ff fd6d 	bl	80057c4 <memcpy>
 8005cea:	4621      	mov	r1, r4
 8005cec:	9801      	ldr	r0, [sp, #4]
 8005cee:	f7fe f849 	bl	8003d84 <_Bfree>
 8005cf2:	464c      	mov	r4, r9
 8005cf4:	6923      	ldr	r3, [r4, #16]
 8005cf6:	1c5a      	adds	r2, r3, #1
 8005cf8:	6122      	str	r2, [r4, #16]
 8005cfa:	2201      	movs	r2, #1
 8005cfc:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8005d00:	615a      	str	r2, [r3, #20]
 8005d02:	e7be      	b.n	8005c82 <__gethex+0x362>
 8005d04:	6922      	ldr	r2, [r4, #16]
 8005d06:	455a      	cmp	r2, fp
 8005d08:	dd0b      	ble.n	8005d22 <__gethex+0x402>
 8005d0a:	2101      	movs	r1, #1
 8005d0c:	4620      	mov	r0, r4
 8005d0e:	f7ff fd9f 	bl	8005850 <rshift>
 8005d12:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005d16:	3701      	adds	r7, #1
 8005d18:	42bb      	cmp	r3, r7
 8005d1a:	f6ff aee0 	blt.w	8005ade <__gethex+0x1be>
 8005d1e:	2501      	movs	r5, #1
 8005d20:	e7c2      	b.n	8005ca8 <__gethex+0x388>
 8005d22:	f016 061f 	ands.w	r6, r6, #31
 8005d26:	d0fa      	beq.n	8005d1e <__gethex+0x3fe>
 8005d28:	4453      	add	r3, sl
 8005d2a:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8005d2e:	f7fe f8db 	bl	8003ee8 <__hi0bits>
 8005d32:	f1c6 0620 	rsb	r6, r6, #32
 8005d36:	42b0      	cmp	r0, r6
 8005d38:	dbe7      	blt.n	8005d0a <__gethex+0x3ea>
 8005d3a:	e7f0      	b.n	8005d1e <__gethex+0x3fe>
 8005d3c:	080065c7 	.word	0x080065c7

08005d40 <L_shift>:
 8005d40:	f1c2 0208 	rsb	r2, r2, #8
 8005d44:	0092      	lsls	r2, r2, #2
 8005d46:	b570      	push	{r4, r5, r6, lr}
 8005d48:	f1c2 0620 	rsb	r6, r2, #32
 8005d4c:	6843      	ldr	r3, [r0, #4]
 8005d4e:	6804      	ldr	r4, [r0, #0]
 8005d50:	fa03 f506 	lsl.w	r5, r3, r6
 8005d54:	432c      	orrs	r4, r5
 8005d56:	40d3      	lsrs	r3, r2
 8005d58:	6004      	str	r4, [r0, #0]
 8005d5a:	f840 3f04 	str.w	r3, [r0, #4]!
 8005d5e:	4288      	cmp	r0, r1
 8005d60:	d3f4      	bcc.n	8005d4c <L_shift+0xc>
 8005d62:	bd70      	pop	{r4, r5, r6, pc}

08005d64 <__match>:
 8005d64:	b530      	push	{r4, r5, lr}
 8005d66:	6803      	ldr	r3, [r0, #0]
 8005d68:	3301      	adds	r3, #1
 8005d6a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005d6e:	b914      	cbnz	r4, 8005d76 <__match+0x12>
 8005d70:	6003      	str	r3, [r0, #0]
 8005d72:	2001      	movs	r0, #1
 8005d74:	bd30      	pop	{r4, r5, pc}
 8005d76:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005d7a:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 8005d7e:	2d19      	cmp	r5, #25
 8005d80:	bf98      	it	ls
 8005d82:	3220      	addls	r2, #32
 8005d84:	42a2      	cmp	r2, r4
 8005d86:	d0f0      	beq.n	8005d6a <__match+0x6>
 8005d88:	2000      	movs	r0, #0
 8005d8a:	e7f3      	b.n	8005d74 <__match+0x10>

08005d8c <__hexnan>:
 8005d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d90:	2500      	movs	r5, #0
 8005d92:	680b      	ldr	r3, [r1, #0]
 8005d94:	4682      	mov	sl, r0
 8005d96:	115e      	asrs	r6, r3, #5
 8005d98:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8005d9c:	f013 031f 	ands.w	r3, r3, #31
 8005da0:	bf18      	it	ne
 8005da2:	3604      	addne	r6, #4
 8005da4:	1f37      	subs	r7, r6, #4
 8005da6:	4690      	mov	r8, r2
 8005da8:	46b9      	mov	r9, r7
 8005daa:	463c      	mov	r4, r7
 8005dac:	46ab      	mov	fp, r5
 8005dae:	b087      	sub	sp, #28
 8005db0:	6801      	ldr	r1, [r0, #0]
 8005db2:	9301      	str	r3, [sp, #4]
 8005db4:	f846 5c04 	str.w	r5, [r6, #-4]
 8005db8:	9502      	str	r5, [sp, #8]
 8005dba:	784a      	ldrb	r2, [r1, #1]
 8005dbc:	1c4b      	adds	r3, r1, #1
 8005dbe:	9303      	str	r3, [sp, #12]
 8005dc0:	b342      	cbz	r2, 8005e14 <__hexnan+0x88>
 8005dc2:	4610      	mov	r0, r2
 8005dc4:	9105      	str	r1, [sp, #20]
 8005dc6:	9204      	str	r2, [sp, #16]
 8005dc8:	f7ff fd95 	bl	80058f6 <__hexdig_fun>
 8005dcc:	2800      	cmp	r0, #0
 8005dce:	d151      	bne.n	8005e74 <__hexnan+0xe8>
 8005dd0:	9a04      	ldr	r2, [sp, #16]
 8005dd2:	9905      	ldr	r1, [sp, #20]
 8005dd4:	2a20      	cmp	r2, #32
 8005dd6:	d818      	bhi.n	8005e0a <__hexnan+0x7e>
 8005dd8:	9b02      	ldr	r3, [sp, #8]
 8005dda:	459b      	cmp	fp, r3
 8005ddc:	dd13      	ble.n	8005e06 <__hexnan+0x7a>
 8005dde:	454c      	cmp	r4, r9
 8005de0:	d206      	bcs.n	8005df0 <__hexnan+0x64>
 8005de2:	2d07      	cmp	r5, #7
 8005de4:	dc04      	bgt.n	8005df0 <__hexnan+0x64>
 8005de6:	462a      	mov	r2, r5
 8005de8:	4649      	mov	r1, r9
 8005dea:	4620      	mov	r0, r4
 8005dec:	f7ff ffa8 	bl	8005d40 <L_shift>
 8005df0:	4544      	cmp	r4, r8
 8005df2:	d952      	bls.n	8005e9a <__hexnan+0x10e>
 8005df4:	2300      	movs	r3, #0
 8005df6:	f1a4 0904 	sub.w	r9, r4, #4
 8005dfa:	f844 3c04 	str.w	r3, [r4, #-4]
 8005dfe:	461d      	mov	r5, r3
 8005e00:	464c      	mov	r4, r9
 8005e02:	f8cd b008 	str.w	fp, [sp, #8]
 8005e06:	9903      	ldr	r1, [sp, #12]
 8005e08:	e7d7      	b.n	8005dba <__hexnan+0x2e>
 8005e0a:	2a29      	cmp	r2, #41	@ 0x29
 8005e0c:	d157      	bne.n	8005ebe <__hexnan+0x132>
 8005e0e:	3102      	adds	r1, #2
 8005e10:	f8ca 1000 	str.w	r1, [sl]
 8005e14:	f1bb 0f00 	cmp.w	fp, #0
 8005e18:	d051      	beq.n	8005ebe <__hexnan+0x132>
 8005e1a:	454c      	cmp	r4, r9
 8005e1c:	d206      	bcs.n	8005e2c <__hexnan+0xa0>
 8005e1e:	2d07      	cmp	r5, #7
 8005e20:	dc04      	bgt.n	8005e2c <__hexnan+0xa0>
 8005e22:	462a      	mov	r2, r5
 8005e24:	4649      	mov	r1, r9
 8005e26:	4620      	mov	r0, r4
 8005e28:	f7ff ff8a 	bl	8005d40 <L_shift>
 8005e2c:	4544      	cmp	r4, r8
 8005e2e:	d936      	bls.n	8005e9e <__hexnan+0x112>
 8005e30:	4623      	mov	r3, r4
 8005e32:	f1a8 0204 	sub.w	r2, r8, #4
 8005e36:	f853 1b04 	ldr.w	r1, [r3], #4
 8005e3a:	429f      	cmp	r7, r3
 8005e3c:	f842 1f04 	str.w	r1, [r2, #4]!
 8005e40:	d2f9      	bcs.n	8005e36 <__hexnan+0xaa>
 8005e42:	1b3b      	subs	r3, r7, r4
 8005e44:	f023 0303 	bic.w	r3, r3, #3
 8005e48:	3304      	adds	r3, #4
 8005e4a:	3401      	adds	r4, #1
 8005e4c:	3e03      	subs	r6, #3
 8005e4e:	42b4      	cmp	r4, r6
 8005e50:	bf88      	it	hi
 8005e52:	2304      	movhi	r3, #4
 8005e54:	2200      	movs	r2, #0
 8005e56:	4443      	add	r3, r8
 8005e58:	f843 2b04 	str.w	r2, [r3], #4
 8005e5c:	429f      	cmp	r7, r3
 8005e5e:	d2fb      	bcs.n	8005e58 <__hexnan+0xcc>
 8005e60:	683b      	ldr	r3, [r7, #0]
 8005e62:	b91b      	cbnz	r3, 8005e6c <__hexnan+0xe0>
 8005e64:	4547      	cmp	r7, r8
 8005e66:	d128      	bne.n	8005eba <__hexnan+0x12e>
 8005e68:	2301      	movs	r3, #1
 8005e6a:	603b      	str	r3, [r7, #0]
 8005e6c:	2005      	movs	r0, #5
 8005e6e:	b007      	add	sp, #28
 8005e70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e74:	3501      	adds	r5, #1
 8005e76:	2d08      	cmp	r5, #8
 8005e78:	f10b 0b01 	add.w	fp, fp, #1
 8005e7c:	dd06      	ble.n	8005e8c <__hexnan+0x100>
 8005e7e:	4544      	cmp	r4, r8
 8005e80:	d9c1      	bls.n	8005e06 <__hexnan+0x7a>
 8005e82:	2300      	movs	r3, #0
 8005e84:	2501      	movs	r5, #1
 8005e86:	f844 3c04 	str.w	r3, [r4, #-4]
 8005e8a:	3c04      	subs	r4, #4
 8005e8c:	6822      	ldr	r2, [r4, #0]
 8005e8e:	f000 000f 	and.w	r0, r0, #15
 8005e92:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8005e96:	6020      	str	r0, [r4, #0]
 8005e98:	e7b5      	b.n	8005e06 <__hexnan+0x7a>
 8005e9a:	2508      	movs	r5, #8
 8005e9c:	e7b3      	b.n	8005e06 <__hexnan+0x7a>
 8005e9e:	9b01      	ldr	r3, [sp, #4]
 8005ea0:	2b00      	cmp	r3, #0
 8005ea2:	d0dd      	beq.n	8005e60 <__hexnan+0xd4>
 8005ea4:	f04f 32ff 	mov.w	r2, #4294967295
 8005ea8:	f1c3 0320 	rsb	r3, r3, #32
 8005eac:	40da      	lsrs	r2, r3
 8005eae:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8005eb2:	4013      	ands	r3, r2
 8005eb4:	f846 3c04 	str.w	r3, [r6, #-4]
 8005eb8:	e7d2      	b.n	8005e60 <__hexnan+0xd4>
 8005eba:	3f04      	subs	r7, #4
 8005ebc:	e7d0      	b.n	8005e60 <__hexnan+0xd4>
 8005ebe:	2004      	movs	r0, #4
 8005ec0:	e7d5      	b.n	8005e6e <__hexnan+0xe2>

08005ec2 <__ascii_mbtowc>:
 8005ec2:	b082      	sub	sp, #8
 8005ec4:	b901      	cbnz	r1, 8005ec8 <__ascii_mbtowc+0x6>
 8005ec6:	a901      	add	r1, sp, #4
 8005ec8:	b142      	cbz	r2, 8005edc <__ascii_mbtowc+0x1a>
 8005eca:	b14b      	cbz	r3, 8005ee0 <__ascii_mbtowc+0x1e>
 8005ecc:	7813      	ldrb	r3, [r2, #0]
 8005ece:	600b      	str	r3, [r1, #0]
 8005ed0:	7812      	ldrb	r2, [r2, #0]
 8005ed2:	1e10      	subs	r0, r2, #0
 8005ed4:	bf18      	it	ne
 8005ed6:	2001      	movne	r0, #1
 8005ed8:	b002      	add	sp, #8
 8005eda:	4770      	bx	lr
 8005edc:	4610      	mov	r0, r2
 8005ede:	e7fb      	b.n	8005ed8 <__ascii_mbtowc+0x16>
 8005ee0:	f06f 0001 	mvn.w	r0, #1
 8005ee4:	e7f8      	b.n	8005ed8 <__ascii_mbtowc+0x16>

08005ee6 <_realloc_r>:
 8005ee6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005eea:	4680      	mov	r8, r0
 8005eec:	4615      	mov	r5, r2
 8005eee:	460c      	mov	r4, r1
 8005ef0:	b921      	cbnz	r1, 8005efc <_realloc_r+0x16>
 8005ef2:	4611      	mov	r1, r2
 8005ef4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005ef8:	f7fd be78 	b.w	8003bec <_malloc_r>
 8005efc:	b92a      	cbnz	r2, 8005f0a <_realloc_r+0x24>
 8005efe:	f7fd fe03 	bl	8003b08 <_free_r>
 8005f02:	2400      	movs	r4, #0
 8005f04:	4620      	mov	r0, r4
 8005f06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005f0a:	f000 f840 	bl	8005f8e <_malloc_usable_size_r>
 8005f0e:	4285      	cmp	r5, r0
 8005f10:	4606      	mov	r6, r0
 8005f12:	d802      	bhi.n	8005f1a <_realloc_r+0x34>
 8005f14:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8005f18:	d8f4      	bhi.n	8005f04 <_realloc_r+0x1e>
 8005f1a:	4629      	mov	r1, r5
 8005f1c:	4640      	mov	r0, r8
 8005f1e:	f7fd fe65 	bl	8003bec <_malloc_r>
 8005f22:	4607      	mov	r7, r0
 8005f24:	2800      	cmp	r0, #0
 8005f26:	d0ec      	beq.n	8005f02 <_realloc_r+0x1c>
 8005f28:	42b5      	cmp	r5, r6
 8005f2a:	462a      	mov	r2, r5
 8005f2c:	4621      	mov	r1, r4
 8005f2e:	bf28      	it	cs
 8005f30:	4632      	movcs	r2, r6
 8005f32:	f7ff fc47 	bl	80057c4 <memcpy>
 8005f36:	4621      	mov	r1, r4
 8005f38:	4640      	mov	r0, r8
 8005f3a:	f7fd fde5 	bl	8003b08 <_free_r>
 8005f3e:	463c      	mov	r4, r7
 8005f40:	e7e0      	b.n	8005f04 <_realloc_r+0x1e>

08005f42 <__ascii_wctomb>:
 8005f42:	4603      	mov	r3, r0
 8005f44:	4608      	mov	r0, r1
 8005f46:	b141      	cbz	r1, 8005f5a <__ascii_wctomb+0x18>
 8005f48:	2aff      	cmp	r2, #255	@ 0xff
 8005f4a:	d904      	bls.n	8005f56 <__ascii_wctomb+0x14>
 8005f4c:	228a      	movs	r2, #138	@ 0x8a
 8005f4e:	f04f 30ff 	mov.w	r0, #4294967295
 8005f52:	601a      	str	r2, [r3, #0]
 8005f54:	4770      	bx	lr
 8005f56:	2001      	movs	r0, #1
 8005f58:	700a      	strb	r2, [r1, #0]
 8005f5a:	4770      	bx	lr

08005f5c <fiprintf>:
 8005f5c:	b40e      	push	{r1, r2, r3}
 8005f5e:	b503      	push	{r0, r1, lr}
 8005f60:	4601      	mov	r1, r0
 8005f62:	ab03      	add	r3, sp, #12
 8005f64:	4805      	ldr	r0, [pc, #20]	@ (8005f7c <fiprintf+0x20>)
 8005f66:	f853 2b04 	ldr.w	r2, [r3], #4
 8005f6a:	6800      	ldr	r0, [r0, #0]
 8005f6c:	9301      	str	r3, [sp, #4]
 8005f6e:	f000 f83d 	bl	8005fec <_vfiprintf_r>
 8005f72:	b002      	add	sp, #8
 8005f74:	f85d eb04 	ldr.w	lr, [sp], #4
 8005f78:	b003      	add	sp, #12
 8005f7a:	4770      	bx	lr
 8005f7c:	20000018 	.word	0x20000018

08005f80 <abort>:
 8005f80:	2006      	movs	r0, #6
 8005f82:	b508      	push	{r3, lr}
 8005f84:	f000 fa06 	bl	8006394 <raise>
 8005f88:	2001      	movs	r0, #1
 8005f8a:	f7fa ff5f 	bl	8000e4c <_exit>

08005f8e <_malloc_usable_size_r>:
 8005f8e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005f92:	1f18      	subs	r0, r3, #4
 8005f94:	2b00      	cmp	r3, #0
 8005f96:	bfbc      	itt	lt
 8005f98:	580b      	ldrlt	r3, [r1, r0]
 8005f9a:	18c0      	addlt	r0, r0, r3
 8005f9c:	4770      	bx	lr

08005f9e <__sfputc_r>:
 8005f9e:	6893      	ldr	r3, [r2, #8]
 8005fa0:	b410      	push	{r4}
 8005fa2:	3b01      	subs	r3, #1
 8005fa4:	2b00      	cmp	r3, #0
 8005fa6:	6093      	str	r3, [r2, #8]
 8005fa8:	da07      	bge.n	8005fba <__sfputc_r+0x1c>
 8005faa:	6994      	ldr	r4, [r2, #24]
 8005fac:	42a3      	cmp	r3, r4
 8005fae:	db01      	blt.n	8005fb4 <__sfputc_r+0x16>
 8005fb0:	290a      	cmp	r1, #10
 8005fb2:	d102      	bne.n	8005fba <__sfputc_r+0x1c>
 8005fb4:	bc10      	pop	{r4}
 8005fb6:	f000 b931 	b.w	800621c <__swbuf_r>
 8005fba:	6813      	ldr	r3, [r2, #0]
 8005fbc:	1c58      	adds	r0, r3, #1
 8005fbe:	6010      	str	r0, [r2, #0]
 8005fc0:	7019      	strb	r1, [r3, #0]
 8005fc2:	4608      	mov	r0, r1
 8005fc4:	bc10      	pop	{r4}
 8005fc6:	4770      	bx	lr

08005fc8 <__sfputs_r>:
 8005fc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005fca:	4606      	mov	r6, r0
 8005fcc:	460f      	mov	r7, r1
 8005fce:	4614      	mov	r4, r2
 8005fd0:	18d5      	adds	r5, r2, r3
 8005fd2:	42ac      	cmp	r4, r5
 8005fd4:	d101      	bne.n	8005fda <__sfputs_r+0x12>
 8005fd6:	2000      	movs	r0, #0
 8005fd8:	e007      	b.n	8005fea <__sfputs_r+0x22>
 8005fda:	463a      	mov	r2, r7
 8005fdc:	4630      	mov	r0, r6
 8005fde:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005fe2:	f7ff ffdc 	bl	8005f9e <__sfputc_r>
 8005fe6:	1c43      	adds	r3, r0, #1
 8005fe8:	d1f3      	bne.n	8005fd2 <__sfputs_r+0xa>
 8005fea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005fec <_vfiprintf_r>:
 8005fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ff0:	460d      	mov	r5, r1
 8005ff2:	4614      	mov	r4, r2
 8005ff4:	4698      	mov	r8, r3
 8005ff6:	4606      	mov	r6, r0
 8005ff8:	b09d      	sub	sp, #116	@ 0x74
 8005ffa:	b118      	cbz	r0, 8006004 <_vfiprintf_r+0x18>
 8005ffc:	6a03      	ldr	r3, [r0, #32]
 8005ffe:	b90b      	cbnz	r3, 8006004 <_vfiprintf_r+0x18>
 8006000:	f7fc fe06 	bl	8002c10 <__sinit>
 8006004:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8006006:	07d9      	lsls	r1, r3, #31
 8006008:	d405      	bmi.n	8006016 <_vfiprintf_r+0x2a>
 800600a:	89ab      	ldrh	r3, [r5, #12]
 800600c:	059a      	lsls	r2, r3, #22
 800600e:	d402      	bmi.n	8006016 <_vfiprintf_r+0x2a>
 8006010:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006012:	f7fc ff14 	bl	8002e3e <__retarget_lock_acquire_recursive>
 8006016:	89ab      	ldrh	r3, [r5, #12]
 8006018:	071b      	lsls	r3, r3, #28
 800601a:	d501      	bpl.n	8006020 <_vfiprintf_r+0x34>
 800601c:	692b      	ldr	r3, [r5, #16]
 800601e:	b99b      	cbnz	r3, 8006048 <_vfiprintf_r+0x5c>
 8006020:	4629      	mov	r1, r5
 8006022:	4630      	mov	r0, r6
 8006024:	f000 f938 	bl	8006298 <__swsetup_r>
 8006028:	b170      	cbz	r0, 8006048 <_vfiprintf_r+0x5c>
 800602a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800602c:	07dc      	lsls	r4, r3, #31
 800602e:	d504      	bpl.n	800603a <_vfiprintf_r+0x4e>
 8006030:	f04f 30ff 	mov.w	r0, #4294967295
 8006034:	b01d      	add	sp, #116	@ 0x74
 8006036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800603a:	89ab      	ldrh	r3, [r5, #12]
 800603c:	0598      	lsls	r0, r3, #22
 800603e:	d4f7      	bmi.n	8006030 <_vfiprintf_r+0x44>
 8006040:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8006042:	f7fc fefd 	bl	8002e40 <__retarget_lock_release_recursive>
 8006046:	e7f3      	b.n	8006030 <_vfiprintf_r+0x44>
 8006048:	2300      	movs	r3, #0
 800604a:	9309      	str	r3, [sp, #36]	@ 0x24
 800604c:	2320      	movs	r3, #32
 800604e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8006052:	2330      	movs	r3, #48	@ 0x30
 8006054:	f04f 0901 	mov.w	r9, #1
 8006058:	f8cd 800c 	str.w	r8, [sp, #12]
 800605c:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8006208 <_vfiprintf_r+0x21c>
 8006060:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8006064:	4623      	mov	r3, r4
 8006066:	469a      	mov	sl, r3
 8006068:	f813 2b01 	ldrb.w	r2, [r3], #1
 800606c:	b10a      	cbz	r2, 8006072 <_vfiprintf_r+0x86>
 800606e:	2a25      	cmp	r2, #37	@ 0x25
 8006070:	d1f9      	bne.n	8006066 <_vfiprintf_r+0x7a>
 8006072:	ebba 0b04 	subs.w	fp, sl, r4
 8006076:	d00b      	beq.n	8006090 <_vfiprintf_r+0xa4>
 8006078:	465b      	mov	r3, fp
 800607a:	4622      	mov	r2, r4
 800607c:	4629      	mov	r1, r5
 800607e:	4630      	mov	r0, r6
 8006080:	f7ff ffa2 	bl	8005fc8 <__sfputs_r>
 8006084:	3001      	adds	r0, #1
 8006086:	f000 80a7 	beq.w	80061d8 <_vfiprintf_r+0x1ec>
 800608a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800608c:	445a      	add	r2, fp
 800608e:	9209      	str	r2, [sp, #36]	@ 0x24
 8006090:	f89a 3000 	ldrb.w	r3, [sl]
 8006094:	2b00      	cmp	r3, #0
 8006096:	f000 809f 	beq.w	80061d8 <_vfiprintf_r+0x1ec>
 800609a:	2300      	movs	r3, #0
 800609c:	f04f 32ff 	mov.w	r2, #4294967295
 80060a0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80060a4:	f10a 0a01 	add.w	sl, sl, #1
 80060a8:	9304      	str	r3, [sp, #16]
 80060aa:	9307      	str	r3, [sp, #28]
 80060ac:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80060b0:	931a      	str	r3, [sp, #104]	@ 0x68
 80060b2:	4654      	mov	r4, sl
 80060b4:	2205      	movs	r2, #5
 80060b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80060ba:	4853      	ldr	r0, [pc, #332]	@ (8006208 <_vfiprintf_r+0x21c>)
 80060bc:	f7fc fec1 	bl	8002e42 <memchr>
 80060c0:	9a04      	ldr	r2, [sp, #16]
 80060c2:	b9d8      	cbnz	r0, 80060fc <_vfiprintf_r+0x110>
 80060c4:	06d1      	lsls	r1, r2, #27
 80060c6:	bf44      	itt	mi
 80060c8:	2320      	movmi	r3, #32
 80060ca:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80060ce:	0713      	lsls	r3, r2, #28
 80060d0:	bf44      	itt	mi
 80060d2:	232b      	movmi	r3, #43	@ 0x2b
 80060d4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80060d8:	f89a 3000 	ldrb.w	r3, [sl]
 80060dc:	2b2a      	cmp	r3, #42	@ 0x2a
 80060de:	d015      	beq.n	800610c <_vfiprintf_r+0x120>
 80060e0:	4654      	mov	r4, sl
 80060e2:	2000      	movs	r0, #0
 80060e4:	f04f 0c0a 	mov.w	ip, #10
 80060e8:	9a07      	ldr	r2, [sp, #28]
 80060ea:	4621      	mov	r1, r4
 80060ec:	f811 3b01 	ldrb.w	r3, [r1], #1
 80060f0:	3b30      	subs	r3, #48	@ 0x30
 80060f2:	2b09      	cmp	r3, #9
 80060f4:	d94b      	bls.n	800618e <_vfiprintf_r+0x1a2>
 80060f6:	b1b0      	cbz	r0, 8006126 <_vfiprintf_r+0x13a>
 80060f8:	9207      	str	r2, [sp, #28]
 80060fa:	e014      	b.n	8006126 <_vfiprintf_r+0x13a>
 80060fc:	eba0 0308 	sub.w	r3, r0, r8
 8006100:	fa09 f303 	lsl.w	r3, r9, r3
 8006104:	4313      	orrs	r3, r2
 8006106:	46a2      	mov	sl, r4
 8006108:	9304      	str	r3, [sp, #16]
 800610a:	e7d2      	b.n	80060b2 <_vfiprintf_r+0xc6>
 800610c:	9b03      	ldr	r3, [sp, #12]
 800610e:	1d19      	adds	r1, r3, #4
 8006110:	681b      	ldr	r3, [r3, #0]
 8006112:	9103      	str	r1, [sp, #12]
 8006114:	2b00      	cmp	r3, #0
 8006116:	bfbb      	ittet	lt
 8006118:	425b      	neglt	r3, r3
 800611a:	f042 0202 	orrlt.w	r2, r2, #2
 800611e:	9307      	strge	r3, [sp, #28]
 8006120:	9307      	strlt	r3, [sp, #28]
 8006122:	bfb8      	it	lt
 8006124:	9204      	strlt	r2, [sp, #16]
 8006126:	7823      	ldrb	r3, [r4, #0]
 8006128:	2b2e      	cmp	r3, #46	@ 0x2e
 800612a:	d10a      	bne.n	8006142 <_vfiprintf_r+0x156>
 800612c:	7863      	ldrb	r3, [r4, #1]
 800612e:	2b2a      	cmp	r3, #42	@ 0x2a
 8006130:	d132      	bne.n	8006198 <_vfiprintf_r+0x1ac>
 8006132:	9b03      	ldr	r3, [sp, #12]
 8006134:	3402      	adds	r4, #2
 8006136:	1d1a      	adds	r2, r3, #4
 8006138:	681b      	ldr	r3, [r3, #0]
 800613a:	9203      	str	r2, [sp, #12]
 800613c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8006140:	9305      	str	r3, [sp, #20]
 8006142:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 800620c <_vfiprintf_r+0x220>
 8006146:	2203      	movs	r2, #3
 8006148:	4650      	mov	r0, sl
 800614a:	7821      	ldrb	r1, [r4, #0]
 800614c:	f7fc fe79 	bl	8002e42 <memchr>
 8006150:	b138      	cbz	r0, 8006162 <_vfiprintf_r+0x176>
 8006152:	2240      	movs	r2, #64	@ 0x40
 8006154:	9b04      	ldr	r3, [sp, #16]
 8006156:	eba0 000a 	sub.w	r0, r0, sl
 800615a:	4082      	lsls	r2, r0
 800615c:	4313      	orrs	r3, r2
 800615e:	3401      	adds	r4, #1
 8006160:	9304      	str	r3, [sp, #16]
 8006162:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006166:	2206      	movs	r2, #6
 8006168:	4829      	ldr	r0, [pc, #164]	@ (8006210 <_vfiprintf_r+0x224>)
 800616a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800616e:	f7fc fe68 	bl	8002e42 <memchr>
 8006172:	2800      	cmp	r0, #0
 8006174:	d03f      	beq.n	80061f6 <_vfiprintf_r+0x20a>
 8006176:	4b27      	ldr	r3, [pc, #156]	@ (8006214 <_vfiprintf_r+0x228>)
 8006178:	bb1b      	cbnz	r3, 80061c2 <_vfiprintf_r+0x1d6>
 800617a:	9b03      	ldr	r3, [sp, #12]
 800617c:	3307      	adds	r3, #7
 800617e:	f023 0307 	bic.w	r3, r3, #7
 8006182:	3308      	adds	r3, #8
 8006184:	9303      	str	r3, [sp, #12]
 8006186:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006188:	443b      	add	r3, r7
 800618a:	9309      	str	r3, [sp, #36]	@ 0x24
 800618c:	e76a      	b.n	8006064 <_vfiprintf_r+0x78>
 800618e:	460c      	mov	r4, r1
 8006190:	2001      	movs	r0, #1
 8006192:	fb0c 3202 	mla	r2, ip, r2, r3
 8006196:	e7a8      	b.n	80060ea <_vfiprintf_r+0xfe>
 8006198:	2300      	movs	r3, #0
 800619a:	f04f 0c0a 	mov.w	ip, #10
 800619e:	4619      	mov	r1, r3
 80061a0:	3401      	adds	r4, #1
 80061a2:	9305      	str	r3, [sp, #20]
 80061a4:	4620      	mov	r0, r4
 80061a6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80061aa:	3a30      	subs	r2, #48	@ 0x30
 80061ac:	2a09      	cmp	r2, #9
 80061ae:	d903      	bls.n	80061b8 <_vfiprintf_r+0x1cc>
 80061b0:	2b00      	cmp	r3, #0
 80061b2:	d0c6      	beq.n	8006142 <_vfiprintf_r+0x156>
 80061b4:	9105      	str	r1, [sp, #20]
 80061b6:	e7c4      	b.n	8006142 <_vfiprintf_r+0x156>
 80061b8:	4604      	mov	r4, r0
 80061ba:	2301      	movs	r3, #1
 80061bc:	fb0c 2101 	mla	r1, ip, r1, r2
 80061c0:	e7f0      	b.n	80061a4 <_vfiprintf_r+0x1b8>
 80061c2:	ab03      	add	r3, sp, #12
 80061c4:	9300      	str	r3, [sp, #0]
 80061c6:	462a      	mov	r2, r5
 80061c8:	4630      	mov	r0, r6
 80061ca:	4b13      	ldr	r3, [pc, #76]	@ (8006218 <_vfiprintf_r+0x22c>)
 80061cc:	a904      	add	r1, sp, #16
 80061ce:	f7fb fec5 	bl	8001f5c <_printf_float>
 80061d2:	4607      	mov	r7, r0
 80061d4:	1c78      	adds	r0, r7, #1
 80061d6:	d1d6      	bne.n	8006186 <_vfiprintf_r+0x19a>
 80061d8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80061da:	07d9      	lsls	r1, r3, #31
 80061dc:	d405      	bmi.n	80061ea <_vfiprintf_r+0x1fe>
 80061de:	89ab      	ldrh	r3, [r5, #12]
 80061e0:	059a      	lsls	r2, r3, #22
 80061e2:	d402      	bmi.n	80061ea <_vfiprintf_r+0x1fe>
 80061e4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80061e6:	f7fc fe2b 	bl	8002e40 <__retarget_lock_release_recursive>
 80061ea:	89ab      	ldrh	r3, [r5, #12]
 80061ec:	065b      	lsls	r3, r3, #25
 80061ee:	f53f af1f 	bmi.w	8006030 <_vfiprintf_r+0x44>
 80061f2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80061f4:	e71e      	b.n	8006034 <_vfiprintf_r+0x48>
 80061f6:	ab03      	add	r3, sp, #12
 80061f8:	9300      	str	r3, [sp, #0]
 80061fa:	462a      	mov	r2, r5
 80061fc:	4630      	mov	r0, r6
 80061fe:	4b06      	ldr	r3, [pc, #24]	@ (8006218 <_vfiprintf_r+0x22c>)
 8006200:	a904      	add	r1, sp, #16
 8006202:	f7fc f949 	bl	8002498 <_printf_i>
 8006206:	e7e4      	b.n	80061d2 <_vfiprintf_r+0x1e6>
 8006208:	08006889 	.word	0x08006889
 800620c:	0800688f 	.word	0x0800688f
 8006210:	08006893 	.word	0x08006893
 8006214:	08001f5d 	.word	0x08001f5d
 8006218:	08005fc9 	.word	0x08005fc9

0800621c <__swbuf_r>:
 800621c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800621e:	460e      	mov	r6, r1
 8006220:	4614      	mov	r4, r2
 8006222:	4605      	mov	r5, r0
 8006224:	b118      	cbz	r0, 800622e <__swbuf_r+0x12>
 8006226:	6a03      	ldr	r3, [r0, #32]
 8006228:	b90b      	cbnz	r3, 800622e <__swbuf_r+0x12>
 800622a:	f7fc fcf1 	bl	8002c10 <__sinit>
 800622e:	69a3      	ldr	r3, [r4, #24]
 8006230:	60a3      	str	r3, [r4, #8]
 8006232:	89a3      	ldrh	r3, [r4, #12]
 8006234:	071a      	lsls	r2, r3, #28
 8006236:	d501      	bpl.n	800623c <__swbuf_r+0x20>
 8006238:	6923      	ldr	r3, [r4, #16]
 800623a:	b943      	cbnz	r3, 800624e <__swbuf_r+0x32>
 800623c:	4621      	mov	r1, r4
 800623e:	4628      	mov	r0, r5
 8006240:	f000 f82a 	bl	8006298 <__swsetup_r>
 8006244:	b118      	cbz	r0, 800624e <__swbuf_r+0x32>
 8006246:	f04f 37ff 	mov.w	r7, #4294967295
 800624a:	4638      	mov	r0, r7
 800624c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800624e:	6823      	ldr	r3, [r4, #0]
 8006250:	6922      	ldr	r2, [r4, #16]
 8006252:	b2f6      	uxtb	r6, r6
 8006254:	1a98      	subs	r0, r3, r2
 8006256:	6963      	ldr	r3, [r4, #20]
 8006258:	4637      	mov	r7, r6
 800625a:	4283      	cmp	r3, r0
 800625c:	dc05      	bgt.n	800626a <__swbuf_r+0x4e>
 800625e:	4621      	mov	r1, r4
 8006260:	4628      	mov	r0, r5
 8006262:	f7ff fa4b 	bl	80056fc <_fflush_r>
 8006266:	2800      	cmp	r0, #0
 8006268:	d1ed      	bne.n	8006246 <__swbuf_r+0x2a>
 800626a:	68a3      	ldr	r3, [r4, #8]
 800626c:	3b01      	subs	r3, #1
 800626e:	60a3      	str	r3, [r4, #8]
 8006270:	6823      	ldr	r3, [r4, #0]
 8006272:	1c5a      	adds	r2, r3, #1
 8006274:	6022      	str	r2, [r4, #0]
 8006276:	701e      	strb	r6, [r3, #0]
 8006278:	6962      	ldr	r2, [r4, #20]
 800627a:	1c43      	adds	r3, r0, #1
 800627c:	429a      	cmp	r2, r3
 800627e:	d004      	beq.n	800628a <__swbuf_r+0x6e>
 8006280:	89a3      	ldrh	r3, [r4, #12]
 8006282:	07db      	lsls	r3, r3, #31
 8006284:	d5e1      	bpl.n	800624a <__swbuf_r+0x2e>
 8006286:	2e0a      	cmp	r6, #10
 8006288:	d1df      	bne.n	800624a <__swbuf_r+0x2e>
 800628a:	4621      	mov	r1, r4
 800628c:	4628      	mov	r0, r5
 800628e:	f7ff fa35 	bl	80056fc <_fflush_r>
 8006292:	2800      	cmp	r0, #0
 8006294:	d0d9      	beq.n	800624a <__swbuf_r+0x2e>
 8006296:	e7d6      	b.n	8006246 <__swbuf_r+0x2a>

08006298 <__swsetup_r>:
 8006298:	b538      	push	{r3, r4, r5, lr}
 800629a:	4b29      	ldr	r3, [pc, #164]	@ (8006340 <__swsetup_r+0xa8>)
 800629c:	4605      	mov	r5, r0
 800629e:	6818      	ldr	r0, [r3, #0]
 80062a0:	460c      	mov	r4, r1
 80062a2:	b118      	cbz	r0, 80062ac <__swsetup_r+0x14>
 80062a4:	6a03      	ldr	r3, [r0, #32]
 80062a6:	b90b      	cbnz	r3, 80062ac <__swsetup_r+0x14>
 80062a8:	f7fc fcb2 	bl	8002c10 <__sinit>
 80062ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80062b0:	0719      	lsls	r1, r3, #28
 80062b2:	d422      	bmi.n	80062fa <__swsetup_r+0x62>
 80062b4:	06da      	lsls	r2, r3, #27
 80062b6:	d407      	bmi.n	80062c8 <__swsetup_r+0x30>
 80062b8:	2209      	movs	r2, #9
 80062ba:	602a      	str	r2, [r5, #0]
 80062bc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80062c0:	f04f 30ff 	mov.w	r0, #4294967295
 80062c4:	81a3      	strh	r3, [r4, #12]
 80062c6:	e033      	b.n	8006330 <__swsetup_r+0x98>
 80062c8:	0758      	lsls	r0, r3, #29
 80062ca:	d512      	bpl.n	80062f2 <__swsetup_r+0x5a>
 80062cc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80062ce:	b141      	cbz	r1, 80062e2 <__swsetup_r+0x4a>
 80062d0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80062d4:	4299      	cmp	r1, r3
 80062d6:	d002      	beq.n	80062de <__swsetup_r+0x46>
 80062d8:	4628      	mov	r0, r5
 80062da:	f7fd fc15 	bl	8003b08 <_free_r>
 80062de:	2300      	movs	r3, #0
 80062e0:	6363      	str	r3, [r4, #52]	@ 0x34
 80062e2:	89a3      	ldrh	r3, [r4, #12]
 80062e4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80062e8:	81a3      	strh	r3, [r4, #12]
 80062ea:	2300      	movs	r3, #0
 80062ec:	6063      	str	r3, [r4, #4]
 80062ee:	6923      	ldr	r3, [r4, #16]
 80062f0:	6023      	str	r3, [r4, #0]
 80062f2:	89a3      	ldrh	r3, [r4, #12]
 80062f4:	f043 0308 	orr.w	r3, r3, #8
 80062f8:	81a3      	strh	r3, [r4, #12]
 80062fa:	6923      	ldr	r3, [r4, #16]
 80062fc:	b94b      	cbnz	r3, 8006312 <__swsetup_r+0x7a>
 80062fe:	89a3      	ldrh	r3, [r4, #12]
 8006300:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8006304:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006308:	d003      	beq.n	8006312 <__swsetup_r+0x7a>
 800630a:	4621      	mov	r1, r4
 800630c:	4628      	mov	r0, r5
 800630e:	f000 f882 	bl	8006416 <__smakebuf_r>
 8006312:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006316:	f013 0201 	ands.w	r2, r3, #1
 800631a:	d00a      	beq.n	8006332 <__swsetup_r+0x9a>
 800631c:	2200      	movs	r2, #0
 800631e:	60a2      	str	r2, [r4, #8]
 8006320:	6962      	ldr	r2, [r4, #20]
 8006322:	4252      	negs	r2, r2
 8006324:	61a2      	str	r2, [r4, #24]
 8006326:	6922      	ldr	r2, [r4, #16]
 8006328:	b942      	cbnz	r2, 800633c <__swsetup_r+0xa4>
 800632a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800632e:	d1c5      	bne.n	80062bc <__swsetup_r+0x24>
 8006330:	bd38      	pop	{r3, r4, r5, pc}
 8006332:	0799      	lsls	r1, r3, #30
 8006334:	bf58      	it	pl
 8006336:	6962      	ldrpl	r2, [r4, #20]
 8006338:	60a2      	str	r2, [r4, #8]
 800633a:	e7f4      	b.n	8006326 <__swsetup_r+0x8e>
 800633c:	2000      	movs	r0, #0
 800633e:	e7f7      	b.n	8006330 <__swsetup_r+0x98>
 8006340:	20000018 	.word	0x20000018

08006344 <_raise_r>:
 8006344:	291f      	cmp	r1, #31
 8006346:	b538      	push	{r3, r4, r5, lr}
 8006348:	4605      	mov	r5, r0
 800634a:	460c      	mov	r4, r1
 800634c:	d904      	bls.n	8006358 <_raise_r+0x14>
 800634e:	2316      	movs	r3, #22
 8006350:	6003      	str	r3, [r0, #0]
 8006352:	f04f 30ff 	mov.w	r0, #4294967295
 8006356:	bd38      	pop	{r3, r4, r5, pc}
 8006358:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800635a:	b112      	cbz	r2, 8006362 <_raise_r+0x1e>
 800635c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006360:	b94b      	cbnz	r3, 8006376 <_raise_r+0x32>
 8006362:	4628      	mov	r0, r5
 8006364:	f000 f830 	bl	80063c8 <_getpid_r>
 8006368:	4622      	mov	r2, r4
 800636a:	4601      	mov	r1, r0
 800636c:	4628      	mov	r0, r5
 800636e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006372:	f000 b817 	b.w	80063a4 <_kill_r>
 8006376:	2b01      	cmp	r3, #1
 8006378:	d00a      	beq.n	8006390 <_raise_r+0x4c>
 800637a:	1c59      	adds	r1, r3, #1
 800637c:	d103      	bne.n	8006386 <_raise_r+0x42>
 800637e:	2316      	movs	r3, #22
 8006380:	6003      	str	r3, [r0, #0]
 8006382:	2001      	movs	r0, #1
 8006384:	e7e7      	b.n	8006356 <_raise_r+0x12>
 8006386:	2100      	movs	r1, #0
 8006388:	4620      	mov	r0, r4
 800638a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800638e:	4798      	blx	r3
 8006390:	2000      	movs	r0, #0
 8006392:	e7e0      	b.n	8006356 <_raise_r+0x12>

08006394 <raise>:
 8006394:	4b02      	ldr	r3, [pc, #8]	@ (80063a0 <raise+0xc>)
 8006396:	4601      	mov	r1, r0
 8006398:	6818      	ldr	r0, [r3, #0]
 800639a:	f7ff bfd3 	b.w	8006344 <_raise_r>
 800639e:	bf00      	nop
 80063a0:	20000018 	.word	0x20000018

080063a4 <_kill_r>:
 80063a4:	b538      	push	{r3, r4, r5, lr}
 80063a6:	2300      	movs	r3, #0
 80063a8:	4d06      	ldr	r5, [pc, #24]	@ (80063c4 <_kill_r+0x20>)
 80063aa:	4604      	mov	r4, r0
 80063ac:	4608      	mov	r0, r1
 80063ae:	4611      	mov	r1, r2
 80063b0:	602b      	str	r3, [r5, #0]
 80063b2:	f7fa fd3b 	bl	8000e2c <_kill>
 80063b6:	1c43      	adds	r3, r0, #1
 80063b8:	d102      	bne.n	80063c0 <_kill_r+0x1c>
 80063ba:	682b      	ldr	r3, [r5, #0]
 80063bc:	b103      	cbz	r3, 80063c0 <_kill_r+0x1c>
 80063be:	6023      	str	r3, [r4, #0]
 80063c0:	bd38      	pop	{r3, r4, r5, pc}
 80063c2:	bf00      	nop
 80063c4:	20000334 	.word	0x20000334

080063c8 <_getpid_r>:
 80063c8:	f7fa bd29 	b.w	8000e1e <_getpid>

080063cc <__swhatbuf_r>:
 80063cc:	b570      	push	{r4, r5, r6, lr}
 80063ce:	460c      	mov	r4, r1
 80063d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80063d4:	4615      	mov	r5, r2
 80063d6:	2900      	cmp	r1, #0
 80063d8:	461e      	mov	r6, r3
 80063da:	b096      	sub	sp, #88	@ 0x58
 80063dc:	da0c      	bge.n	80063f8 <__swhatbuf_r+0x2c>
 80063de:	89a3      	ldrh	r3, [r4, #12]
 80063e0:	2100      	movs	r1, #0
 80063e2:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80063e6:	bf14      	ite	ne
 80063e8:	2340      	movne	r3, #64	@ 0x40
 80063ea:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80063ee:	2000      	movs	r0, #0
 80063f0:	6031      	str	r1, [r6, #0]
 80063f2:	602b      	str	r3, [r5, #0]
 80063f4:	b016      	add	sp, #88	@ 0x58
 80063f6:	bd70      	pop	{r4, r5, r6, pc}
 80063f8:	466a      	mov	r2, sp
 80063fa:	f000 f849 	bl	8006490 <_fstat_r>
 80063fe:	2800      	cmp	r0, #0
 8006400:	dbed      	blt.n	80063de <__swhatbuf_r+0x12>
 8006402:	9901      	ldr	r1, [sp, #4]
 8006404:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8006408:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800640c:	4259      	negs	r1, r3
 800640e:	4159      	adcs	r1, r3
 8006410:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8006414:	e7eb      	b.n	80063ee <__swhatbuf_r+0x22>

08006416 <__smakebuf_r>:
 8006416:	898b      	ldrh	r3, [r1, #12]
 8006418:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800641a:	079d      	lsls	r5, r3, #30
 800641c:	4606      	mov	r6, r0
 800641e:	460c      	mov	r4, r1
 8006420:	d507      	bpl.n	8006432 <__smakebuf_r+0x1c>
 8006422:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8006426:	6023      	str	r3, [r4, #0]
 8006428:	6123      	str	r3, [r4, #16]
 800642a:	2301      	movs	r3, #1
 800642c:	6163      	str	r3, [r4, #20]
 800642e:	b003      	add	sp, #12
 8006430:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006432:	466a      	mov	r2, sp
 8006434:	ab01      	add	r3, sp, #4
 8006436:	f7ff ffc9 	bl	80063cc <__swhatbuf_r>
 800643a:	9f00      	ldr	r7, [sp, #0]
 800643c:	4605      	mov	r5, r0
 800643e:	4639      	mov	r1, r7
 8006440:	4630      	mov	r0, r6
 8006442:	f7fd fbd3 	bl	8003bec <_malloc_r>
 8006446:	b948      	cbnz	r0, 800645c <__smakebuf_r+0x46>
 8006448:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800644c:	059a      	lsls	r2, r3, #22
 800644e:	d4ee      	bmi.n	800642e <__smakebuf_r+0x18>
 8006450:	f023 0303 	bic.w	r3, r3, #3
 8006454:	f043 0302 	orr.w	r3, r3, #2
 8006458:	81a3      	strh	r3, [r4, #12]
 800645a:	e7e2      	b.n	8006422 <__smakebuf_r+0xc>
 800645c:	89a3      	ldrh	r3, [r4, #12]
 800645e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8006462:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006466:	81a3      	strh	r3, [r4, #12]
 8006468:	9b01      	ldr	r3, [sp, #4]
 800646a:	6020      	str	r0, [r4, #0]
 800646c:	b15b      	cbz	r3, 8006486 <__smakebuf_r+0x70>
 800646e:	4630      	mov	r0, r6
 8006470:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006474:	f000 f81e 	bl	80064b4 <_isatty_r>
 8006478:	b128      	cbz	r0, 8006486 <__smakebuf_r+0x70>
 800647a:	89a3      	ldrh	r3, [r4, #12]
 800647c:	f023 0303 	bic.w	r3, r3, #3
 8006480:	f043 0301 	orr.w	r3, r3, #1
 8006484:	81a3      	strh	r3, [r4, #12]
 8006486:	89a3      	ldrh	r3, [r4, #12]
 8006488:	431d      	orrs	r5, r3
 800648a:	81a5      	strh	r5, [r4, #12]
 800648c:	e7cf      	b.n	800642e <__smakebuf_r+0x18>
	...

08006490 <_fstat_r>:
 8006490:	b538      	push	{r3, r4, r5, lr}
 8006492:	2300      	movs	r3, #0
 8006494:	4d06      	ldr	r5, [pc, #24]	@ (80064b0 <_fstat_r+0x20>)
 8006496:	4604      	mov	r4, r0
 8006498:	4608      	mov	r0, r1
 800649a:	4611      	mov	r1, r2
 800649c:	602b      	str	r3, [r5, #0]
 800649e:	f7fa fd24 	bl	8000eea <_fstat>
 80064a2:	1c43      	adds	r3, r0, #1
 80064a4:	d102      	bne.n	80064ac <_fstat_r+0x1c>
 80064a6:	682b      	ldr	r3, [r5, #0]
 80064a8:	b103      	cbz	r3, 80064ac <_fstat_r+0x1c>
 80064aa:	6023      	str	r3, [r4, #0]
 80064ac:	bd38      	pop	{r3, r4, r5, pc}
 80064ae:	bf00      	nop
 80064b0:	20000334 	.word	0x20000334

080064b4 <_isatty_r>:
 80064b4:	b538      	push	{r3, r4, r5, lr}
 80064b6:	2300      	movs	r3, #0
 80064b8:	4d05      	ldr	r5, [pc, #20]	@ (80064d0 <_isatty_r+0x1c>)
 80064ba:	4604      	mov	r4, r0
 80064bc:	4608      	mov	r0, r1
 80064be:	602b      	str	r3, [r5, #0]
 80064c0:	f7fa fd22 	bl	8000f08 <_isatty>
 80064c4:	1c43      	adds	r3, r0, #1
 80064c6:	d102      	bne.n	80064ce <_isatty_r+0x1a>
 80064c8:	682b      	ldr	r3, [r5, #0]
 80064ca:	b103      	cbz	r3, 80064ce <_isatty_r+0x1a>
 80064cc:	6023      	str	r3, [r4, #0]
 80064ce:	bd38      	pop	{r3, r4, r5, pc}
 80064d0:	20000334 	.word	0x20000334

080064d4 <_init>:
 80064d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80064d6:	bf00      	nop
 80064d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80064da:	bc08      	pop	{r3}
 80064dc:	469e      	mov	lr, r3
 80064de:	4770      	bx	lr

080064e0 <_fini>:
 80064e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80064e2:	bf00      	nop
 80064e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80064e6:	bc08      	pop	{r3}
 80064e8:	469e      	mov	lr, r3
 80064ea:	4770      	bx	lr
